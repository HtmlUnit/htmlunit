1. ready: jQuery.isReady (2) [fc73fe42]
2. ready: jQuery ready (10) [b6c34eda]
3. basic: ajax (4) [b948dcce]
4. basic: attributes (6) [0b3d9985]
5. basic: css (3) [9a9f4995]
6. basic: core (28) [b949da4d]
7. basic: data (4) [b94a1a58]
8. basic: dimensions (3) [0bc22ffb]
9. basic: event (1) [70109dac]
10. basic: manipulation (5) [4555384b]
11. basic: offset (3) [a2329bc1]
12. basic: selector (2) [5410178d]
13. basic: serialize (2) [720bb8f2]
14. basic: traversing (12) [1c17bddd]
15. basic: wrap (3) [b952faf8]
16. core: Basic requirements (7) [b8dae67f]
17. core: jQuery() (30) [0680cf5c]
18. core: jQuery(selector, context) (3) [196dd81a]
19. core: selector state (18) [8d8d06ad]
20. core: globalEval (2) [0440d2fc]
21. core: noConflict (7) [59f980d0]
22. core: noConflict (7) [e5369950]
23. core: trim (13) [9dba41ff]
24. core: type (28) [9dba5d17]
25. core: type for `Symbol` (2) [8f04ff28]
26. core: isPlainObject (18) [887480e2]
27. core: isPlainObject(Object.create() (2) [d7aebc66]
28. core: isPlainObject(Symbol) (2) [26db572b]
29. core: isFunction (19) [5a7e4f3f]
30. core: isNumeric (38) [0d28b6c6]
31. core: isNumeric(Symbol) (2) [ef7d690f]
32. core: isXMLDoc - HTML (4) [e01cfc16]
33. core: XSS via location.hash (1) [78959170]
34. core: isXMLDoc - XML (3) [59cf9e2c]
35. core: isWindow (14) [72386517]
36. core: jQuery('html') (18) [a16831a7]
37. core: jQuery(tag-hyphenated elements) gh-1987 (17) [1fccbb69]
38. core: jQuery('massive html #7990') (3) [9798de1f]
39. core: jQuery('html', context) (1) [21c16e10]
40. core: jQuery(selector, xml).text(str) - loaded via xml document (2) [fafab1b5]
41. core: end() (3) [18b8b0df]
42. core: length (1) [09d60583]
43. core: get() (1) [18d1049a]
44. core: toArray() (1) [1809f262]
45. core: inArray() (19) [51380078]
46. core: get(Number) (2) [56995191]
47. core: get(-Number) (2) [17b75382]
48. core: each(Function) (1) [0fa24667]
49. core: slice() (7) [aedfaf16]
50. core: first()/last() (4) [976fc3d2]
51. core: map() (2) [1923b120]
52. core: jQuery.map (25) [698e2e09]
53. core: jQuery.merge() (10) [8265e566]
54. core: jQuery.grep() (8) [8f4e4e8a]
55. core: jQuery.grep(Array-like) (7) [ac3d13ff]
56. core: jQuery.extend(Object, Object) (28) [bbeda45c]
57. core: jQuery.extend(Object, Object {created with "defineProperties"}) (2) [c487b9d8]
58. core: jQuery.each(Object,Function) (23) [5889c4d8]
59. core: jQuery.each/map(undefined/null,Function) (1) [8a0df372]
60. core: JIT compilation does not interfere with length retrieval (gh-2145) (4) [35566d78]
61. core: jQuery.makeArray (15) [696f93f8]
62. core: jQuery.inArray (3) [bb7b4e61]
63. core: jQuery.isEmptyObject (2) [f2b417cf]
64. core: jQuery.proxy (9) [3eecdbdb]
65. core: jQuery.parseHTML (17) [b2541bcb]
66. core: jQuery.parseJSON (20) [b2550108]
67. core: jQuery.parseXML (8) [2f0b33d7]
68. core: jQuery.camelCase() (7) [b504e034]
69. core: Conditional compilation compatibility (#13274) (3) [a911fa9b]
70. core: document ready when jQuery loaded asynchronously (#13655) (1) [377d9701]
71. core: Tolerating alias-masked DOM properties (#14074) (1) [676cffc3]
72. core: Don't call window.onready (#14802) (1) [3cfc6632]
73. core: Iterability of jQuery objects (gh-1693) (1) [d6e53216]
74. callbacks: jQuery.Callbacks( '' ) - no filter (28) [7e717211]
75. callbacks: jQuery.Callbacks( { } ) - no filter (28) [379676d3]
76. callbacks: jQuery.Callbacks( '' ) - filter (28) [e676825e]
77. callbacks: jQuery.Callbacks( { } ) - filter (28) [e55384dc]
78. callbacks: jQuery.Callbacks( 'once' ) - no filter (28) [b69b7af0]
79. callbacks: jQuery.Callbacks( { 'once': true } ) - no filter (28) [2c977bc6]
80. callbacks: jQuery.Callbacks( 'once' ) - filter (28) [9a493ddf]
81. callbacks: jQuery.Callbacks( { 'once': true } ) - filter (28) [5ceadcc9]
82. callbacks: jQuery.Callbacks( 'memory' ) - no filter (28) [18655130]
83. callbacks: jQuery.Callbacks( { 'memory': true } ) - no filter (28) [aff804c6]
84. callbacks: jQuery.Callbacks( 'memory' ) - filter (28) [15790f9f]
85. callbacks: jQuery.Callbacks( { 'memory': true } ) - filter (28) [6b7ef3c9]
86. callbacks: jQuery.Callbacks( 'unique' ) - no filter (28) [46f00860]
87. callbacks: jQuery.Callbacks( { 'unique': true } ) - no filter (28) [6cb08bf6]
88. callbacks: jQuery.Callbacks( 'unique' ) - filter (28) [40cd266f]
89. callbacks: jQuery.Callbacks( { 'unique': true } ) - filter (28) [5bf73a99]
90. callbacks: jQuery.Callbacks( 'stopOnFalse' ) - no filter (28) [a8ca7f15]
91. callbacks: jQuery.Callbacks( { 'stopOnFalse': true } ) - no filter (28) [afdb5241]
92. callbacks: jQuery.Callbacks( 'stopOnFalse' ) - filter (28) [64ac33da]
93. callbacks: jQuery.Callbacks( { 'stopOnFalse': true } ) - filter (28) [d264102e]
94. callbacks: jQuery.Callbacks( 'once memory' ) - no filter (28) [15ef8bf7]
95. callbacks: jQuery.Callbacks( { 'once': true, 'memory': true } ) - no filter (28) [ff40c7ed]
96. callbacks: jQuery.Callbacks( 'once memory' ) - filter (28) [28232238]
97. callbacks: jQuery.Callbacks( { 'once': true, 'memory': true } ) - filter (28) [644e5a02]
98. callbacks: jQuery.Callbacks( 'once unique' ) - no filter (28) [447a4327]
99. callbacks: jQuery.Callbacks( { 'once': true, 'unique': true } ) - no filter (28) [bbf94f1d]
100. callbacks: jQuery.Callbacks( 'once unique' ) - filter (28) [53773908]
101. callbacks: jQuery.Callbacks( { 'once': true, 'unique': true } ) - filter (28) [54c6a0d2]
102. callbacks: jQuery.Callbacks( 'once stopOnFalse' ) - no filter (28) [de28e8ae]
103. callbacks: jQuery.Callbacks( { 'once': true, 'stopOnFalse': true } ) - no filter (28) [b1216f7a]
104. callbacks: jQuery.Callbacks( 'once stopOnFalse' ) - filter (28) [2892d8e1]
105. callbacks: jQuery.Callbacks( { 'once': true, 'stopOnFalse': true } ) - filter (28) [7288a595]
106. callbacks: jQuery.Callbacks( 'memory unique' ) - no filter (28) [325ee4e7]
107. callbacks: jQuery.Callbacks( { 'memory': true, 'unique': true } ) - no filter (28) [6727d81d]
108. callbacks: jQuery.Callbacks( 'memory unique' ) - filter (28) [73ebef48]
109. callbacks: jQuery.Callbacks( { 'memory': true, 'unique': true } ) - filter (28) [fe4cb7d2]
110. callbacks: jQuery.Callbacks( 'memory stopOnFalse' ) - no filter (28) [02a35eee]
111. callbacks: jQuery.Callbacks( { 'memory': true, 'stopOnFalse': true } ) - no filter (28) [9aa0867a]
112. callbacks: jQuery.Callbacks( 'memory stopOnFalse' ) - filter (28) [2fd60aa1]
113. callbacks: jQuery.Callbacks( { 'memory': true, 'stopOnFalse': true } ) - filter (28) [0c38ee95]
114. callbacks: jQuery.Callbacks( 'unique stopOnFalse' ) - no filter (28) [1464ce1e]
115. callbacks: jQuery.Callbacks( { 'unique': true, 'stopOnFalse': true } ) - no filter (28) [3f655d4a]
116. callbacks: jQuery.Callbacks( 'unique stopOnFalse' ) - filter (28) [0a2e6971]
117. callbacks: jQuery.Callbacks( { 'unique': true, 'stopOnFalse': true } ) - filter (28) [747009c5]
118. callbacks: jQuery.Callbacks( options ) - options are copied (1) [923a6442]
119. callbacks: jQuery.Callbacks.fireWith - arguments are copied (1) [78b2320f]
120. callbacks: jQuery.Callbacks.remove - should remove all instances (1) [cb02f2c3]
121. callbacks: jQuery.Callbacks.has (13) [6fd17bf8]
122. callbacks: jQuery.Callbacks() - adding a string doesn't cause a stack overflow (1) [5258dfa5]
123. callbacks: jQuery.Callbacks() - disabled callback doesn't fire (gh-1790) (1) [2e3f4299]
124. deferred: jQuery.Deferred (23) [09ee1fb2]
125. deferred: jQuery.Deferred - new operator (23) [62d20265]
126. deferred: jQuery.Deferred - chainability (10) [8f1ac28a]
127. deferred: jQuery.Deferred.then - filtering (done) (4) [d0d4d16f]
128. deferred: jQuery.Deferred.then - filtering (fail) (4) [d0ea9153]
129. deferred: jQuery.Deferred.then - filtering (progress) (3) [357d8424]
130. deferred: jQuery.Deferred.then - deferred (done) (3) [877e85a6]
131. deferred: jQuery.Deferred.then - deferred (fail) (3) [8794458a]
132. deferred: jQuery.Deferred.then - deferred (progress) (3) [5b3444db]
133. deferred: jQuery.Deferred.then - context (7) [d230e435]
134. deferred: jQuery.when (37) [6b29306d]
135. deferred: jQuery.when - joined (119) [fe8b6cef]
136. deferred: jQuery.when - resolved (6) [c891101e]
137. deprecated: bind/unbind (4) [7e81b3ff]
138. deprecated: delegate/undelegate (2) [5f1b027f]
139. deprecated: size() (1) [3b5ebecb]
140. support: zoom of doom (#13089) (1) [04c165a3]
141. support: body background is not lost if set prior to loading jQuery (#9239) (2) [3bc9b579]
142. support: box-sizing does not affect jQuery.support.shrinkWrapBlocks (1) [71e9f67e]
143. support: A background on the testElement does not cause IE8 to crash (#9823) (1) [8d5f0b9f]
144. support: Check CSP (https://developer.mozilla.org/en-US/docs/Security/CSP) restrictions (1, 1, 2) [93b1cb37]
145. support: Verify that support tests resolve as expected per browser (1, 36, 37) [e1b3f3c8]
146. data: expando (1) [59d58323]
147. data: jQuery.data(div) (25) [f1b20eb8]
148. data: jQuery.data({}) (25) [419abc07]
149. data: jQuery.data(window) (25) [4c810139]
150. data: jQuery.data(document) (25) [7572f16e]
151. data: Expando cleanup (4) [f2c75a87]
152. data: Data is not being set on comment and text nodes (2) [2e27dfab]
153. data: acceptData (10) [ac476404]
154. data: jQuery().data() === undefined (#14101) (2) [bc9e4320]
155. data: .data() (5) [d972e5e7]
156. data: jQuery(Element).data(String, Object).data(String) (18) [45a0b398]
157. data: jQuery(plain Object).data(String, Object).data(String) (16) [eaf0a56f]
158. data: data-* attributes (43) [e11170de]
159. data: .data(Object) (4) [b21f7be8]
160. data: jQuery.removeData (10) [842bb84c]
161. data: .removeData() (6) [dde09a8b]
162. data: JSON serialization (#8108) (1) [c57d2337]
163. data: jQuery.data should follow html5 specification regarding camel casing (10) [d89a4121]
164. data: jQuery.data should not miss data with preset hyphenated property names (2) [d088f21e]
165. data: .data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values (24) [5b1a3e22]
166. data: jQuery.data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values (24) [ee44b820]
167. data: .removeData supports removal of hyphenated properties via array (#12786) (4) [34c1ffc9]
168. data: Triggering the removeData should not throw exceptions. (#10080) (1) [8a66db26]
169. data: Only check element attributes once when calling .data() - #8909 (2) [f7fc1685]
170. data: JSON data- attributes can have newlines (1) [0c916fc1]
171. data: enumerate data attrs on body (#14894) (1) [b8c46997]
172. data: .data(prop) does not create expando (1) [ae22eba9]
173. queue: queue() with other types (14) [cfea7bc8]
174. queue: queue(name) passes in the next item in the queue as a parameter (2) [a0b7b5e8]
175. queue: queue() passes in the next item in the queue as a parameter to fx queues (3) [b635b198]
176. queue: callbacks keep their place in the queue (5) [b44ac744]
177. queue: delay() (2) [67daca39]
178. queue: clearQueue(name) clears the queue (2) [cbec94c3]
179. queue: clearQueue() clears the fx queue (1) [43a0847c]
180. queue: fn.promise() - called when fx queue is empty (3) [3d95283f]
181. queue: fn.promise( "queue" ) - called whenever last queue function is dequeued (5) [bd53cbc7]
182. queue: fn.promise( "queue" ) - waits for animation to complete before resolving (2) [8c35be6e]
183. queue: .promise(obj) (2) [5302fde2]
184. queue: delay() can be stopped (3) [6927c207]
185. queue: queue stop hooks (2) [a3692fac]
186. attributes: jQuery.propFix integrity test (1) [6ba2179e]
187. attributes: attr(String) (50) [e3b0c806]
188. attributes: attr(String) on cloned elements, #9646 (4) [d30b9b85]
189. attributes: attr(String) in XML Files (3) [cbf8a58d]
190. attributes: attr(String, Function) (2) [e7a05bda]
191. attributes: attr(Hash) (3) [ce0ca229]
192. attributes: attr(String, Object) (71) [dd42a793]
193. attributes: attr - extending the boolean attrHandle (1) [951743f5]
194. attributes: attr(String, Object) - Loaded via XML document (2) [39a11351]
195. attributes: attr(String, Object) - Loaded via XML fragment (2) [a3e72486]
196. attributes: attr('tabindex') (8) [4e40e254]
197. attributes: attr('tabindex', value) (9) [ac9022c1]
198. attributes: removeAttr(String) (12) [88bb7eea]
199. attributes: removeAttr(String) in XML (7) [5ce00072]
200. attributes: removeAttr(Multi String, variable space width) (8) [0c02eb67]
201. attributes: prop(String, Object) (17) [5c3c4d05]
202. attributes: prop(String, Object) on null/undefined (14) [f72c08ce]
203. attributes: prop('tabindex') (11) [8bbb10c6]
204. attributes: image.prop( 'tabIndex' ) (1) [8ce93dbf]
205. attributes: prop('tabindex', value) (10) [ea2c300f]
206. attributes: option.prop('selected', true) affects select.selectedIndex (gh-2732) (2) [65dc3157]
207. attributes: removeProp(String) (6) [e462b65c]
208. attributes: val() after modification (1) [6376b503]
209. attributes: val() (26) [b03d455d]
210. attributes: val() with non-matching values on dropdown list (3) [e1a731fe]
211. attributes: val() respects numbers without exception (Bug #9319) (4) [114aac89]
212. attributes: val(String/Number) (9) [6de1bd4e]
213. attributes: val(Function) (9) [221ff865]
214. attributes: val(Array of Numbers) (Bug #7123) (4) [c6dd91b4]
215. attributes: val(Function) with incoming value (10) [41db3b56]
216. attributes: val(select) after form.reset() (Bug #2551) (3) [4e5c2644]
217. attributes: select.val(space characters) (gh-2978) (35) [d60711ee]
218. attributes: addClass(String) (9) [fe5d0aec]
219. attributes: addClass(Function) (9) [de2e1305]
220. attributes: addClass(Function) with incoming value (52) [d371c5f6]
221. attributes: removeClass(String) - simple (8) [926c1586]
222. attributes: removeClass(Function) - simple (8) [b788da4d]
223. attributes: removeClass(Function) with incoming value (52) [6f69a149]
224. attributes: removeClass() removes duplicates (1) [2f658969]
225. attributes: removeClass(undefined) is a no-op (1) [9a4915c6]
226. attributes: toggleClass(String|boolean|undefined[, boolean]) (19) [2b9e011f]
227. attributes: toggleClass(Function[, boolean]) (19) [0c5ee926]
228. attributes: toggleClass(Function[, boolean]) with incoming value (14) [86934197]
229. attributes: addClass, removeClass, hasClass (17) [a56f0856]
230. attributes: addClass, removeClass, hasClass on many elements (19) [cb2313a1]
231. attributes: contents().hasClass() returns correct values (2) [c32ecd68]
232. attributes: hasClass correctly interprets non-space separators (#13835) (4) [3dc381d0]
233. attributes: coords returns correct values in IE6/IE7, see #10828 (1) [7e4920d6]
234. attributes: should not throw at $(option).val() (#14686) (1) [822ce1ad]
235. attributes: option value not trimmed when setting via parent select (1) [2bbe56e2]
236. attributes: Insignificant white space returned for $(option).val() (#14858, gh-2978) (16) [8f794d6a]
237. attributes: SVG class manipulation (gh-2199) (12) [15a10f8c]
238. event: null or undefined handler (4) [4f7c55f4]
239. event: on() with non-null,defined data (2) [a75c7c8a]
240. event: Handler changes and .trigger() order (1) [92be6c97]
241. event: on(), with data (4) [67870fae]
242. event: click(), with data (3) [1bb483e9]
243. event: on(), with data, trigger with data (4) [e110c4fa]
244. event: on(), multiple events at once (2) [73ce31c1]
245. event: on(), five events at once (1) [83218ddf]
246. event: on(), multiple events at once and namespaces (7) [a567b4a0]
247. event: on(), namespace with special add (27) [5357ecdb]
248. event: on(), no data (1) [f9acca13]
249. event: on/one/off(Object) (6) [97deefda]
250. event: on/off(Object), on/off(Object, String) (6) [25945833]
251. event: on immediate propagation (2) [03abeb1e]
252. event: on bubbling, isDefaultPrevented, stopImmediatePropagation (3) [cc6b914d]
253. event: on(), iframes (1) [e65459b9]
254. event: on(), trigger change on select (5) [1452ed2b]
255. event: on(), namespaced events, cloned events (18) [83c2eae4]
256. event: on(), multi-namespaced events (6) [dd022686]
257. event: namespace-only event binding is a no-op (2) [dddfcdb9]
258. event: Empty namespace is ignored (1) [dd96e316]
259. event: on(), with same function (2) [0b544ace]
260. event: on(), make sure order is maintained (1) [0f22ec1f]
261. event: on(), with different this object (4) [13398616]
262. event: on(name, false), off(name, false) (3) [d4d7a3fe]
263. event: on(name, selector, false), off(name, selector, false) (3) [b1e4caa4]
264. event: on()/trigger()/off() on plain object (7) [2be9b583]
265. event: off(type) (1) [3378a8b4]
266. event: off(eventObject) (4) [39bba8ab]
267. event: hover() mouseenter mouseleave (1) [002bd3fa]
268. event: mouseover triggers mouseenter (1) [1ad46faf]
269. event: pointerover triggers pointerenter (1) [fc52722f]
270. event: withinElement implemented with jQuery.contains() (1) [976ee805]
271. event: mouseenter, mouseleave don't catch exceptions (2) [7700a8fe]
272. event: trigger() shortcuts (6) [962f5e44]
273. event: trigger() bubbling (18) [2b1e2612]
274. event: trigger(type, [data], [fn]) (16) [5bfbb1c3]
275. event: submit event bubbles on copied forms (#11649) (3) [8e85e03a]
276. event: change event bubbles on copied forms (#11796) (3) [ec9b3869]
277. event: trigger(eventObject, [data], [fn]) (28) [f8fcfbc8]
278. event: .trigger() bubbling on disconnected elements (#10489) (2) [57fcf00f]
279. event: .trigger() doesn't bubble load event (#10717) (1) [5b3fa683]
280. event: Delegated events in SVG (#10791; #13180) (2) [c841373e]
281. event: Delegated events in forms (#10844; #11145; #8165; #11382, #11764) (5) [7304f0a8]
282. event: Submit event can be stopped (#11049) (1) [85069023]
283. event: on(beforeunload) (4) [c4ca9de4]
284. event: jQuery.Event( type, props ) (6) [9ee7af47]
285. event: jQuery.Event properties (12) [4862ed07]
286. event: .on()/.off() (65) [86f809e5]
287. event: jQuery.off using dispatched jQuery.Event (1) [a6cd39f6]
288. event: delegated event with delegateTarget-relative selector (3) [72cc648d]
289. event: delegated event with selector matching Object.prototype property (#13203) (1) [02402d82]
290. event: delegated event with intermediate DOM manipulation (#13208) (1) [99091f7b]
291. event: stopPropagation() stops directly-bound events on delegated target (1) [97a76f1f]
292. event: off all bound delegated events (2) [fbfed32e]
293. event: on with multiple delegated events (1) [e8bc1bef]
294. event: delegated on with change (8) [825bc50c]
295. event: delegated on with submit (2) [9e60f174]
296. event: delegated off() with only namespaces (2) [478bcc85]
297. event: Non DOM element events (1) [c54cd510]
298. event: inline handler returning false stops default (1) [f2abf84c]
299. event: window resize (2) [50fdc562]
300. event: focusin bubbles (2) [e1fefb42]
301. event: custom events with colons (#3533, #8272) (1) [8e42386e]
302. event: .on and .off (9) [fa721d1f]
303. event: special on name mapping (7) [3334c871]
304. event: .on and .off, selective mixed removal (#10705) (7) [7bd80ad7]
305. event: .on( event-map, null-selector, data ) #11130 (1) [1f7323b9]
306. event: clone() delegated events (#11076) (3) [3233ef57]
307. event: checkbox state (#3827) (9) [40ec06fa]
308. event: hover event no longer special since 1.9 (1) [0541090b]
309. event: fixHooks extensions (2) [7bcb00b7]
310. event: drag/drop events copy mouse-related event properties (gh-1925, gh-2009) (4) [6578e967]
311. event: focusin using non-element targets (2) [5b20ac5d]
312. event: focusin from an iframe (1) [109716c6]
313. event: jQuery.ready promise (1) [8839a7f0]
314. event: jQuery.ready uses interactive (1) [14360559]
315. event: Focusing iframe element (1) [cdac1534]
316. event: triggerHandler(onbeforeunload) (1) [de3c3bb8]
317. event: jQuery.ready synchronous load with long loading subresources (1) [cffde38b]
318. event: change handler should be detached from element (2) [8f6e8420]
319. event: trigger click on checkbox, fires change event (1) [473c1b43]
320. event: Namespace preserved when passed an Event (#12739) (4) [e9f2ca08]
321. event: make sure events cloned correctly (18) [ba0e96ca]
322. event: String.prototype.namespace does not cause trigger() to throw (#13360) (1) [fee4a372]
323. event: Inline event result is returned (#13993) (1) [5b66d7c6]
324. event: .off() removes the expando when there's no more data (2) [b0e64fe5]
325. event: preventDefault() on focusin does not throw exception (1) [f524efb1]
326. event: Donor event interference (10) [53dca324]
327. event: originalEvent property for IE8 (1) [38c044b3]
328. event: originalEvent property for Chrome, Safari, Fx & Edge of simulated event (4) [be006dd7]
329. selector: element - jQuery only (7) [9e9fea7a]
330. selector: id (26) [0db701f8]
331. selector: class - jQuery only (4) [fa5d90b6]
332. selector: name (5) [7c00ac28]
333. selector: selectors with comma (4) [83b7e1c4]
334. selector: child and adjacent (27) [484374cc]
335. selector: attributes (54) [48c47134]
336. selector: disconnected nodes (1) [610f9769]
337. selector: disconnected nodes - jQuery only (3) [50740424]
338. selector: attributes - jQuery.attr (35) [ebf56202]
339. selector: jQuery.contains (16) [c8b315d2]
340. selector: jQuery.uniqueSort (15) [7cee2402]
341. selector: Sizzle cache collides with multiple Sizzles on a page (4) [406ea9a4]
342. selector: Iframe dispatch should not affect jQuery (#13936) (1) [958e0234]
343. traversing: find(String) (1) [44dc4676]
344. traversing: find(String) under non-elements (2) [8a165e29]
345. traversing: find(leading combinator) (4) [6c067eb1]
346. traversing: find(node|jQuery object) (13) [165911c0]
347. traversing: is(String|undefined) (23) [53d824d3]
348. traversing: is() against non-elements (#10178) (14) [32648f33]
349. traversing: is(jQuery) (19) [09b3677a]
350. traversing: is() with :has() selectors (6) [6b8baba7]
351. traversing: is() with positional selectors (27) [435ba0da]
352. traversing: index() (2) [2a27d866]
353. traversing: index(Object|String|undefined) (16) [c3ba094a]
354. traversing: filter(Selector|undefined) (9) [47ce3153]
355. traversing: filter(Function) (2) [33bf57ce]
356. traversing: filter(Element) (1) [5405ec90]
357. traversing: filter(Array) (1) [5296a193]
358. traversing: filter(jQuery) (1) [40f92948]
359. traversing: filter() with positional selectors (19) [9a4c6fa8]
360. traversing: closest() (13) [53163f6d]
361. traversing: closest() with positional selectors (1, 1, 2) [818a3e8f]
362. traversing: closest(jQuery) (8) [588031af]
363. traversing: not(Selector|undefined) (11) [cd9ff434]
364. traversing: not(Element) (1) [ce912c4f]
365. traversing: not(Function) (1) [0a9c0fef]
366. traversing: not(Array) (2) [961cc512]
367. traversing: not(jQuery) (1) [6e3775a9]
368. traversing: has(Element) (3) [879c1468]
369. traversing: has(Selector) (5) [1507abcf]
370. traversing: has(Arrayish) (4) [266a38e9]
371. traversing: addBack() (5) [51c2327c]
372. traversing: siblings([String]) (6) [9243394e]
373. traversing: siblings([String]) - jQuery only (2) [4b7ff149]
374. traversing: children([String]) (2) [7c54abdc]
375. traversing: children([String]) - jQuery only (1) [50d6d357]
376. traversing: parent([String]) (6) [a93e9c07]
377. traversing: parents([String]) (6) [29f562ac]
378. traversing: parentsUntil([String]) (10) [c1716bb2]
379. traversing: next([String]) (6) [2604c650]
380. traversing: prev([String]) (5) [9e01cd90]
381. traversing: nextAll([String]) (5) [29363911]
382. traversing: prevAll([String]) (5) [5764e9d1]
383. traversing: nextUntil([String]) (12) [fe62ae8e]
384. traversing: prevUntil([String]) (11) [5ba82f4e]
385. traversing: contents() (12) [993eada8]
386. traversing: sort direction (12) [b377110a]
387. traversing: add(String selector) (2) [17cf5c6f]
388. traversing: add(String selector, String context) (1) [46df2fbb]
389. traversing: add(String html) (3) [f23daca3]
390. traversing: add(jQuery) (4) [1b2b9577]
391. traversing: add(Element) (2) [c0210641]
392. traversing: add(Array elements) (1) [a613a4f7]
393. traversing: add(Window) (1) [56a65a25]
394. traversing: add(NodeList|undefined|HTMLFormElement|HTMLSelectElement) (4) [b1b47397]
395. traversing: add(String, Context) (6) [5c1fe653]
396. traversing: eq('-1') #10616 (3) [abea487b]
397. traversing: index(no arg) #10977 (2) [88c07b48]
398. traversing: traversing non-elements with attribute filters (#12523) (5) [fd8d0eed]
399. manipulation: text() (5) [79abb7cd]
400. manipulation: text(undefined) (1) [b76b69b5]
401. manipulation: text(String) (7) [b853a6bc]
402. manipulation: text(Function) (7) [f4ecfad5]
403. manipulation: text(Function) with incoming value (2) [60fea5c6]
404. manipulation: append(String|Element|Array<Element>|jQuery) (78) [d1fdf7d0]
405. manipulation: append(Function) (78) [72a7c4c2]
406. manipulation: append(param) to object, see #11280 (5) [65c5f097]
407. manipulation: append(Function) returns String (4) [750e10cc]
408. manipulation: append(Function) returns Element (2) [39c085a1]
409. manipulation: append(Function) returns Array<Element> (2) [29c710a0]
410. manipulation: append(Function) returns jQuery (2) [9a619f19]
411. manipulation: append(Function) returns Number (2) [6c918c04]
412. manipulation: XML DOM manipulation (#9960) (5) [5daa93d7]
413. manipulation: append the same fragment with events (Bug #6997, 5566) (2) [5aad1eac]
414. manipulation: append HTML5 sectioning elements (Bug #6485) (2) [2831131c]
415. manipulation: HTML5 Elements inherit styles from style rules (Bug #10501) (1) [6118970a]
416. manipulation: html(String) with HTML5 (Bug #6485) (2) [9dd21615]
417. manipulation: html(String) tag-hyphenated elements (Bug #1987) (27) [5a5a29ad]
418. manipulation: IE8 serialization bug (2) [7eedaf01]
419. manipulation: html() object element #10324 (1) [4c0b7603]
420. manipulation: append(xml) (1) [15c79ec1]
421. manipulation: appendTo(String) (4) [78206d44]
422. manipulation: appendTo(Element|Array<Element>) (2) [498a1bd0]
423. manipulation: appendTo(jQuery) (10) [fd3ea897]
424. manipulation: prepend(String) (2) [fefaf07f]
425. manipulation: prepend(Element) (1) [74e63b46]
426. manipulation: prepend(Array<Element>) (1) [ced9292b]
427. manipulation: prepend(jQuery) (1) [84192bd2]
428. manipulation: prepend(Array<jQuery>) (1) [d2e2c485]
429. manipulation: prepend(Function) with incoming value -- String (4) [a2fa629a]
430. manipulation: prepend(Function) with incoming value -- Element (2) [c95e6d93]
431. manipulation: prepend(Function) with incoming value -- Array<Element> (2) [a1e3b46e]
432. manipulation: prepend(Function) with incoming value -- jQuery (2) [c84df0e7]
433. manipulation: prependTo(String) (2) [3461885a]
434. manipulation: prependTo(Element) (1) [ec529ecb]
435. manipulation: prependTo(Array<Element>) (1) [7243b606]
436. manipulation: prependTo(jQuery) (1) [b97fc3ad]
437. manipulation: prependTo(Array<jQuery>) (1) [8dd5b04a]
438. manipulation: before(String) (1) [7bc7434e]
439. manipulation: before(Element) (1) [91a44257]
440. manipulation: before(Array<Element>) (1) [8e893cfa]
441. manipulation: before(jQuery) (1) [00e57ea1]
442. manipulation: before(Array<jQuery>) (1) [b8097ad6]
443. manipulation: before(Function) -- Returns String (1) [7c1eb755]
444. manipulation: before(Function) -- Returns Element (1) [14c4b038]
445. manipulation: before(Function) -- Returns Array<Element> (1) [d9711e29]
446. manipulation: before(Function) -- Returns jQuery (1) [a17245a2]
447. manipulation: before(Function) -- Returns Array<jQuery> (1) [a85fb759]
448. manipulation: before(no-op) (2) [be0e6066]
449. manipulation: before and after w/ empty object (#10812) (1) [e9f42ddf]
450. manipulation: .before() and .after() disconnected node (2) [bff98b50]
451. manipulation: insert with .before() on disconnected node last (1) [3197d82c]
452. manipulation: insert with .before() on disconnected node first (1) [01123fda]
453. manipulation: insert with .before() on disconnected node last (1) [01632d74]
454. manipulation: insert with .before() on disconnected node last (1) [2b02812c]
455. manipulation: insertBefore(String) (1) [2884f727]
456. manipulation: insertBefore(Element) (1) [7c9d099e]
457. manipulation: insertBefore(Array<Element>) (1) [b5e607d3]
458. manipulation: insertBefore(jQuery) (1) [ada3327a]
459. manipulation: .after(String) (1) [e8e4973d]
460. manipulation: .after(Element) (1) [c8316c48]
461. manipulation: .after(Array<Element>) (1) [2a8731e9]
462. manipulation: .after(jQuery) (1) [6e02d290]
463. manipulation: .after(Function) returns String (1) [d5b993f8]
464. manipulation: .after(Function) returns Element (1) [ee8567f5]
465. manipulation: .after(Function) returns Array<Element> (1) [3002a7cc]
466. manipulation: .after(Function) returns jQuery (1) [fb0d2245]
467. manipulation: .after(disconnected node) (2) [1de765fd]
468. manipulation: insertAfter(String) (1) [58a72614]
469. manipulation: insertAfter(Element) (1) [50c0b851]
470. manipulation: insertAfter(Array<Element>) (1) [3354f9c0]
471. manipulation: insertAfter(jQuery) (1) [ddc56167]
472. manipulation: replaceWith(String|Element|Array<Element>|jQuery) (29) [819c8672]
473. manipulation: replaceWith(Function) (30) [85c93a64]
474. manipulation: replaceWith(string) for more than one element (3) [691afae2]
475. manipulation: Empty replaceWith (trac-13401; trac-13596; gh-2204) (25) [b34e46dc]
476. manipulation: replaceAll(String) (2) [8a81309c]
477. manipulation: replaceAll(Element) (2) [5a27fec9]
478. manipulation: replaceAll(Array<Element>) (3) [5bdffc48]
479. manipulation: replaceAll(jQuery) (3) [0f9f6bef]
480. manipulation: jQuery.clone() (#8017) (2) [420b951d]
481. manipulation: append to multiple elements (#8070) (2) [1423a5a6]
482. manipulation: table manipulation (2) [cb6ffd0e]
483. manipulation: clone() (45) [43f2961f]
484. manipulation: clone(script type=non-javascript) (#11359) (3) [ba6bf709]
485. manipulation: clone(form element) (Bug #3879, #6655) (5) [5b5d57f1]
486. manipulation: clone(multiple selected options) (Bug #8129) (1) [b4779b24]
487. manipulation: clone() on XML nodes (2) [549e70a8]
488. manipulation: clone() on local XML nodes with html5 nodename (2) [14569a30]
489. manipulation: html(undefined) (1) [3ff2cc77]
490. manipulation: html() on empty set (1) [efc42543]
491. manipulation: html(String|Number) (39) [177371b3]
492. manipulation: html(Function) (39) [5c6d37d3]
493. manipulation: html( $.text() ) (1) [65e95643]
494. manipulation: html( fn ) returns $.text() (1) [ecc5d222]
495. manipulation: html(Function) with incoming value -- direct selection (4) [3bbe8a39]
496. manipulation: html(Function) with incoming value -- jQuery.contents() (14) [bf0a0767]
497. manipulation: clone()/html() don't expose jQuery/Sizzle expandos (#12858) (2) [9c138b84]
498. manipulation: remove() no filters (3) [3b3ef098]
499. manipulation: remove() with filters (8) [90ccaf9d]
500. manipulation: remove() event cleaning (1) [4ba995c5]
501. manipulation: remove() in document order #13779 (1) [9233c3ec]
502. manipulation: detach() no filters (3) [d4e901e9]
503. manipulation: detach() with filters (8) [6837b0ae]
504. manipulation: detach() event cleaning (1) [b8daaf14]
505. manipulation: empty() (6) [af85020f]
506. manipulation: jQuery.cleanData (14) [3cbc3042]
507. manipulation: jQuery.cleanData eliminates all private data (gh-2127) (3) [60994e58]
508. manipulation: jQuery.cleanData eliminates all public data (2) [c18e2e11]
509. manipulation: domManip plain-text caching (trac-6779) (1) [aa495812]
510. manipulation: domManip executes scripts containing html comments or CDATA (trac-9221) (3) [7bbe762d]
511. manipulation: domManip tolerates window-valued document[0] in IE9/10 (trac-12266) (1) [416079f7]
512. manipulation: jQuery.clone - no exceptions for object elements #9587 (1) [0202079b]
513. manipulation: Cloned, detached HTML5 elems (#10667,10670) (7) [bc2d65ae]
514. manipulation: Guard against exceptions when clearing safeChildNodes (1) [a093336a]
515. manipulation: Ensure oldIE creates a new set on appendTo (#8894) (5) [bab3ba63]
516. manipulation: html() - script exceptions bubble (#11743) (2) [af5cc233]
517. manipulation: checked state is cloned with clone() (2) [0c51698e]
518. manipulation: manipulate mixed jQuery and text (#12384, #12346) (2) [4cb95a05]
519. manipulation: script evaluation (#11795) (13) [f3ac54bf]
520. manipulation: jQuery._evalUrl (#12838) (5) [6789cde3]
521. manipulation: jQuery.htmlPrefilter (gh-1747) (5) [8657f31b]
522. manipulation: insertAfter, insertBefore, etc do not work when destination is original element. Element is removed (#4087) (10) [b9e8f29b]
523. manipulation: Index for function argument should be received (#13094) (2) [5719b78b]
524. manipulation: Make sure jQuery.fn.remove can work on elements in documentFragment (1) [8c121d4d]
525. manipulation: Insert script with data-URI (gh-1887) (1) [d6c835b5]
526. wrap: wrap(String|Element) (19) [3ad4676c]
527. wrap: wrap(Function) (19) [14b24165]
528. wrap: wrap(Function) with index (#10177) (6) [e82d35bf]
529. wrap: wrap(String) consecutive elements (#10177) (12) [199d8111]
530. wrap: wrapAll(String) (5) [62f06b95]
531. wrap: wrapAll(Element) (3) [8fa022f0]
532. wrap: wrapInner(String) (6) [13d74a4a]
533. wrap: wrapInner(Element) (5) [fb951adb]
534. wrap: wrapInner(Function) returns String (6) [a98bbc8b]
535. wrap: wrapInner(Function) returns Element (5) [94f851c2]
536. wrap: unwrap() (9) [d4a4e9b6]
537. wrap: jQuery(<tag>) & wrap[Inner/All]() handle unknown elems (#10667) (2) [df27d084]
538. wrap: wrapping scripts (#10470) (2) [52f4a540]
539. css: css(String|Hash) (43) [bd70ccae]
540. css: css() explicit and relative values (29) [55e67956]
541. css: css() non-px relative values (gh-1711) (16) [43c9c8b2]
542. css: css(String, Object) (19) [040f8367]
543. css: css(String, Object) with negative values (4) [9fd1072c]
544. css: css(Array) (2) [b21d870e]
545. css: css(String, Function) (3) [8ea592ae]
546. css: css(String, Function) with incoming value (3) [d52dd71f]
547. css: css(Object) where values are Functions (3) [90ac0dfe]
548. css: css(Object) where values are Functions with incoming values (3) [b8bbc3e4]
549. css: show(); hide() (4) [80fc46bf]
550. css: show(); (18) [c4053aa4]
551. css: show() resolves correct default display #8099 (7) [011c2478]
552. css: show() resolves correct default display for detached nodes (13) [6c7f821d]
553. css: show() resolves correct default display #10227 (4) [2205ab18]
554. css: show() resolves correct default display when iframe display:none #12904 (2) [ea7383d0]
555. css: toggle() (9) [886670ce]
556. css: hide hidden elements (bug #7141) (3) [03e6c6eb]
557. css: jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) (4) [b2ecf73b]
558. css: internal ref to elem.runtimeStyle (bug #7608) (1) [088cf83d]
559. css: computed margins (trac-3333; gh-2237) (2) [0d71fe58]
560. css: box model properties incorrectly returning % instead of px, see #10639 and #12088 (2) [9d1b7146]
561. css: jQuery.cssProps behavior, (bug #8402) (2) [bf0079da]
562. css: widows & orphans #8936 (1) [2d0ffbea]
563. css: can't get css for disconnected in IE<9, see #10254 and #8388 (2) [ce12502e]
564. css: Ensure styles are retrieving from parsed html on document fragments (1) [40d316e9]
565. css: can't get background-position in IE<9, see #10796 (8) [a21fbb69]
566. css: percentage properties for bottom and right in IE<9 should not be incorrectly transformed to pixels, see #11311 (1) [543290a6]
567. css: percentage properties for left and top should be transformed to pixels, see #9505 (2) [9c39f1cc]
568. css: Do not append px (#9548, #12990, #2792) (3) [ef1ec892]
569. css: css('width') and css('height') should respect box-sizing, see #11004 (4) [e203a9fa]
570. css: css('width') should work correctly before document ready (#14084) (1) [50fba7e8]
571. css: certain css values of 'normal' should be convertable to a number, see #8627 (3) [f92cd943]
572. css: cssHooks - expand (15) [0effefe7]
573. css: css opacity consistency across browsers (#12685) (4) [408cc779]
574. css: :visible/:hidden selectors (19) [9259039a]
575. css: Table styles do not affect reliableHiddenOffsets support test (gh-3065) (1) [74f2a93c]
576. css: Keep the last style if the new one isn't recognized by the browser (#14836) (2) [b7923ac5]
577. css: Reset the style if set to an empty string (1) [963a3c6b]
578. css: Clearing a Cloned Element's Style Shouldn't Clear the Original Element's Style (#8908) (24) [1170a758]
579. css: show() after hide() should always set display to initial value (#14750) (1) [57252375]
580. css: Make sure initialized display value for disconnected nodes is correct (#13310) (4) [9c41394e]
581. css: show() after hide() should always set display to initial value (#14750) (1) [8d7f4b4b]
582. css: Don't append px to CSS "order" value (#14049) (1) [bd7562d2]
583. css: Do not throw on frame elements from css method (#15098) (1) [152c6b1d]
584. skippedcss: get upper case alpha opacity in IE8 (0) [67f828e7]
585. css: Don't default to a cached previously used wrong prefixed name (gh-2015) (3) [b862bce1]
586. css: Don't detect fake set properties on a node when caching the prefixed version (1) [8dd18c09]
587. serialize: jQuery.param() (23) [9004571a]
588. serialize: jQuery.param() Constructed prop values (4) [2ed25aef]
589. serialize: serialize() (6) [1a0f6125]
590. ajax: Unit Testing Environment (2) [7c492543]
591. ajax: XMLHttpRequest - Attempt to block tests because of dangling XHR requests (IE) (1) [e0d0b3c1]
592. ajax: jQuery.ajax() - success callbacks (8) [11a69f33]
593. ajax: jQuery.ajax() - success callbacks - (url, options) syntax (8) [473f095d]
594. ajax: jQuery.ajax() - success callbacks (late binding) (8) [df5387e3]
595. ajax: jQuery.ajax() - success callbacks (oncomplete binding) (8) [2a91caf1]
596. ajax: jQuery.ajax() - error callbacks (8) [ed8cd778]
597. ajax: jQuery.ajax() - textStatus and errorThrown values (4) [4af235be]
598. ajax: jQuery.ajax() - responseText on error (1) [7d19049b]
599. ajax: jQuery.ajax() - retry with jQuery.ajax( this ) (2) [fbd996cb]
600. ajax: jQuery.ajax() - headers (5) [809a3448]
601. ajax: jQuery.ajax() - Accept header (1) [41e037c7]
602. ajax: jQuery.ajax() - contentType (2) [25ace715]
603. ajax: jQuery.ajax() - protocol-less urls (1) [f9877014]
604. ajax: jQuery.ajax() - hash (3) [57d8038c]
605. ajax: jQuery.ajax() - cross-domain detection (7) [4d4f7314]
606. ajax: jQuery.ajax() - abort (9) [a2c63072]
607. ajax: jQuery.ajax() - events with context (12) [6b614dbe]
608. ajax: jQuery.ajax() - events without context (3) [dc08b44e]
609. ajax: #15118 - jQuery.ajax() - function without jQuery.event (1) [eb310de2]
610. ajax: #15160 - jQuery.ajax() - request manually aborted in ajaxSend (3) [327be7ab]
611. ajax: jQuery.ajax() - context modification (1) [8a14e6eb]
612. ajax: jQuery.ajax() - context modification through ajaxSetup (3) [70060ead]
613. ajax: jQuery.ajax() - disabled globals (3) [2120810a]
614. ajax: jQuery.ajax() - xml: non-namespace elements inside namespaced elements (3) [294e634f]
615. ajax: jQuery.ajax() - xml: non-namespace elements inside namespaced elements (over JSONP) (3) [6c0c8596]
616. ajax: jQuery.ajax() - HEAD requests (2) [c9f4c146]
617. ajax: jQuery.ajax() - beforeSend (1) [41e697a5]
618. ajax: jQuery.ajax() - beforeSend, cancel request manually (2) [be018331]
619. ajax: jQuery.ajax() - dataType html (5) [2f65b789]
620. ajax: jQuery.ajax() - synchronous request (1) [3354227a]
621. ajax: jQuery.ajax() - synchronous request with callbacks (2) [6ac8a05a]
622. ajax: jQuery.ajax(), jQuery.get[Script|JSON](), jQuery.post(), pass-through request object (8) [e0e98fe7]
623. ajax: jQuery.ajax() - cache (12) [a2e1bcc4]
624. ajax: #8205 - jQuery.ajax() - JSONP - re-use callbacks name - Same Domain (4) [c61fc201]
625. ajax: #8205 - jQuery.ajax() - JSONP - re-use callbacks name - Cross Domain (4) [5ea15501]
626. ajax: jQuery.ajax() - script, Remote (2) [bc1195a3]
627. ajax: jQuery.ajax() - script, Remote with POST (3) [4085a57d]
628. ajax: jQuery.ajax() - script, Remote with scheme-less URL (2) [40650873]
629. ajax: jQuery.ajax() - malformed JSON (2) [4743732b]
630. ajax: jQuery.ajax() - script by content-type (2) [37339ee0]
631. ajax: jQuery.ajax() - JSON by content-type (5) [e18e807d]
632. ajax: jQuery.ajax() - JSON by content-type disabled with options (6) [93d5d505]
633. ajax: jQuery.ajax() - simple get (1) [cd930fe6]
634. ajax: jQuery.ajax() - simple post (1) [e4d32a10]
635. ajax: jQuery.ajax() - data option - empty bodies for non-GET requests (1) [beecf48c]
636. ajax: jQuery.ajax() - If-Modified-Since support (cache) (4) [a14493a6]
637. ajax: jQuery.ajax() - Etag support (cache) (4) [2e99b551]
638. ajax: jQuery.ajax() - If-Modified-Since support (no cache) (4) [17b51107]
639. ajax: jQuery.ajax() - Etag support (no cache) (4) [1d8e0b7c]
640. ajax: jQuery.ajax() - failing cross-domain (non-existing) (1) [8fe7268b]
641. ajax: jQuery.ajax() - failing cross-domain (1) [cf74d80b]
642. ajax: jQuery.ajax() - atom+xml (1) [ed49f85b]
643. ajax: jQuery.ajax() - statusText (3) [31c72c3d]
644. ajax: jQuery.ajax() - statusCode (20) [31bf94fd]
645. ajax: jQuery.ajax() - transitive conversions (8) [970147a0]
646. ajax: jQuery.ajax() - overrideMimeType (2) [e90656f8]
647. ajax: jQuery.ajax() - empty json gets to error callback instead of success callback. (1) [b1aea05b]
648. ajax: #2688 - jQuery.ajax() - beforeSend, cancel request (2) [d97cf56e]
649. ajax: #2806 - jQuery.ajax() - data option - evaluate function values (1) [048476ed]
650. ajax: #7531 - jQuery.ajax() - Location object as url (1) [ba63b869]
651. ajax: #7578 - jQuery.ajax() - JSONP - default for cache option - Same Domain (1) [ee78960e]
652. ajax: #7578 - jQuery.ajax() - JSONP - default for cache option - Cross Domain (1) [41630294]
653. ajax: #8107 - jQuery.ajax() - multiple method signatures introduced in 1.5 (4) [93452e30]
654. ajax: #9887 - jQuery.ajax() - Context with circular references (#9887) (2) [f66111a0]
655. ajax: #10093 - jQuery.ajax() - falsy url as argument (4) [2ed44440]
656. ajax: #10093 - jQuery.ajax() - falsy url in settings object (4) [af4a1dec]
657. ajax: #11151 - jQuery.ajax() - parse error body (2) [d8837896]
658. ajax: #11426 - jQuery.ajax() - loading binary data shouldn't throw an exception in IE (1) [dc9cbb04]
659. ajax: #11743 - jQuery.ajax() - script, throws exception (1) [fb3d7f01]
660. ajax: #12004 - jQuery.ajax() - method is an alias of type - method set globally (3) [11112fda]
661. ajax: #12004 - jQuery.ajax() - method is an alias of type - type set globally (3) [b6160961]
662. ajax: #13276 - jQuery.ajax() - compatibility between XML documents from ajax requests and parsed string (1) [4a5ae56b]
663. ajax: #13292 - jQuery.ajax() - converter is bypassed for 204 requests (3) [ae3814fb]
664. ajax: #13388 - jQuery.ajax() - responseXML (3) [5fc9540b]
665. ajax: #13922 - jQuery.ajax() - converter is bypassed for HEAD requests (3) [5a6e2185]
666. ajax: #14379 - jQuery.ajax() on unload (1) [d38a90c9]
667. ajax: #13240 - jQuery.ajax() - support non-RFC2616 methods (1) [14c6c1a9]
668. ajax: #14683 - jQuery.ajax() - Exceptions thrown synchronously by xhr.send should be caught (4) [3ef5bd03]
669. ajax: gh-2587 - when content-type not xml, but looks like one (1) [3e172a39]
670. ajax: gh-2587 - when content-type not xml, but looks like one (1) [84ce1d07]
671. ajax: gh-2587 - when content-type not json, but looks like one (1) [105d807e]
672. ajax: gh-2587 - when content-type not html, but looks like one (1) [3c4e9bc1]
673. ajax: gh-2587 - when content-type not javascript, but looks like one (1) [ff08cd03]
674. ajax: gh-2587 - when content-type not ecmascript, but looks like one (1) [d6eff993]
675. ajax: jQuery.ajaxPrefilter() - abort (1) [5ba592c5]
676. ajax: jQuery.ajaxSetup() (1) [1ac2258a]
677. ajax: jQuery.ajaxSetup({ timeout: Number }) - with global timeout (2) [51cfebab]
678. ajax: jQuery.ajaxSetup({ timeout: Number }) with localtimeout (1) [7ad95c50]
679. ajax: #11264 - jQuery.domManip() - no side effect because of ajaxSetup or global events (1) [cd193b73]
680. ajax: jQuery#load() - always use GET method even if it overrided through ajaxSetup (#11264) (1) [089a0d04]
681. ajax: jQuery#load() - should resolve with correct context (2) [61acec9d]
682. ajax: #11402 - jQuery.domManip() - script in comments are properly evaluated (2) [0a4be813]
683. ajax: jQuery.get( String, Hash, Function ) - parse xml and use text() on nodes (2) [c67463d9]
684. ajax: #8277 - jQuery.get( String, Function ) - data in ajaxSettings (1) [4bab4865]
685. ajax: jQuery.getJSON( String, Hash, Function ) - JSON array (5) [fde69a0a]
686. ajax: jQuery.getJSON( String, Function ) - JSON object (2) [613829cc]
687. ajax: jQuery.getJSON( String, Function ) - JSON object with absolute url to local content (2) [94ce2e73]
688. ajax: jQuery.getScript( String, Function ) - with callback (2) [1c0a8777]
689. ajax: jQuery.getScript( String, Function ) - no callback (1) [4976fadc]
690. ajax: #8082 - jQuery.getScript( String, Function ) - source as responseText (2) [5fce23e1]
691. ajax: jQuery.fn.load( String ) (2) [7cfe4aca]
692. ajax: jQuery.fn.load() - 404 error callbacks (6) [e319cb54]
693. ajax: jQuery.fn.load( String, null ) (2) [56181445]
694. ajax: jQuery.fn.load( String, undefined ) (2) [24edc204]
695. ajax: jQuery.fn.load( URL_SELECTOR ) (1) [5876c7e8]
696. ajax: jQuery.fn.load( URL_SELECTOR with spaces ) (1) [e419ac4f]
697. ajax: jQuery.fn.load( String, Function ) - simple: inject text into DOM (2) [70fae57b]
698. ajax: jQuery.fn.load( String, Function ) - check scripts (7) [8f543f13]
699. ajax: jQuery.fn.load( String, Function ) - check file with only a script tag (3) [fa8720ad]
700. ajax: jQuery.fn.load( String, Function ) - dataFilter in ajaxSettings (2) [408924dd]
701. ajax: jQuery.fn.load( String, Object, Function ) (2) [d5228449]
702. ajax: jQuery.fn.load( String, String, Function ) (2) [9f38961b]
703. ajax: jQuery.fn.load() - callbacks get the correct parameters (8) [c9ec9545]
704. ajax: #2046 - jQuery.fn.load( String, Function ) with ajaxSetup on dataType json (1) [6fc0ece6]
705. ajax: #10524 - jQuery.fn.load() - data specified in ajaxSettings is merged in (1) [d7f311d7]
706. ajax: jQuery.post() - data (3) [1eea9ba8]
707. ajax: jQuery.post( String, Hash, Function ) - simple with xml (4) [9f5e75ec]
708. ajax: jQuery[get|post]( options ) - simple with xml (2) [4293a0f1]
709. ajax: jQuery.active (1) [1868a7fa]
710. effects: sanity check (1) [efdae790]
711. effects: show() basic (2) [b34666a6]
712. effects: show() (27) [d8a15098]
713. effects: show(Number) - other displays (15) [3cc75445]
714. effects: Persist correct display value (3) [cfd734d7]
715. effects: animate(Hash, Object, Function) (1) [cf19d4bb]
716. effects: animate relative values (12) [bc0d4d1d]
717. effects: animate negative height (1) [94637799]
718. effects: animate negative margin (1) [9cb76c20]
719. effects: animate negative margin with px (1) [aa03bfa2]
720. effects: animate negative padding (1) [982223df]
721. effects: animate block as inline width/height (3) [fa0a9ef5]
722. effects: animate native inline width/height (3) [563ce3a7]
723. effects: animate block width/height (3) [5c02ecbc]
724. effects: animate table width/height (1) [2014071b]
725. effects: animate table-row width/height (3) [b9cdf82e]
726. effects: animate table-cell width/height (3) [7ac0fc76]
727. effects: animate percentage(%) on width/height (2) [3ca3cfea]
728. effects: animate resets overflow-x and overflow-y when finished (2) [2ea5bb3f]
729. effects: animate option { queue: false } (2) [228dc8a0]
730. effects: animate option { queue: true } (2) [012e6a8b]
731. effects: animate option { queue: 'name' } (5) [3b587672]
732. effects: animate with no properties (2) [0c707191]
733. effects: animate duration 0 (11) [de89c01d]
734. effects: animate hyphenated properties (1) [e0741176]
735. effects: animate non-element (1) [8a2a7ba3]
736. effects: stop() (4) [d94a505d]
737. effects: stop() - several in queue (5) [900f6230]
738. effects: stop(clearQueue) (4) [99389d19]
739. effects: stop(clearQueue, gotoEnd) (1) [185a6135]
740. effects: stop( queue, ..., ... ) - Stop single queues (3) [91a9f589]
741. effects: toggle() (6) [0153e8af]
742. effects: jQuery.fx.prototype.cur() - <1.8 Back Compat (1, 6, 7) [1185dbde]
743. effects: Overflow and Display (4) [fbe416b5]
744. effects: CSS Auto to 0 (6) [cd18cc65]
745. effects: CSS Auto to 50 (6) [d600c106]
746. effects: CSS Auto to 100 (6) [ea1750e6]
747. effects: CSS Auto to show (5) [58f1a6a8]
748. effects: CSS Auto to hide (4) [58eca8ed]
749. effects: JS Auto to 0 (6) [d95a1dbf]
750. effects: JS Auto to 50 (6) [51e99aec]
751. effects: JS Auto to 100 (6) [eb49b3c0]
752. effects: JS Auto to show (5) [7e0b9f0e]
753. effects: JS Auto to hide (4) [7e06a153]
754. effects: CSS 100 to 0 (6) [20d4da91]
755. effects: CSS 100 to 50 (6) [f9c6785a]
756. effects: CSS 100 to 100 (6) [3f088412]
757. effects: CSS 100 to show (5) [a226d8fc]
758. effects: CSS 100 to hide (4) [a221db41]
759. effects: JS 100 to 0 (6) [94d6f5f7]
760. effects: JS 100 to 50 (6) [0607c9b4]
761. effects: JS 100 to 100 (6) [baf15df8]
762. effects: JS 100 to show (5) [a3593bd6]
763. effects: JS 100 to hide (4) [a3543e1b]
764. effects: CSS 50 to 0 (6) [2ec35d59]
765. effects: CSS 50 to 50 (6) [a9a84e92]
766. effects: CSS 50 to 100 (6) [8b6174da]
767. effects: CSS 50 to show (5) [e0ec0134]
768. effects: CSS 50 to hide (4) [e0e70379]
769. effects: JS 50 to 0 (6) [21fd3d33]
770. effects: JS 50 to 50 (6) [1daa69f8]
771. effects: JS 50 to 100 (6) [97a2c634]
772. effects: JS 50 to show (5) [5cd4db1a]
773. effects: JS 50 to hide (4) [5ccfdd5f]
774. effects: CSS 0 to 0 (6) [cef43972]
775. effects: CSS 0 to 50 (6) [0f92f599]
776. effects: CSS 0 to 100 (6) [e2cbaeb3]
777. effects: CSS 0 to show (5) [76c9027b]
778. effects: CSS 0 to hide (4) [76c404c0]
779. effects: JS 0 to 0 (6) [6b71f658]
780. effects: JS 0 to 50 (6) [02ccd573]
781. effects: JS 0 to 100 (6) [56cdca19]
782. effects: JS 0 to show (5) [830a53d5]
783. effects: JS 0 to hide (4) [8305561a]
784. effects: Effects chaining (16) [30b31e59]
785. effects: jQuery.show('fast') doesn't clear radio buttons (bug #1095) (4) [64f5d5da]
786. effects: interrupt toggle (24) [bfb8430b]
787. effects: animate with per-property easing (5) [31782e85]
788. effects: animate with CSS shorthand properties (11) [6cdfbda6]
789. effects: hide hidden elements, with animation (bug #7141) (3) [f7e757ea]
790. effects: animate unit-less properties (#4966) (2) [8ba15e93]
791. effects: animate properties missing px w/ opacity as last (#9074) (6) [4de2c7cb]
792. effects: callbacks should fire in correct order (#9100) (1) [ee12de1c]
793. effects: callbacks that throw exceptions will be removed (#5684) (2) [b234370d]
794. effects: animate will scale margin properties individually (2) [eb5df1cc]
795. effects: Do not append px to 'fill-opacity' #9548 (1) [de39926d]
796. effects: line-height animates correctly (#13855) (12) [2692e84b]
797. effects: jQuery.Animation( object, props, opts ) (4) [06a080f4]
798. effects: Animate Option: step: function( percent, tween ) (1) [d9eb74b1]
799. effects: Animate callbacks have correct context (2) [48f58a6c]
800. effects: User supplied callback called after show when fx off (#8892) (2) [fab3ee0c]
801. effects: animate should set display for disconnected nodes (18) [1cea88d3]
802. effects: Animation callback should not show animated element as :animated (#7157) (1) [4b540974]
803. effects: Initial step callback should show element as :animated (#14623) (1) [775bf4aa]
804. effects: hide called on element within hidden parent should set display to none (#10045) (3) [89eb04cf]
805. effects: hide, fadeOut and slideUp called on element width height and width = 0 should set display to none (5) [eda025cc]
806. effects: hide should not leave hidden inline elements visible (#14848) (2) [7da02112]
807. effects: Handle queue:false promises (10) [4a1e01dc]
808. effects: multiple unqueued and promise (4) [7b25a5f4]
809. effects: animate does not change start value for non-px animation (#7109) (1) [aad22350]
810. effects: non-px animation handles non-numeric start (#11971) (2) [42f0f191]
811. effects: Animation callbacks (#11797) (16) [5f8a45b7]
812. effects: Animate properly sets overflow hidden when animating width/height (#12117) (8) [843718d3]
813. effects: Each tick of the timer loop uses a fresh time (#12837) (3) [c33eae3e]
814. effects: Animations with 0 duration don't ease (#12273) (1) [015c4700]
815. effects: toggle state tests: toggle (#8685) (4) [053bfcad]
816. effects: toggle state tests: slideToggle (#8685) (4) [10217f72]
817. effects: toggle state tests: fadeToggle (#8685) (4) [a103e349]
818. effects: jQuery.fx.start & jQuery.fx.stop hook points (3) [c6e72c4c]
819. effects: .finish() completes all queued animations (11) [792af4ff]
820. effects: .finish( false ) - unqueued animations (10) [ee304b1d]
821. effects: .finish( "custom" ) - custom queue animations (11) [cc2d89b1]
822. effects: .finish() calls finish of custom queue functions (6) [a098b6dc]
823. effects: .finish() is applied correctly when multiple elements were animated (#13937) (3) [7edca75c]
824. effects: slideDown() after stop() (#13483) (2) [a874816a]
825. effects: Respect display value on inline elements (#14824) (2) [647e4e8f]
826. offset: empty set (2) [a2eac746]
827. offset: object without getBoundingClientRect (2) [a44dc5f9]
828. offset: disconnected element (2) [4e7e1d80]
829. offset: absolute (4) [7f824260]
830. offset: absolute (178) [70c609c0]
831. offset: relative (60) [f7752fb5]
832. offset: static (80) [b0b92997]
833. offset: fixed (34) [c2e7032b]
834. offset: table (4) [c3a85785]
835. offset: scroll (2, 22, 24) [afd141f6]
836. offset: body (4) [48584b0b]
837. offset: chaining (3) [6d9ef26a]
838. offset: offsetParent (13) [f4faf786]
839. offset: fractions (see #7730 and #7885) (2) [373463ce]
840. offset: iframe scrollTop/Left (see gh-1945) (2) [8deeff6a]
841. dimensions: width() (9) [855ae478]
842. dimensions: width(Function) (9) [ae664c80]
843. dimensions: width(Function(args)) (2) [0db1c3fc]
844. dimensions: height() (9) [44094357]
845. dimensions: height(Function) (9) [27735c5f]
846. dimensions: height(Function(args)) (2) [5b05309b]
847. dimensions: innerWidth() (6) [3033c180]
848. dimensions: innerHeight() (6) [f44c074f]
849. dimensions: outerWidth() (11) [2a572bbb]
850. dimensions: child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #9441 #9300 (16) [f05103b6]
851. dimensions: getting dimensions shouldn't modify runtimeStyle see #9233 (1) [fd1a1aee]
852. dimensions: table dimensions (2) [5a628b4e]
853. dimensions: box-sizing:border-box child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #10413 (16) [16694f32]
854. dimensions: outerHeight() (11) [3e95e474]
855. dimensions: passing undefined is a setter #5571 (4) [bdb02bc3]
856. dimensions: getters on non elements should return null (8) [e0ba59c6]
857. dimensions: setters with and without box-sizing:border-box (20) [6d13f464]
858. dimensions: window vs. small document (1) [04cb6624]
859. dimensions: window vs. large document (2) [95e8fa70]
860. dimensions: allow modification of coordinates argument (gh-1848) (1) [70d69f87]
861. dimensions: outside view position (gh-2836) (1) [6719e036]
