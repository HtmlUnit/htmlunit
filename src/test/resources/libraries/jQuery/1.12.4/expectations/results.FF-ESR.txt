event: jQuery.isReady (0, 2, 2) [1]
event: jQuery ready (0, 10, 10) [2]
core: Unit Testing Environment (0, 2, 2) [3]
core: Basic requirements (0, 7, 7) [4]
core: jQuery() (0, 28, 28) [5]
core: jQuery(selector, context) (0, 3, 3) [6]
core: selector state (0, 18, 18) [7]
core: globalEval (0, 3, 3) [8]
core: noConflict (0, 7, 7) [9]
core: trim (0, 13, 13) [10]
core: type (0, 28, 28) [11]
core: isPlainObject (0, 16, 16) [12]
core: isFunction (0, 19, 19) [13]
core: isNumeric (0, 38, 38) [14]
core: isXMLDoc - HTML (0, 4, 4) [15]
core: XSS via location.hash (0, 1, 1) [16]
core: isXMLDoc - XML (0, 3, 3) [17]
core: isWindow (0, 14, 14) [18]
core: jQuery('html') (0, 18, 18) [19]
core: jQuery('massive html #7990') (0, 3, 3) [20]
core: jQuery('html', context) (0, 1, 1) [21]
core: jQuery(selector, xml).text(str) - loaded via xml document (0, 2, 2) [22]
core: end() (0, 3, 3) [23]
core: length (0, 1, 1) [24]
core: get() (0, 1, 1) [25]
core: toArray() (0, 1, 1) [26]
core: inArray() (0, 19, 19) [27]
core: get(Number) (0, 2, 2) [28]
core: get(-Number) (0, 2, 2) [29]
core: each(Function) (0, 1, 1) [30]
core: slice() (0, 7, 7) [31]
core: first()/last() (0, 4, 4) [32]
core: map() (0, 2, 2) [33]
core: jQuery.map (0, 25, 25) [34]
core: jQuery.merge() (0, 10, 10) [35]
core: jQuery.grep() (0, 8, 8) [36]
core: jQuery.extend(Object, Object) (0, 28, 28) [37]
core: jQuery.each(Object,Function) (0, 23, 23) [38]
core: JIT compilation does not interfere with length retrieval (gh-2145) (0, 4, 4) [39]
core: jQuery.makeArray (0, 15, 15) [40]
core: jQuery.inArray (0, 3, 3) [41]
core: jQuery.isEmptyObject (0, 2, 2) [42]
core: jQuery.proxy (0, 9, 9) [43]
core: jQuery.parseHTML (0, 17, 17) [44]
core: jQuery.parseJSON (0, 20, 20) [45]
core: jQuery.parseXML (0, 8, 8) [46]
core: jQuery.camelCase() (0, 7, 7) [47]
core: Conditional compilation compatibility (#13274) (0, 3, 3) [48]
core: document ready when jQuery loaded asynchronously (#13655) (0, 1, 1) [49]
core: Tolerating alias-masked DOM properties (#14074) (0, 1, 1) [50]
core: Don't call window.onready (#14802) (0, 1, 1) [51]
callbacks: jQuery.Callbacks( '' ) - no filter (0, 21, 21) [52]
callbacks: jQuery.Callbacks( { } ) - no filter (0, 21, 21) [53]
callbacks: jQuery.Callbacks( '' ) - filter (0, 21, 21) [54]
callbacks: jQuery.Callbacks( { } ) - filter (0, 21, 21) [55]
callbacks: jQuery.Callbacks( 'once' ) - no filter (0, 21, 21) [56]
callbacks: jQuery.Callbacks( { 'once': true } ) - no filter (0, 21, 21) [57]
callbacks: jQuery.Callbacks( 'once' ) - filter (0, 21, 21) [58]
callbacks: jQuery.Callbacks( { 'once': true } ) - filter (0, 21, 21) [59]
callbacks: jQuery.Callbacks( 'memory' ) - no filter (0, 21, 21) [60]
callbacks: jQuery.Callbacks( { 'memory': true } ) - no filter (0, 21, 21) [61]
callbacks: jQuery.Callbacks( 'memory' ) - filter (0, 21, 21) [62]
callbacks: jQuery.Callbacks( { 'memory': true } ) - filter (0, 21, 21) [63]
callbacks: jQuery.Callbacks( 'unique' ) - no filter (0, 21, 21) [64]
callbacks: jQuery.Callbacks( { 'unique': true } ) - no filter (0, 21, 21) [65]
callbacks: jQuery.Callbacks( 'unique' ) - filter (0, 21, 21) [66]
callbacks: jQuery.Callbacks( { 'unique': true } ) - filter (0, 21, 21) [67]
callbacks: jQuery.Callbacks( 'stopOnFalse' ) - no filter (0, 21, 21) [68]
callbacks: jQuery.Callbacks( { 'stopOnFalse': true } ) - no filter (0, 21, 21) [69]
callbacks: jQuery.Callbacks( 'stopOnFalse' ) - filter (0, 21, 21) [70]
callbacks: jQuery.Callbacks( { 'stopOnFalse': true } ) - filter (0, 21, 21) [71]
callbacks: jQuery.Callbacks( 'once memory' ) - no filter (0, 21, 21) [72]
callbacks: jQuery.Callbacks( { 'once': true, 'memory': true } ) - no filter (0, 21, 21) [73]
callbacks: jQuery.Callbacks( 'once memory' ) - filter (0, 21, 21) [74]
callbacks: jQuery.Callbacks( { 'once': true, 'memory': true } ) - filter (0, 21, 21) [75]
callbacks: jQuery.Callbacks( 'once unique' ) - no filter (0, 21, 21) [76]
callbacks: jQuery.Callbacks( { 'once': true, 'unique': true } ) - no filter (0, 21, 21) [77]
callbacks: jQuery.Callbacks( 'once unique' ) - filter (0, 21, 21) [78]
callbacks: jQuery.Callbacks( { 'once': true, 'unique': true } ) - filter (0, 21, 21) [79]
callbacks: jQuery.Callbacks( 'once stopOnFalse' ) - no filter (0, 21, 21) [80]
callbacks: jQuery.Callbacks( { 'once': true, 'stopOnFalse': true } ) - no filter (0, 21, 21) [81]
callbacks: jQuery.Callbacks( 'once stopOnFalse' ) - filter (0, 21, 21) [82]
callbacks: jQuery.Callbacks( { 'once': true, 'stopOnFalse': true } ) - filter (0, 21, 21) [83]
callbacks: jQuery.Callbacks( 'memory unique' ) - no filter (0, 21, 21) [84]
callbacks: jQuery.Callbacks( { 'memory': true, 'unique': true } ) - no filter (0, 21, 21) [85]
callbacks: jQuery.Callbacks( 'memory unique' ) - filter (0, 21, 21) [86]
callbacks: jQuery.Callbacks( { 'memory': true, 'unique': true } ) - filter (0, 21, 21) [87]
callbacks: jQuery.Callbacks( 'memory stopOnFalse' ) - no filter (0, 21, 21) [88]
callbacks: jQuery.Callbacks( { 'memory': true, 'stopOnFalse': true } ) - no filter (0, 21, 21) [89]
callbacks: jQuery.Callbacks( 'memory stopOnFalse' ) - filter (0, 21, 21) [90]
callbacks: jQuery.Callbacks( { 'memory': true, 'stopOnFalse': true } ) - filter (0, 21, 21) [91]
callbacks: jQuery.Callbacks( 'unique stopOnFalse' ) - no filter (0, 21, 21) [92]
callbacks: jQuery.Callbacks( { 'unique': true, 'stopOnFalse': true } ) - no filter (0, 21, 21) [93]
callbacks: jQuery.Callbacks( 'unique stopOnFalse' ) - filter (0, 21, 21) [94]
callbacks: jQuery.Callbacks( { 'unique': true, 'stopOnFalse': true } ) - filter (0, 21, 21) [95]
callbacks: jQuery.Callbacks( options ) - options are copied (0, 1, 1) [96]
callbacks: jQuery.Callbacks.fireWith - arguments are copied (0, 1, 1) [97]
callbacks: jQuery.Callbacks.remove - should remove all instances (0, 1, 1) [98]
callbacks: jQuery.Callbacks.has (0, 13, 13) [99]
callbacks: jQuery.Callbacks() - adding a string doesn't cause a stack overflow (0, 1, 1) [100]
deferred: jQuery.Deferred (0, 23, 23) [101]
deferred: jQuery.Deferred - new operator (0, 23, 23) [102]
deferred: jQuery.Deferred - chainability (0, 10, 10) [103]
deferred: jQuery.Deferred.then - filtering (done) (0, 4, 4) [104]
deferred: jQuery.Deferred.then - filtering (fail) (0, 4, 4) [105]
deferred: jQuery.Deferred.then - filtering (progress) (0, 3, 3) [106]
deferred: jQuery.Deferred.then - deferred (done) (0, 3, 3) [107]
deferred: jQuery.Deferred.then - deferred (fail) (0, 3, 3) [108]
deferred: jQuery.Deferred.then - deferred (progress) (0, 3, 3) [109]
deferred: jQuery.Deferred.then - context (0, 7, 7) [110]
deferred: jQuery.when (0, 37, 37) [111]
deferred: jQuery.when - joined (0, 119, 119) [112]
support: zoom of doom (#13089) (0, 1, 1) [113]
support: body background is not lost if set prior to loading jQuery (#9239) (0, 2, 2) [114]
support: A background on the testElement does not cause IE8 to crash (#9823) (0, 1, 1) [115]
support: box-sizing does not affect jQuery.support.shrinkWrapBlocks (0, 1, 1) [116]
support: Check CSP (https://developer.mozilla.org/en-US/docs/Security/CSP) restrictions (1, 1, 2) [117]
support: Verify that the support tests resolve as expected per browser (0, 34, 34) [118]
data: expando (0, 1, 1) [119]
data: jQuery.data(div) (0, 25, 25) [120]
data: jQuery.data({}) (0, 25, 25) [121]
data: jQuery.data(window) (0, 25, 25) [122]
data: jQuery.data(document) (0, 25, 25) [123]
data: Expando cleanup (0, 4, 4) [124]
data: Data is not being set on comment and text nodes (0, 2, 2) [125]
data: jQuery.acceptData (0, 10, 10) [126]
data: jQuery().data() === undefined (#14101) (0, 2, 2) [127]
data: .data() (0, 5, 5) [128]
data: jQuery(Element).data(String, Object).data(String) (0, 18, 18) [129]
data: jQuery(plain Object).data(String, Object).data(String) (0, 16, 16) [130]
data: data-* attributes (0, 43, 43) [131]
data: .data(Object) (0, 4, 4) [132]
data: jQuery.removeData (0, 10, 10) [133]
data: .removeData() (0, 6, 6) [134]
data: JSON serialization (#8108) (0, 1, 1) [135]
data: jQuery.data should follow html5 specification regarding camel casing (0, 10, 10) [136]
data: jQuery.data should not miss data with preset hyphenated property names (0, 2, 2) [137]
data: jQuery.data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values (0, 24, 24) [138]
data: jQuery.data supports interoperable removal of hyphenated/camelCase properties (0, 27, 27) [139]
data: .removeData supports removal of hyphenated properties via array (#12786) (0, 4, 4) [140]
data: Triggering the removeData should not throw exceptions. (#10080) (0, 1, 1) [141]
data: Only check element attributes once when calling .data() - #8909 (0, 2, 2) [142]
data: JSON data- attributes can have newlines (0, 1, 1) [143]
data: enumerate data attrs on body (#14894) (0, 1, 1) [144]
queue: queue() with other types (0, 14, 14) [145]
queue: queue(name) passes in the next item in the queue as a parameter (0, 2, 2) [146]
queue: queue() passes in the next item in the queue as a parameter to fx queues (0, 3, 3) [147]
queue: callbacks keep their place in the queue (0, 5, 5) [148]
queue: delay() (0, 2, 2) [149]
queue: clearQueue(name) clears the queue (0, 2, 2) [150]
queue: clearQueue() clears the fx queue (0, 1, 1) [151]
queue: fn.promise() - called when fx queue is empty (0, 3, 3) [152]
queue: fn.promise( "queue" ) - called whenever last queue function is dequeued (0, 5, 5) [153]
queue: fn.promise( "queue" ) - waits for animation to complete before resolving (0, 2, 2) [154]
queue: .promise(obj) (0, 2, 2) [155]
queue: delay() can be stopped (0, 3, 3) [156]
queue: queue stop hooks (0, 2, 2) [157]
attributes: jQuery.propFix integrity test (0, 1, 1) [158]
attributes: attr(String) (0, 50, 50) [159]
attributes: attr(String) on cloned elements, #9646 (0, 4, 4) [160]
attributes: attr(String) in XML Files (0, 3, 3) [161]
attributes: attr(String, Function) (0, 2, 2) [162]
attributes: attr(Hash) (0, 3, 3) [163]
attributes: attr(String, Object) (0, 71, 71) [164]
attributes: attr - extending the boolean attrHandle (0, 1, 1) [165]
attributes: attr(String, Object) - Loaded via XML document (0, 2, 2) [166]
attributes: attr(String, Object) - Loaded via XML fragment (0, 2, 2) [167]
attributes: attr('tabindex') (0, 8, 8) [168]
attributes: attr('tabindex', value) (0, 9, 9) [169]
attributes: removeAttr(String) (0, 12, 12) [170]
attributes: removeAttr(String) in XML (0, 7, 7) [171]
attributes: removeAttr(Multi String, variable space width) (0, 8, 8) [172]
attributes: prop(String, Object) (0, 17, 17) [173]
attributes: prop(String, Object) on null/undefined (0, 14, 14) [174]
attributes: prop('tabindex') (0, 11, 11) [175]
attributes: prop('tabindex', value) (0, 10, 10) [176]
attributes: removeProp(String) (0, 6, 6) [177]
attributes: val() after modification (0, 1, 1) [178]
attributes: val() (0, 26, 26) [179]
attributes: val() with non-matching values on dropdown list (0, 3, 3) [180]
attributes: val() respects numbers without exception (Bug #9319) (0, 4, 4) [181]
attributes: val(String/Number) (0, 9, 9) [182]
attributes: val(Function) (0, 9, 9) [183]
attributes: val(Array of Numbers) (Bug #7123) (0, 4, 4) [184]
attributes: val(Function) with incoming value (0, 10, 10) [185]
attributes: val(select) after form.reset() (Bug #2551) (0, 3, 3) [186]
attributes: addClass(String) (0, 9, 9) [187]
attributes: addClass(Function) (0, 9, 9) [188]
attributes: addClass(Function) with incoming value (0, 52, 52) [189]
attributes: removeClass(String) - simple (0, 8, 8) [190]
attributes: removeClass(Function) - simple (0, 8, 8) [191]
attributes: removeClass(Function) with incoming value (0, 52, 52) [192]
attributes: removeClass() removes duplicates (0, 1, 1) [193]
attributes: removeClass(undefined) is a no-op (0, 1, 1) [194]
attributes: toggleClass(String|boolean|undefined[, boolean]) (0, 17, 17) [195]
attributes: toggleClass(Function[, boolean]) (0, 17, 17) [196]
attributes: toggleClass(Function[, boolean]) with incoming value (0, 14, 14) [197]
attributes: addClass, removeClass, hasClass (0, 17, 17) [198]
attributes: addClass, removeClass, hasClass on many elements (0, 19, 19) [199]
attributes: contents().hasClass() returns correct values (0, 2, 2) [200]
attributes: hasClass correctly interprets non-space separators (#13835) (0, 4, 4) [201]
attributes: coords returns correct values in IE6/IE7, see #10828 (0, 1, 1) [202]
attributes: should not throw at $(option).val() (#14686) (0, 1, 1) [203]
attributes: Insignificant white space returned for $(option).val() (#14858) (0, 3, 3) [204]
event: null or undefined handler (0, 2, 2) [205]
event: on() with non-null,defined data (0, 2, 2) [206]
event: Handler changes and .trigger() order (0, 1, 1) [207]
event: on(), with data (0, 4, 4) [208]
event: click(), with data (0, 3, 3) [209]
event: on(), with data, trigger with data (0, 4, 4) [210]
event: on(), multiple events at once (0, 2, 2) [211]
event: on(), five events at once (0, 1, 1) [212]
event: on(), multiple events at once and namespaces (0, 7, 7) [213]
event: on(), namespace with special add (0, 27, 27) [214]
event: on(), no data (0, 1, 1) [215]
event: on/one/off(Object) (0, 6, 6) [216]
event: on/off(Object), on/off(Object, String) (0, 6, 6) [217]
event: on immediate propagation (0, 2, 2) [218]
event: on bubbling, isDefaultPrevented, stopImmediatePropagation (0, 3, 3) [219]
event: on(), iframes (0, 1, 1) [220]
event: on(), trigger change on select (0, 5, 5) [221]
event: on(), namespaced events, cloned events (0, 18, 18) [222]
event: on(), multi-namespaced events (0, 6, 6) [223]
event: namespace-only event binding is a no-op (0, 2, 2) [224]
event: on(), with same function (0, 2, 2) [225]
event: on(), make sure order is maintained (0, 1, 1) [226]
event: on(), with different this object (0, 4, 4) [227]
event: on(name, false), off(name, false) (0, 3, 3) [228]
event: on(name, selector, false), off(name, selector, false) (0, 3, 3) [229]
event: on()/trigger()/off() on plain object (0, 7, 7) [230]
event: off(type) (0, 1, 1) [231]
event: off(eventObject) (0, 4, 4) [232]
event: hover() mouseenter mouseleave (0, 1, 1) [233]
event: mouseover triggers mouseenter (0, 1, 1) [234]
event: pointerover triggers pointerenter (0, 1, 1) [235]
event: withinElement implemented with jQuery.contains() (0, 1, 1) [236]
event: mouseenter, mouseleave don't catch exceptions (0, 2, 2) [237]
event: trigger() shortcuts (0, 6, 6) [238]
event: trigger() bubbling (0, 18, 18) [239]
event: trigger(type, [data], [fn]) (0, 16, 16) [240]
event: submit event bubbles on copied forms (#11649) (0, 3, 3) [241]
event: change event bubbles on copied forms (#11796) (0, 3, 3) [242]
event: trigger(eventObject, [data], [fn]) (0, 28, 28) [243]
event: .trigger() bubbling on disconnected elements (#10489) (0, 2, 2) [244]
event: .trigger() doesn't bubble load event (#10717) (0, 1, 1) [245]
event: Delegated events in SVG (#10791; #13180) (0, 2, 2) [246]
event: Delegated events in forms (#10844; #11145; #8165; #11382, #11764) (0, 5, 5) [247]
event: Submit event can be stopped (#11049) (0, 1, 1) [248]
event: on(beforeunload) (0, 4, 4) [249]
event: jQuery.Event( type, props ) (0, 5, 5) [250]
event: jQuery.Event properties (0, 12, 12) [251]
event: .on()/.off() (0, 65, 65) [252]
event: jQuery.off using dispatched jQuery.Event (0, 1, 1) [253]
event: delegated event with delegateTarget-relative selector (0, 3, 3) [254]
event: delegated event with selector matching Object.prototype property (#13203) (0, 1, 1) [255]
event: delegated event with intermediate DOM manipulation (#13208) (0, 1, 1) [256]
event: stopPropagation() stops directly-bound events on delegated target (0, 1, 1) [257]
event: off all bound delegated events (0, 2, 2) [258]
event: on with multiple delegated events (0, 1, 1) [259]
event: delegated on with change (0, 8, 8) [260]
event: delegated on with submit (0, 2, 2) [261]
event: delegated off() with only namespaces (0, 2, 2) [262]
event: Non DOM element events (0, 1, 1) [263]
event: inline handler returning false stops default (0, 1, 1) [264]
event: window resize (0, 2, 2) [265]
event: focusin bubbles (0, 2, 2) [266]
event: custom events with colons (#3533, #8272) (0, 1, 1) [267]
event: .on and .off (0, 9, 9) [268]
event: special on name mapping (0, 7, 7) [269]
event: .on and .off, selective mixed removal (#10705) (0, 7, 7) [270]
event: .on( event-map, null-selector, data ) #11130 (0, 1, 1) [271]
event: clone() delegated events (#11076) (0, 3, 3) [272]
event: checkbox state (#3827) (0, 9, 9) [273]
event: hover event no longer special since 1.9 (0, 1, 1) [274]
event: fixHooks extensions (0, 2, 2) [275]
event: focusin using non-element targets (0, 2, 2) [276]
event: focusin from an iframe (0, 1, 1) [277]
event: jQuery.ready promise (0, 1, 1) [278]
event: Focusing iframe element (0, 1, 1) [279]
event: triggerHandler(onbeforeunload) (0, 1, 1) [280]
event: jQuery.ready synchronous load with long loading subresources (0, 1, 1) [281]
event: change handler should be detached from element (0, 2, 2) [282]
event: trigger click on checkbox, fires change event (0, 1, 1) [283]
event: Namespace preserved when passed an Event (#12739) (0, 4, 4) [284]
event: make sure events cloned correctly (0, 18, 18) [285]
event: String.prototype.namespace does not cause trigger() to throw (#13360) (0, 1, 1) [286]
event: Inline event result is returned (#13993) (0, 1, 1) [287]
selector: element - jQuery only (0, 7, 7) [288]
selector: id (0, 26, 26) [289]
selector: class - jQuery only (0, 4, 4) [290]
selector: name (0, 5, 5) [291]
selector: selectors with comma (0, 4, 4) [292]
selector: child and adjacent (0, 27, 27) [293]
selector: attributes (0, 54, 54) [294]
selector: disconnected nodes (0, 1, 1) [295]
selector: disconnected nodes - jQuery only (0, 3, 3) [296]
selector: attributes - jQuery.attr (0, 35, 35) [297]
selector: jQuery.contains (0, 16, 16) [298]
selector: jQuery.unique (0, 14, 14) [299]
selector: Sizzle cache collides with multiple Sizzles on a page (0, 4, 4) [300]
selector: Iframe dispatch should not affect jQuery (#13936) (0, 1, 1) [301]
traversing: find(String) (0, 1, 1) [302]
traversing: find(String) under non-elements (0, 2, 2) [303]
traversing: find(leading combinator) (0, 4, 4) [304]
traversing: find(node|jQuery object) (0, 13, 13) [305]
traversing: is(String|undefined) (0, 23, 23) [306]
traversing: is() against non-elements (#10178) (0, 14, 14) [307]
traversing: is(jQuery) (0, 19, 19) [308]
traversing: is() with :has() selectors (0, 6, 6) [309]
traversing: is() with positional selectors (0, 27, 27) [310]
traversing: index() (0, 2, 2) [311]
traversing: index(Object|String|undefined) (0, 16, 16) [312]
traversing: filter(Selector|undefined) (0, 9, 9) [313]
traversing: filter(Function) (0, 2, 2) [314]
traversing: filter(Element) (0, 1, 1) [315]
traversing: filter(Array) (0, 1, 1) [316]
traversing: filter(jQuery) (0, 1, 1) [317]
traversing: filter() with positional selectors (0, 19, 19) [318]
traversing: closest() (0, 13, 13) [319]
traversing: closest() with positional selectors (0, 2, 2) [320]
traversing: closest(jQuery) (0, 8, 8) [321]
traversing: not(Selector|undefined) (0, 11, 11) [322]
traversing: not(Element) (0, 1, 1) [323]
traversing: not(Function) (0, 1, 1) [324]
traversing: not(Array) (0, 2, 2) [325]
traversing: not(jQuery) (0, 1, 1) [326]
traversing: has(Element) (0, 3, 3) [327]
traversing: has(Selector) (0, 5, 5) [328]
traversing: has(Arrayish) (0, 4, 4) [329]
traversing: addBack() (0, 5, 5) [330]
traversing: siblings([String]) (0, 6, 6) [331]
traversing: siblings([String]) - jQuery only (0, 2, 2) [332]
traversing: children([String]) (0, 2, 2) [333]
traversing: children([String]) - jQuery only (0, 1, 1) [334]
traversing: parent([String]) (0, 6, 6) [335]
traversing: parents([String]) (0, 6, 6) [336]
traversing: parentsUntil([String]) (0, 10, 10) [337]
traversing: next([String]) (0, 6, 6) [338]
traversing: prev([String]) (0, 5, 5) [339]
traversing: nextAll([String]) (0, 5, 5) [340]
traversing: prevAll([String]) (0, 5, 5) [341]
traversing: nextUntil([String]) (0, 12, 12) [342]
traversing: prevUntil([String]) (0, 11, 11) [343]
traversing: contents() (0, 12, 12) [344]
traversing: sort direction (0, 12, 12) [345]
traversing: add(String selector) (0, 2, 2) [346]
traversing: add(String selector, String context) (0, 1, 1) [347]
traversing: add(String html) (0, 3, 3) [348]
traversing: add(jQuery) (0, 4, 4) [349]
traversing: add(Element) (0, 2, 2) [350]
traversing: add(Array elements) (0, 1, 1) [351]
traversing: add(Window) (0, 1, 1) [352]
traversing: add(NodeList|undefined|HTMLFormElement|HTMLSelectElement) (0, 4, 4) [353]
traversing: add(String, Context) (0, 6, 6) [354]
traversing: eq('-1') #10616 (0, 3, 3) [355]
traversing: index(no arg) #10977 (0, 2, 2) [356]
traversing: traversing non-elements with attribute filters (#12523) (0, 5, 5) [357]
manipulation: text() (0, 5, 5) [358]
manipulation: text(undefined) (0, 1, 1) [359]
manipulation: text(String) (0, 7, 7) [360]
manipulation: text(Function) (0, 7, 7) [361]
manipulation: text(Function) with incoming value (0, 2, 2) [362]
manipulation: append(String|Element|Array<Element>|jQuery) (0, 78, 78) [363]
manipulation: append(Function) (0, 78, 78) [364]
manipulation: append(param) to object, see #11280 (0, 5, 5) [365]
manipulation: append(Function) returns String (0, 4, 4) [366]
manipulation: append(Function) returns Element (0, 2, 2) [367]
manipulation: append(Function) returns Array<Element> (0, 2, 2) [368]
manipulation: append(Function) returns jQuery (0, 2, 2) [369]
manipulation: append(Function) returns Number (0, 2, 2) [370]
manipulation: XML DOM manipulation (#9960) (0, 5, 5) [371]
manipulation: append the same fragment with events (Bug #6997, 5566) (0, 2, 2) [372]
manipulation: append HTML5 sectioning elements (Bug #6485) (0, 2, 2) [373]
manipulation: HTML5 Elements inherit styles from style rules (Bug #10501) (0, 1, 1) [374]
manipulation: html(String) with HTML5 (Bug #6485) (0, 2, 2) [375]
manipulation: IE8 serialization bug (0, 2, 2) [376]
manipulation: html() object element #10324 (0, 1, 1) [377]
manipulation: append(xml) (0, 1, 1) [378]
manipulation: appendTo(String) (0, 4, 4) [379]
manipulation: appendTo(Element|Array<Element>) (0, 2, 2) [380]
manipulation: appendTo(jQuery) (0, 10, 10) [381]
manipulation: prepend(String) (0, 2, 2) [382]
manipulation: prepend(Element) (0, 1, 1) [383]
manipulation: prepend(Array<Element>) (0, 1, 1) [384]
manipulation: prepend(jQuery) (0, 1, 1) [385]
manipulation: prepend(Array<jQuery>) (0, 1, 1) [386]
manipulation: prepend(Function) with incoming value -- String (0, 4, 4) [387]
manipulation: prepend(Function) with incoming value -- Element (0, 2, 2) [388]
manipulation: prepend(Function) with incoming value -- Array<Element> (0, 2, 2) [389]
manipulation: prepend(Function) with incoming value -- jQuery (0, 2, 2) [390]
manipulation: prependTo(String) (0, 2, 2) [391]
manipulation: prependTo(Element) (0, 1, 1) [392]
manipulation: prependTo(Array<Element>) (0, 1, 1) [393]
manipulation: prependTo(jQuery) (0, 1, 1) [394]
manipulation: prependTo(Array<jQuery>) (0, 1, 1) [395]
manipulation: before(String) (0, 1, 1) [396]
manipulation: before(Element) (0, 1, 1) [397]
manipulation: before(Array<Element>) (0, 1, 1) [398]
manipulation: before(jQuery) (0, 1, 1) [399]
manipulation: before(Array<jQuery>) (0, 1, 1) [400]
manipulation: before(Function) -- Returns String (0, 1, 1) [401]
manipulation: before(Function) -- Returns Element (0, 1, 1) [402]
manipulation: before(Function) -- Returns Array<Element> (0, 1, 1) [403]
manipulation: before(Function) -- Returns jQuery (0, 1, 1) [404]
manipulation: before(Function) -- Returns Array<jQuery> (0, 1, 1) [405]
manipulation: before(no-op) (0, 2, 2) [406]
manipulation: before and after w/ empty object (#10812) (0, 1, 1) [407]
manipulation: .before() and .after() disconnected node (0, 2, 2) [408]
manipulation: insert with .before() on disconnected node last (0, 1, 1) [409]
manipulation: insert with .before() on disconnected node first (0, 1, 1) [410]
manipulation: insert with .before() on disconnected node last (0, 1, 1) [411]
manipulation: insert with .before() on disconnected node last (0, 1, 1) [412]
manipulation: insertBefore(String) (0, 1, 1) [413]
manipulation: insertBefore(Element) (0, 1, 1) [414]
manipulation: insertBefore(Array<Element>) (0, 1, 1) [415]
manipulation: insertBefore(jQuery) (0, 1, 1) [416]
manipulation: .after(String) (0, 1, 1) [417]
manipulation: .after(Element) (0, 1, 1) [418]
manipulation: .after(Array<Element>) (0, 1, 1) [419]
manipulation: .after(jQuery) (0, 1, 1) [420]
manipulation: .after(Function) returns String (0, 1, 1) [421]
manipulation: .after(Function) returns Element (0, 1, 1) [422]
manipulation: .after(Function) returns Array<Element> (0, 1, 1) [423]
manipulation: .after(Function) returns jQuery (0, 1, 1) [424]
manipulation: .after(disconnected node) (0, 2, 2) [425]
manipulation: insertAfter(String) (0, 1, 1) [426]
manipulation: insertAfter(Element) (0, 1, 1) [427]
manipulation: insertAfter(Array<Element>) (0, 1, 1) [428]
manipulation: insertAfter(jQuery) (0, 1, 1) [429]
manipulation: replaceWith(String|Element|Array<Element>|jQuery) (0, 29, 29) [430]
manipulation: replaceWith(Function) (0, 30, 30) [431]
manipulation: replaceWith(string) for more than one element (0, 3, 3) [432]
manipulation: Empty replaceWith (#13401; #13596) (0, 8, 8) [433]
manipulation: replaceAll(String) (0, 2, 2) [434]
manipulation: replaceAll(Element) (0, 2, 2) [435]
manipulation: replaceAll(Array<Element>) (0, 3, 3) [436]
manipulation: replaceAll(jQuery) (0, 3, 3) [437]
manipulation: jQuery.clone() (#8017) (0, 2, 2) [438]
manipulation: append to multiple elements (#8070) (0, 2, 2) [439]
manipulation: table manipulation (0, 2, 2) [440]
manipulation: clone() (0, 45, 45) [441]
manipulation: clone(script type=non-javascript) (#11359) (0, 3, 3) [442]
manipulation: clone(form element) (Bug #3879, #6655) (0, 5, 5) [443]
manipulation: clone(multiple selected options) (Bug #8129) (0, 1, 1) [444]
manipulation: clone() on XML nodes (0, 2, 2) [445]
manipulation: clone() on local XML nodes with html5 nodename (0, 2, 2) [446]
manipulation: html(undefined) (0, 1, 1) [447]
manipulation: html() on empty set (0, 1, 1) [448]
manipulation: html(String|Number) (0, 39, 39) [449]
manipulation: html(Function) (0, 39, 39) [450]
manipulation: html( $.text() ) (0, 1, 1) [451]
manipulation: html( fn ) returns $.text() (0, 1, 1) [452]
manipulation: html(Function) with incoming value -- direct selection (0, 4, 4) [453]
manipulation: html(Function) with incoming value -- jQuery.contents() (0, 14, 14) [454]
manipulation: clone()/html() don't expose jQuery/Sizzle expandos (#12858) (0, 2, 2) [455]
manipulation: remove() no filters (0, 3, 3) [456]
manipulation: remove() with filters (0, 8, 8) [457]
manipulation: remove() event cleaning (0, 1, 1) [458]
manipulation: remove() in document order #13779 (0, 1, 1) [459]
manipulation: detach() no filters (0, 3, 3) [460]
manipulation: detach() with filters (0, 8, 8) [461]
manipulation: detach() event cleaning (0, 1, 1) [462]
manipulation: empty() (0, 6, 6) [463]
manipulation: jQuery.cleanData (0, 14, 14) [464]
manipulation: jQuery.buildFragment - no plain-text caching (Bug #6779) (0, 1, 1) [465]
manipulation: jQuery.html - execute scripts escaped with html comment or CDATA (#9221) (0, 3, 3) [466]
manipulation: jQuery.buildFragment - plain objects are not a document #8950 (0, 1, 1) [467]
manipulation: jQuery.clone - no exceptions for object elements #9587 (0, 1, 1) [468]
manipulation: Cloned, detached HTML5 elems (#10667,10670) (0, 7, 7) [469]
manipulation: Guard against exceptions when clearing safeChildNodes (0, 1, 1) [470]
manipulation: Ensure oldIE creates a new set on appendTo (#8894) (0, 5, 5) [471]
manipulation: html() - script exceptions bubble (#11743) (0, 2, 2) [472]
manipulation: checked state is cloned with clone() (0, 2, 2) [473]
manipulation: manipulate mixed jQuery and text (#12384, #12346) (0, 2, 2) [474]
manipulation: buildFragment works even if document[0] is iframe's window object in IE9/10 (#12266) (0, 1, 1) [475]
manipulation: script evaluation (#11795) (0, 13, 13) [476]
manipulation: jQuery._evalUrl (#12838) (0, 5, 5) [477]
manipulation: insertAfter, insertBefore, etc do not work when destination is original element. Element is removed (#4087) (0, 10, 10) [478]
manipulation: Index for function argument should be received (#13094) (0, 2, 2) [479]
manipulation: Make sure jQuery.fn.remove can work on elements in documentFragment (0, 1, 1) [480]
wrap: wrap(String|Element) (0, 19, 19) [481]
wrap: wrap(Function) (0, 19, 19) [482]
wrap: wrap(Function) with index (#10177) (0, 6, 6) [483]
wrap: wrap(String) consecutive elements (#10177) (0, 12, 12) [484]
wrap: wrapAll(String) (0, 5, 5) [485]
wrap: wrapAll(Element) (0, 3, 3) [486]
wrap: wrapInner(String) (0, 6, 6) [487]
wrap: wrapInner(Element) (0, 5, 5) [488]
wrap: wrapInner(Function) returns String (0, 6, 6) [489]
wrap: wrapInner(Function) returns Element (0, 5, 5) [490]
wrap: unwrap() (0, 9, 9) [491]
wrap: jQuery(<tag>) & wrap[Inner/All]() handle unknown elems (#10667) (0, 2, 2) [492]
wrap: wrapping scripts (#10470) (0, 2, 2) [493]
css: css(String|Hash) (0, 43, 43) [494]
css: css() explicit and relative values (0, 29, 29) [495]
css: css(String, Object) (0, 20, 20) [496]
css: css(Array) (0, 2, 2) [497]
css: css(String, Function) (0, 3, 3) [498]
css: css(String, Function) with incoming value (0, 3, 3) [499]
css: css(Object) where values are Functions (0, 3, 3) [500]
css: css(Object) where values are Functions with incoming values (0, 3, 3) [501]
css: show(); hide() (0, 4, 4) [502]
css: show(); (0, 18, 18) [503]
css: show() resolves correct default display #8099 (0, 7, 7) [504]
css: show() resolves correct default display for detached nodes (0, 13, 13) [505]
css: show() resolves correct default display #10227 (0, 4, 4) [506]
css: show() resolves correct default display when iframe display:none #12904 (0, 2, 2) [507]
css: toggle() (0, 9, 9) [508]
css: hide hidden elements (bug #7141) (0, 3, 3) [509]
css: jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) (0, 4, 4) [510]
css: internal ref to elem.runtimeStyle (bug #7608) (0, 1, 1) [511]
css: marginRight computed style (bug #3333) (0, 1, 1) [512]
css: box model properties incorrectly returning % instead of px, see #10639 and #12088 (0, 2, 2) [513]
css: jQuery.cssProps behavior, (bug #8402) (0, 2, 2) [514]
css: widows & orphans #8936 (0, 1, 1) [515]
css: can't get css for disconnected in IE<9, see #10254 and #8388 (0, 2, 2) [516]
css: can't get background-position in IE<9, see #10796 (0, 8, 8) [517]
css: percentage properties for bottom and right in IE<9 should not be incorrectly transformed to pixels, see #11311 (0, 1, 1) [518]
css: percentage properties for left and top should be transformed to pixels, see #9505 (0, 2, 2) [519]
css: Do not append px (#9548, #12990) (0, 2, 2) [520]
css: css('width') and css('height') should respect box-sizing, see #11004 (0, 4, 4) [521]
css: css('width') should work correctly before document ready (#14084) (0, 1, 1) [522]
css: certain css values of 'normal' should be convertable to a number, see #8627 (0, 3, 3) [523]
css: cssHooks - expand (0, 15, 15) [524]
css: css opacity consistency across browsers (#12685) (0, 4, 4) [525]
css: :visible/:hidden selectors (0, 13, 13) [526]
css: Keep the last style if the new one isn't recognized by the browser (#14836) (0, 2, 2) [527]
css: Reset the style if set to an empty string (0, 1, 1) [528]
css: Clearing a Cloned Element's Style Shouldn't Clear the Original Element's Style (#8908) (0, 24, 24) [529]
css: Make sure initialized display value for disconnected nodes is correct (#13310) (0, 4, 4) [530]
css: show() after hide() should always set display to initial value (#14750) (0, 1, 1) [531]
css: Don't append px to CSS "order" value (#14049) (0, 1, 1) [532]
css: Do not throw on frame elements from css method (#15098) (0, 1, 1) [533]
serialize: jQuery.param() (0, 22, 22) [534]
serialize: jQuery.param() Constructed prop values (0, 4, 4) [535]
serialize: serialize() (0, 5, 5) [536]
ajax: jQuery.ajax() - success callbacks (0, 8, 8) [537]
ajax: jQuery.ajax() - success callbacks - (url, options) syntax (0, 8, 8) [538]
ajax: jQuery.ajax() - success callbacks (late binding) (0, 8, 8) [539]
ajax: jQuery.ajax() - success callbacks (oncomplete binding) (0, 8, 8) [540]
ajax: jQuery.ajax() - error callbacks (0, 8, 8) [541]
ajax: jQuery.ajax() - textStatus and errorThrown values (0, 4, 4) [542]
ajax: jQuery.ajax() - responseText on error (0, 1, 1) [543]
ajax: jQuery.ajax() - retry with jQuery.ajax( this ) (0, 2, 2) [544]
ajax: jQuery.ajax() - headers (0, 5, 5) [545]
ajax: jQuery.ajax() - Accept header (0, 1, 1) [546]
ajax: jQuery.ajax() - contentType (0, 2, 2) [547]
ajax: jQuery.ajax() - protocol-less urls (0, 1, 1) [548]
ajax: jQuery.ajax() - hash (0, 3, 3) [549]
ajax: jQuery.ajax() - cross-domain detection (0, 7, 7) [550]
ajax: jQuery.ajax() - abort (0, 9, 9) [551]
ajax: jQuery.ajax() - events with context (0, 12, 12) [552]
ajax: jQuery.ajax() - events without context (0, 3, 3) [553]
ajax: #15118 - jQuery.ajax() - function without jQuery.event (0, 1, 1) [554]
ajax: jQuery.ajax() - context modification (0, 1, 1) [555]
ajax: jQuery.ajax() - context modification through ajaxSetup (0, 3, 3) [556]
ajax: jQuery.ajax() - disabled globals (0, 3, 3) [557]
ajax: jQuery.ajax() - xml: non-namespace elements inside namespaced elements (0, 3, 3) [558]
ajax: jQuery.ajax() - xml: non-namespace elements inside namespaced elements (over JSONP) (0, 3, 3) [559]
ajax: jQuery.ajax() - HEAD requests (0, 2, 2) [560]
ajax: jQuery.ajax() - beforeSend (0, 1, 1) [561]
ajax: jQuery.ajax() - beforeSend, cancel request manually (0, 2, 2) [562]
ajax: jQuery.ajax() - dataType html (0, 5, 5) [563]
ajax: jQuery.ajax() - synchronous request (0, 1, 1) [564]
ajax: jQuery.ajax() - synchronous request with callbacks (0, 2, 2) [565]
ajax: jQuery.ajax(), jQuery.get[Script|JSON](), jQuery.post(), pass-through request object (0, 8, 8) [566]
ajax: jQuery.ajax() - cache (0, 12, 12) [567]
ajax: jQuery.ajax() - JSONP - Query String (?n) - Same Domain (2, 2, 4) [568]
ajax: jQuery.ajax() - JSONP - Explicit callback param - Same Domain (0, 9, 9) [569]
ajax: jQuery.ajax() - JSONP - Callback in data - Same Domain (0, 2, 2) [570]
ajax: jQuery.ajax() - JSONP - POST - Same Domain (0, 3, 3) [571]
ajax: jQuery.ajax() - JSONP - Same Domain (0, 3, 3) [572]
ajax: jQuery.ajax() - JSONP - Query String (?n) - Cross Domain (2, 2, 4) [573]
ajax: jQuery.ajax() - JSONP - Explicit callback param - Cross Domain (0, 9, 9) [574]
ajax: jQuery.ajax() - JSONP - Callback in data - Cross Domain (0, 2, 2) [575]
ajax: jQuery.ajax() - JSONP - POST - Cross Domain (0, 3, 3) [576]
ajax: jQuery.ajax() - JSONP - Cross Domain (0, 3, 3) [577]
ajax: jQuery.ajax() - script, Remote (0, 2, 2) [578]
ajax: jQuery.ajax() - script, Remote with POST (0, 3, 3) [579]
ajax: jQuery.ajax() - script, Remote with scheme-less URL (0, 2, 2) [580]
ajax: jQuery.ajax() - malformed JSON (0, 2, 2) [581]
ajax: jQuery.ajax() - script by content-type (0, 2, 2) [582]
ajax: jQuery.ajax() - JSON by content-type (0, 5, 5) [583]
ajax: jQuery.ajax() - JSON by content-type disabled with options (0, 6, 6) [584]
ajax: jQuery.ajax() - simple get (0, 1, 1) [585]
ajax: jQuery.ajax() - simple post (0, 1, 1) [586]
ajax: jQuery.ajax() - data option - empty bodies for non-GET requests (0, 1, 1) [587]
ajax: jQuery.ajax() - If-Modified-Since support (cache) (0, 3, 3) [588]
ajax: jQuery.ajax() - Etag support (cache) (0, 3, 3) [589]
ajax: jQuery.ajax() - If-Modified-Since support (no cache) (0, 3, 3) [590]
ajax: jQuery.ajax() - Etag support (no cache) (0, 3, 3) [591]
ajax: jQuery.ajax() - failing cross-domain (non-existing) (0, 1, 1) [592]
ajax: jQuery.ajax() - failing cross-domain (0, 1, 1) [593]
ajax: jQuery.ajax() - atom+xml (0, 1, 1) [594]
ajax: jQuery.ajax() - statusText (0, 3, 3) [595]
ajax: jQuery.ajax() - statusCode (0, 20, 20) [596]
ajax: jQuery.ajax() - transitive conversions (0, 8, 8) [597]
ajax: jQuery.ajax() - overrideMimeType (0, 2, 2) [598]
ajax: jQuery.ajax() - empty json gets to error callback instead of success callback. (0, 1, 1) [599]
ajax: #2688 - jQuery.ajax() - beforeSend, cancel request (0, 2, 2) [600]
ajax: #2806 - jQuery.ajax() - data option - evaluate function values (0, 1, 1) [601]
ajax: #7531 - jQuery.ajax() - Location object as url (0, 1, 1) [602]
ajax: #7578 - jQuery.ajax() - JSONP - default for cache option - Same Domain (0, 1, 1) [603]
ajax: #7578 - jQuery.ajax() - JSONP - default for cache option - Cross Domain (0, 1, 1) [604]
ajax: #8107 - jQuery.ajax() - multiple method signatures introduced in 1.5 (0, 4, 4) [605]
ajax: #8205 - jQuery.ajax() - JSONP - re-use callbacks name - Same Domain (0, 2, 2) [606]
ajax: #8205 - jQuery.ajax() - JSONP - re-use callbacks name - Cross Domain (0, 2, 2) [607]
ajax: #9887 - jQuery.ajax() - Context with circular references (#9887) (0, 2, 2) [608]
ajax: #10093 - jQuery.ajax() - falsy url as argument (0, 4, 4) [609]
ajax: #10093 - jQuery.ajax() - falsy url in settings object (0, 4, 4) [610]
ajax: #11151 - jQuery.ajax() - parse error body (0, 2, 2) [611]
ajax: #11426 - jQuery.ajax() - loading binary data shouldn't throw an exception in IE (0, 1, 1) [612]
ajax: #11743 - jQuery.ajax() - script, throws exception (0, 1, 1) [613]
ajax: #12004 - jQuery.ajax() - method is an alias of type - method set globally (0, 3, 3) [614]
ajax: #12004 - jQuery.ajax() - method is an alias of type - type set globally (0, 3, 3) [615]
ajax: #13276 - jQuery.ajax() - compatibility between XML documents from ajax requests and parsed string (0, 1, 1) [616]
ajax: #13292 - jQuery.ajax() - converter is bypassed for 204 requests (0, 3, 3) [617]
ajax: #13388 - jQuery.ajax() - responseXML (0, 3, 3) [618]
ajax: #13922 - jQuery.ajax() - converter is bypassed for HEAD requests (0, 3, 3) [619]
ajax: #13240 - jQuery.ajax() - support non-RFC2616 methods (0, 1, 1) [620]
ajax: #14379 - jQuery.ajax() on unload (0, 1, 1) [621]
ajax: jQuery.ajaxPrefilter() - abort (0, 1, 1) [622]
ajax: jQuery.ajaxSetup() (0, 1, 1) [623]
ajax: jQuery.ajaxSetup({ timeout: Number }) - with global timeout (0, 2, 2) [624]
ajax: jQuery.ajaxSetup({ timeout: Number }) with localtimeout (0, 1, 1) [625]
ajax: #11264 - jQuery.domManip() - no side effect because of ajaxSetup or global events (0, 1, 1) [626]
ajax: #11402 - jQuery.domManip() - script in comments are properly evaluated (0, 2, 2) [627]
ajax: jQuery.get( String, Hash, Function ) - parse xml and use text() on nodes (0, 2, 2) [628]
ajax: #8277 - jQuery.get( String, Function ) - data in ajaxSettings (0, 1, 1) [629]
ajax: jQuery.getJSON( String, Hash, Function ) - JSON array (0, 5, 5) [630]
ajax: jQuery.getJSON( String, Function ) - JSON object (0, 2, 2) [631]
ajax: jQuery.getJSON() - Using Native JSON (0, 2, 2) [632]
ajax: jQuery.getJSON( String, Function ) - JSON object with absolute url to local content (0, 2, 2) [633]
ajax: jQuery.getScript( String, Function ) - with callback (0, 2, 2) [634]
ajax: jQuery.getScript( String, Function ) - no callback (0, 1, 1) [635]
ajax: #8082 - jQuery.getScript( String, Function ) - source as responseText (0, 2, 2) [636]
ajax: jQuery.fn.load( String ) (0, 2, 2) [637]
ajax: jQuery.fn.load() - 404 error callbacks (0, 6, 6) [638]
ajax: jQuery.fn.load( String, null ) (0, 2, 2) [639]
ajax: jQuery.fn.load( String, undefined ) (0, 2, 2) [640]
ajax: jQuery.fn.load( URL_SELECTOR ) (0, 1, 1) [641]
ajax: jQuery.fn.load( URL_SELECTOR with spaces ) (0, 1, 1) [642]
ajax: jQuery.fn.load( String, Function ) - simple: inject text into DOM (0, 2, 2) [643]
ajax: jQuery.fn.load( String, Function ) - check scripts (0, 7, 7) [644]
ajax: jQuery.fn.load( String, Function ) - check file with only a script tag (0, 3, 3) [645]
ajax: jQuery.fn.load( String, Function ) - dataFilter in ajaxSettings (0, 2, 2) [646]
ajax: jQuery.fn.load( String, Object, Function ) (0, 2, 2) [647]
ajax: jQuery.fn.load( String, String, Function ) (0, 2, 2) [648]
ajax: jQuery.fn.load() - callbacks get the correct parameters (0, 8, 8) [649]
ajax: #2046 - jQuery.fn.load( String, Function ) with ajaxSetup on dataType json (0, 1, 1) [650]
ajax: #10524 - jQuery.fn.load() - data specified in ajaxSettings is merged in (0, 1, 1) [651]
ajax: jQuery.post() - data (0, 3, 3) [652]
ajax: jQuery.post( String, Hash, Function ) - simple with xml (0, 4, 4) [653]
ajax: jQuery.active (0, 1, 1) [654]
effects: sanity check (0, 1, 1) [655]
effects: show() basic (0, 2, 2) [656]
effects: show() (0, 27, 27) [657]
effects: show(Number) - other displays (0, 15, 15) [658]
effects: Persist correct display value (0, 3, 3) [659]
effects: animate(Hash, Object, Function) (0, 1, 1) [660]
effects: animate relative values (0, 12, 12) [661]
effects: animate negative height (0, 1, 1) [662]
effects: animate negative margin (0, 1, 1) [663]
effects: animate negative margin with px (0, 1, 1) [664]
effects: animate negative padding (0, 1, 1) [665]
effects: animate block as inline width/height (0, 3, 3) [666]
effects: animate native inline width/height (0, 3, 3) [667]
effects: animate block width/height (0, 3, 3) [668]
effects: animate table width/height (0, 1, 1) [669]
effects: animate table-row width/height (0, 3, 3) [670]
effects: animate table-cell width/height (0, 3, 3) [671]
effects: animate percentage(%) on width/height (0, 2, 2) [672]
effects: animate resets overflow-x and overflow-y when finished (0, 2, 2) [673]
effects: animate option { queue: false } (0, 2, 2) [674]
effects: animate option { queue: true } (0, 2, 2) [675]
effects: animate option { queue: 'name' } (0, 5, 5) [676]
effects: animate with no properties (0, 2, 2) [677]
effects: animate duration 0 (0, 11, 11) [678]
effects: animate hyphenated properties (0, 1, 1) [679]
effects: animate non-element (0, 1, 1) [680]
effects: stop() (0, 4, 4) [681]
effects: stop() - several in queue (0, 5, 5) [682]
effects: stop(clearQueue) (0, 4, 4) [683]
effects: stop(clearQueue, gotoEnd) (0, 1, 1) [684]
effects: stop( queue, ..., ... ) - Stop single queues (0, 3, 3) [685]
effects: toggle() (0, 6, 6) [686]
effects: jQuery.fx.prototype.cur() - <1.8 Back Compat (0, 7, 7) [687]
effects: Overflow and Display (0, 4, 4) [688]
effects: CSS Auto to 0 (0, 6, 6) [689]
effects: CSS Auto to 50 (0, 6, 6) [690]
effects: CSS Auto to 100 (0, 6, 6) [691]
effects: CSS Auto to show (0, 5, 5) [692]
effects: CSS Auto to hide (0, 4, 4) [693]
effects: JS Auto to 0 (0, 6, 6) [694]
effects: JS Auto to 50 (0, 6, 6) [695]
effects: JS Auto to 100 (0, 6, 6) [696]
effects: JS Auto to show (0, 5, 5) [697]
effects: JS Auto to hide (0, 4, 4) [698]
effects: CSS 100 to 0 (0, 6, 6) [699]
effects: CSS 100 to 50 (0, 6, 6) [700]
effects: CSS 100 to 100 (0, 6, 6) [701]
effects: CSS 100 to show (0, 5, 5) [702]
effects: CSS 100 to hide (0, 4, 4) [703]
effects: JS 100 to 0 (0, 6, 6) [704]
effects: JS 100 to 50 (0, 6, 6) [705]
effects: JS 100 to 100 (0, 6, 6) [706]
effects: JS 100 to show (0, 5, 5) [707]
effects: JS 100 to hide (0, 4, 4) [708]
effects: CSS 50 to 0 (0, 6, 6) [709]
effects: CSS 50 to 50 (0, 6, 6) [710]
effects: CSS 50 to 100 (0, 6, 6) [711]
effects: CSS 50 to show (0, 5, 5) [712]
effects: CSS 50 to hide (0, 4, 4) [713]
effects: JS 50 to 0 (0, 6, 6) [714]
effects: JS 50 to 50 (0, 6, 6) [715]
effects: JS 50 to 100 (0, 6, 6) [716]
effects: JS 50 to show (0, 5, 5) [717]
effects: JS 50 to hide (0, 4, 4) [718]
effects: CSS 0 to 0 (0, 6, 6) [719]
effects: CSS 0 to 50 (0, 6, 6) [720]
effects: CSS 0 to 100 (0, 6, 6) [721]
effects: CSS 0 to show (0, 5, 5) [722]
effects: CSS 0 to hide (0, 4, 4) [723]
effects: JS 0 to 0 (0, 6, 6) [724]
effects: JS 0 to 50 (0, 6, 6) [725]
effects: JS 0 to 100 (0, 6, 6) [726]
effects: JS 0 to show (0, 5, 5) [727]
effects: JS 0 to hide (0, 4, 4) [728]
effects: Effects chaining (0, 16, 16) [729]
effects: jQuery.show('fast') doesn't clear radio buttons (bug #1095) (0, 4, 4) [730]
effects: interrupt toggle (0, 24, 24) [731]
effects: animate with per-property easing (0, 5, 5) [732]
effects: animate with CSS shorthand properties (0, 11, 11) [733]
effects: hide hidden elements, with animation (bug #7141) (0, 3, 3) [734]
effects: animate unit-less properties (#4966) (0, 2, 2) [735]
effects: animate properties missing px w/ opacity as last (#9074) (0, 6, 6) [736]
effects: callbacks should fire in correct order (#9100) (0, 1, 1) [737]
effects: callbacks that throw exceptions will be removed (#5684) (0, 2, 2) [738]
effects: animate will scale margin properties individually (0, 2, 2) [739]
effects: Do not append px to 'fill-opacity' #9548 (0, 1, 1) [740]
effects: line-height animates correctly (#13855) (0, 12, 12) [741]
effects: jQuery.Animation( object, props, opts ) (0, 4, 4) [742]
effects: Animate Option: step: function( percent, tween ) (0, 1, 1) [743]
effects: Animate callbacks have correct context (0, 2, 2) [744]
effects: User supplied callback called after show when fx off (#8892) (0, 2, 2) [745]
effects: animate should set display for disconnected nodes (0, 18, 18) [746]
effects: Animation callback should not show animated element as :animated (#7157) (0, 1, 1) [747]
effects: Initial step callback should show element as :animated (#14623) (0, 1, 1) [748]
effects: hide called on element within hidden parent should set display to none (#10045) (0, 3, 3) [749]
effects: hide, fadeOut and slideUp called on element width height and width = 0 should set display to none (0, 5, 5) [750]
effects: hide should not leave hidden inline elements visible (#14848) (0, 2, 2) [751]
effects: Handle queue:false promises (0, 10, 10) [752]
effects: multiple unqueued and promise (0, 4, 4) [753]
effects: animate does not change start value for non-px animation (#7109) (0, 1, 1) [754]
effects: non-px animation handles non-numeric start (#11971) (0, 2, 2) [755]
effects: Animation callbacks (#11797) (0, 15, 15) [756]
effects: Animate properly sets overflow hidden when animating width/height (#12117) (0, 8, 8) [757]
effects: Each tick of the timer loop uses a fresh time (#12837) (0, 3, 3) [758]
effects: Animations with 0 duration don't ease (#12273) (0, 1, 1) [759]
effects: toggle state tests: toggle (#8685) (0, 4, 4) [760]
effects: toggle state tests: slideToggle (#8685) (0, 4, 4) [761]
effects: toggle state tests: fadeToggle (#8685) (0, 4, 4) [762]
effects: jQuery.fx.start & jQuery.fx.stop hook points (0, 3, 3) [763]
effects: .finish() completes all queued animations (0, 11, 11) [764]
effects: .finish( false ) - unqueued animations (0, 10, 10) [765]
effects: .finish( "custom" ) - custom queue animations (0, 11, 11) [766]
effects: .finish() calls finish of custom queue functions (0, 6, 6) [767]
effects: .finish() is applied correctly when multiple elements were animated (#13937) (0, 3, 3) [768]
effects: slideDown() after stop() (#13483) (0, 2, 2) [769]
effects: Respect display value on inline elements (#14824) (0, 2, 2) [770]
offset: empty set (0, 2, 2) [771]
offset: object without getBoundingClientRect (0, 2, 2) [772]
offset: disconnected node (0, 2, 2) [773]
offset: absolute (0, 4, 4) [774]
offset: absolute (0, 178, 178) [775]
offset: relative (0, 60, 60) [776]
offset: static (0, 80, 80) [777]
offset: fixed (0, 34, 34) [778]
offset: table (0, 4, 4) [779]
offset: scroll (0, 24, 24) [780]
offset: body (0, 4, 4) [781]
offset: chaining (0, 3, 3) [782]
offset: offsetParent (0, 13, 13) [783]
offset: fractions (see #7730 and #7885) (0, 2, 2) [784]
dimensions: width() (0, 9, 9) [785]
dimensions: width(Function) (0, 9, 9) [786]
dimensions: width(Function(args)) (0, 2, 2) [787]
dimensions: height() (0, 9, 9) [788]
dimensions: height(Function) (0, 9, 9) [789]
dimensions: height(Function(args)) (0, 2, 2) [790]
dimensions: innerWidth() (0, 6, 6) [791]
dimensions: innerHeight() (0, 6, 6) [792]
dimensions: outerWidth() (0, 11, 11) [793]
dimensions: child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #9441 #9300 (0, 16, 16) [794]
dimensions: getting dimensions shouldn't modify runtimeStyle see #9233 (0, 1, 1) [795]
dimensions: table dimensions (0, 2, 2) [796]
dimensions: box-sizing:border-box child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #10413 (0, 16, 16) [797]
dimensions: outerHeight() (0, 11, 11) [798]
dimensions: passing undefined is a setter #5571 (0, 4, 4) [799]
dimensions: getters on non elements should return null (0, 8, 8) [800]
dimensions: setters with and without box-sizing:border-box (0, 20, 20) [801]
dimensions: window vs. small document (0, 1, 1) [802]
dimensions: window vs. large document (0, 2, 2) [803]
