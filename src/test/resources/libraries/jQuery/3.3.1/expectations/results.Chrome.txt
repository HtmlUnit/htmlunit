1. ready: jQuery.isReady (2) [fc73fe42]
2. ready: jQuery ready (10) [b6c34eda]
3. ready: jQuery.when(jQuery.ready) (2) [2abf4f9f]
4. ready: Promise.resolve(jQuery.ready) (2) [cdc6ad2e]
5. ready: Error in ready callback does not halt all future executions (gh-1823) (1) [4d1242b7]
6. ready: holdReady test needs to be a standalone test since it deals with DOM ready (2) [216c3c4d]
7. basic: ajax (4) [b948dcce]
8. basic: attributes (6) [0b3d9985]
9. basic: css (1) [9a9f4995]
10. basic: show/hide (2) [201dfb26]
11. basic: core (18) [b949da4d]
12. basic: data (4) [b94a1a58]
13. basic: dimensions (3) [0bc22ffb]
14. basic: event (1) [70109dac]
15. basic: manipulation (5) [4555384b]
16. basic: offset (3) [a2329bc1]
17. basic: selector (2) [5410178d]
18. basic: serialize (2) [720bb8f2]
19. basic: traversing (12) [1c17bddd]
20. basic: wrap (3) [b952faf8]
21. core: Basic requirements (7) [b8dae67f]
22. core: jQuery() (29) [0680cf5c]
23. core: jQuery(selector, context) (3) [196dd81a]
24. core: globalEval (3) [0440d2fc]
25. core: globalEval with 'use strict' (1) [8ca57754]
26. core: globalEval execution after script injection (#7862) (1) [d8523463]
27. core: noConflict (7) [59f980d0]
28. core: trim (13) [9dba41ff]
29. core: isPlainObject (23) [887480e2]
30. core: isPlainObject(Symbol) (2) [26db572b]
31. core: isPlainObject(localStorage) (1) [119383d3]
32. core: isPlainObject(Object.assign(...)) (1) [c93c077e]
33. core: isXMLDoc - HTML (4) [e01cfc16]
34. core: XSS via location.hash (1) [78959170]
35. core: isXMLDoc - XML (3) [59cf9e2c]
36. core: jQuery('html') (18) [a16831a7]
37. core: jQuery(element with non-alphanumeric name) (36) [cbf4e276]
38. core: jQuery('massive html #7990') (3) [9798de1f]
39. core: jQuery('html', context) (1) [21c16e10]
40. core: jQuery(selector, xml).text(str) - loaded via xml document (2) [fafab1b5]
41. core: end() (3) [18b8b0df]
42. core: length (1) [09d60583]
43. core: get() (1) [18d1049a]
44. core: toArray() (1) [1809f262]
45. core: inArray() (19) [51380078]
46. core: get(Number) (2) [56995191]
47. core: get(-Number) (2) [17b75382]
48. core: each(Function) (1) [0fa24667]
49. core: slice() (7) [aedfaf16]
50. core: first()/last() (4) [976fc3d2]
51. core: map() (2) [1923b120]
52. core: jQuery.map (25) [698e2e09]
53. core: jQuery.merge() (10) [8265e566]
54. core: jQuery.grep() (8) [8f4e4e8a]
55. core: jQuery.grep(Array-like) (7) [ac3d13ff]
56. core: jQuery.extend(Object, Object) (28) [bbeda45c]
57. core: jQuery.extend(Object, Object {created with "defineProperties"}) (2) [c487b9d8]
58. core: jQuery.extend(true,{},{a:[], o:{}}); deep copy with array, followed by object (2) [a33dcb83]
59. core: jQuery.each(Object,Function) (23) [5889c4d8]
60. core: jQuery.each/map(undefined/null,Function) (1) [8a0df372]
61. core: JIT compilation does not interfere with length retrieval (gh-2145) (4) [35566d78]
62. core: jQuery.makeArray (15) [696f93f8]
63. core: jQuery.inArray (3) [bb7b4e61]
64. core: jQuery.isEmptyObject (2) [f2b417cf]
65. core: jQuery.parseHTML (23) [b2541bcb]
66. core: jQuery.parseHTML(<a href>) - gh-2965 (1) [68983673]
67. core: jQuery.parseHTML (1) [982f5db5]
68. core: jQuery.parseXML (8) [2f0b33d7]
69. core: Conditional compilation compatibility (#13274) (3) [a911fa9b]
70. core: document ready when jQuery loaded asynchronously (#13655) (1) [377d9701]
71. core: Tolerating alias-masked DOM properties (#14074) (1) [676cffc3]
72. core: Don't call window.onready (#14802) (1) [3cfc6632]
73. core: Iterability of jQuery objects (gh-1693) (1) [d6e53216]
74. core: jQuery.readyException (original) (1) [0b62e4f1]
75. core: jQuery.readyException (custom) (1) [98c3e191]
76. callbacks: jQuery.Callbacks( '' ) - no filter (29) [7e717211]
77. callbacks: jQuery.Callbacks( { } ) - no filter (29) [379676d3]
78. callbacks: jQuery.Callbacks( '' ) - filter (29) [e676825e]
79. callbacks: jQuery.Callbacks( { } ) - filter (29) [e55384dc]
80. callbacks: jQuery.Callbacks( 'once' ) - no filter (29) [b69b7af0]
81. callbacks: jQuery.Callbacks( { 'once': true } ) - no filter (29) [2c977bc6]
82. callbacks: jQuery.Callbacks( 'once' ) - filter (29) [9a493ddf]
83. callbacks: jQuery.Callbacks( { 'once': true } ) - filter (29) [5ceadcc9]
84. callbacks: jQuery.Callbacks( 'memory' ) - no filter (29) [18655130]
85. callbacks: jQuery.Callbacks( { 'memory': true } ) - no filter (29) [aff804c6]
86. callbacks: jQuery.Callbacks( 'memory' ) - filter (29) [15790f9f]
87. callbacks: jQuery.Callbacks( { 'memory': true } ) - filter (29) [6b7ef3c9]
88. callbacks: jQuery.Callbacks( 'unique' ) - no filter (29) [46f00860]
89. callbacks: jQuery.Callbacks( { 'unique': true } ) - no filter (29) [6cb08bf6]
90. callbacks: jQuery.Callbacks( 'unique' ) - filter (29) [40cd266f]
91. callbacks: jQuery.Callbacks( { 'unique': true } ) - filter (29) [5bf73a99]
92. callbacks: jQuery.Callbacks( 'stopOnFalse' ) - no filter (29) [a8ca7f15]
93. callbacks: jQuery.Callbacks( { 'stopOnFalse': true } ) - no filter (29) [afdb5241]
94. callbacks: jQuery.Callbacks( 'stopOnFalse' ) - filter (29) [64ac33da]
95. callbacks: jQuery.Callbacks( { 'stopOnFalse': true } ) - filter (29) [d264102e]
96. callbacks: jQuery.Callbacks( 'once memory' ) - no filter (29) [15ef8bf7]
97. callbacks: jQuery.Callbacks( { 'once': true, 'memory': true } ) - no filter (29) [ff40c7ed]
98. callbacks: jQuery.Callbacks( 'once memory' ) - filter (29) [28232238]
99. callbacks: jQuery.Callbacks( { 'once': true, 'memory': true } ) - filter (29) [644e5a02]
100. callbacks: jQuery.Callbacks( 'once unique' ) - no filter (29) [447a4327]
101. callbacks: jQuery.Callbacks( { 'once': true, 'unique': true } ) - no filter (29) [bbf94f1d]
102. callbacks: jQuery.Callbacks( 'once unique' ) - filter (29) [53773908]
103. callbacks: jQuery.Callbacks( { 'once': true, 'unique': true } ) - filter (29) [54c6a0d2]
104. callbacks: jQuery.Callbacks( 'once stopOnFalse' ) - no filter (29) [de28e8ae]
105. callbacks: jQuery.Callbacks( { 'once': true, 'stopOnFalse': true } ) - no filter (29) [b1216f7a]
106. callbacks: jQuery.Callbacks( 'once stopOnFalse' ) - filter (29) [2892d8e1]
107. callbacks: jQuery.Callbacks( { 'once': true, 'stopOnFalse': true } ) - filter (29) [7288a595]
108. callbacks: jQuery.Callbacks( 'memory unique' ) - no filter (29) [325ee4e7]
109. callbacks: jQuery.Callbacks( { 'memory': true, 'unique': true } ) - no filter (29) [6727d81d]
110. callbacks: jQuery.Callbacks( 'memory unique' ) - filter (29) [73ebef48]
111. callbacks: jQuery.Callbacks( { 'memory': true, 'unique': true } ) - filter (29) [fe4cb7d2]
112. callbacks: jQuery.Callbacks( 'memory stopOnFalse' ) - no filter (29) [02a35eee]
113. callbacks: jQuery.Callbacks( { 'memory': true, 'stopOnFalse': true } ) - no filter (29) [9aa0867a]
114. callbacks: jQuery.Callbacks( 'memory stopOnFalse' ) - filter (29) [2fd60aa1]
115. callbacks: jQuery.Callbacks( { 'memory': true, 'stopOnFalse': true } ) - filter (29) [0c38ee95]
116. callbacks: jQuery.Callbacks( 'unique stopOnFalse' ) - no filter (29) [1464ce1e]
117. callbacks: jQuery.Callbacks( { 'unique': true, 'stopOnFalse': true } ) - no filter (29) [3f655d4a]
118. callbacks: jQuery.Callbacks( 'unique stopOnFalse' ) - filter (29) [0a2e6971]
119. callbacks: jQuery.Callbacks( { 'unique': true, 'stopOnFalse': true } ) - filter (29) [747009c5]
120. callbacks: jQuery.Callbacks( options ) - options are copied (1) [923a6442]
121. callbacks: jQuery.Callbacks.fireWith - arguments are copied (1) [78b2320f]
122. callbacks: jQuery.Callbacks.remove - should remove all instances (1) [cb02f2c3]
123. callbacks: jQuery.Callbacks.has (13) [6fd17bf8]
124. callbacks: jQuery.Callbacks() - adding a string doesn't cause a stack overflow (1) [5258dfa5]
125. callbacks: jQuery.Callbacks() - disabled callback doesn't fire (gh-1790) (1) [2e3f4299]
126. callbacks: jQuery.Callbacks() - list with memory stays locked (gh-3469) (3) [e8f0d272]
127. deferred: jQuery.Deferred (23) [09ee1fb2]
128. deferred: jQuery.Deferred - new operator (23) [62d20265]
129. deferred: jQuery.Deferred - chainability (10) [8f1ac28a]
130. deferred: jQuery.Deferred.then - filtering (done) (4) [d0d4d16f]
131. deferred: jQuery.Deferred.then - filtering (fail) (4) [d0ea9153]
132. deferred: jQuery.Deferred.catch (4) [5ccfed7f]
133. deferred: [PIPE ONLY] jQuery.Deferred.pipe - filtering (fail) (4) [d952535c]
134. deferred: jQuery.Deferred.then - filtering (progress) (3) [357d8424]
135. deferred: jQuery.Deferred.then - deferred (done) (3) [877e85a6]
136. deferred: jQuery.Deferred.then - deferred (fail) (3) [8794458a]
137. deferred: jQuery.Deferred.then - deferred (progress) (3) [5b3444db]
138. deferred: [PIPE ONLY] jQuery.Deferred.pipe - deferred (progress) (3) [7da15a32]
139. deferred: jQuery.Deferred.then - context (11) [d230e435]
140. deferred: [PIPE ONLY] jQuery.Deferred.pipe - context (11) [244a040c]
141. deferred: jQuery.Deferred.then - spec compatibility (1) [c0116f85]
142. deferred: jQuery.Deferred.then - IsCallable determination (gh-3596) (1) [85d85b05]
143. deferred: jQuery.Deferred.exceptionHook (2) [c41974d6]
144. deferred: jQuery.Deferred.exceptionHook with stack hooks (2) [8330b5c8]
145. deferred: jQuery.Deferred - 1.x/2.x compatibility (8) [613da4d7]
146. deferred: jQuery.Deferred.then - progress and thenables (2) [aebd675a]
147. deferred: jQuery.Deferred - notify and resolve (7) [8db308cd]
148. deferred: jQuery.Deferred - resolved to a notifying deferred (2) [e3695363]
149. deferred: jQuery.when(nonThenable) - like Promise.resolve (44) [91fdbd03]
150. deferred: jQuery.when(thenable) - like Promise.resolve (68) [0bbc26ac]
151. deferred: jQuery.when(a, b) - like Promise.all (196) [94478157]
152. deferred: jQuery.when - always returns a new promise (42) [fe345314]
153. deferred: jQuery.when - notify does not affect resolved (3) [142cc340]
154. deferred: jQuery.when(...) - opportunistically synchronous (5) [d779dead]
155. deprecated: bind/unbind (4) [7e81b3ff]
156. deprecated: delegate/undelegate (2) [5f1b027f]
157. deprecated: hover() mouseenter mouseleave (1) [fd2a1553]
158. deprecated: trigger() shortcuts (5) [e295cadd]
159. deprecated: Event aliases (18) [6cee512f]
160. deprecated: jQuery.parseJSON (20) [6097b574]
161. deprecated: jQuery.isArray (1) [fe0068e8]
162. deprecated: jQuery.nodeName (8) [30cbb534]
163. deprecated: type (28) [fe775383]
164. deprecated: type for `Symbol` (2) [a918d83c]
165. deprecated: isFunction (20) [cc4bc4ab]
166. deprecated: isFunction(cross-realm function) (1) [46f5c2b6]
167. deprecated: isFunction(GeneratorFunction) (1) [353ef97b]
168. deprecated: isFunction(AsyncFunction) (1) [1bcb8672]
169. deprecated: isFunction(custom @@toStringTag) (2) [ee44842d]
170. deprecated: jQuery.isWindow (14) [e716b741]
171. deprecated: jQuery.camelCase() (7) [dd6c29a0]
172. deprecated: jQuery.now (1) [db5ba8ef]
173. deprecated: jQuery.proxy (9) [7332a647]
174. deprecated: isNumeric (43) [4260e3da]
175. deprecated: isNumeric(Symbol) (2) [09914223]
176. support: body background is not lost if set prior to loading jQuery (#9239) (2) [3bc9b579]
177. support: Check CSP (https://developer.mozilla.org/en-US/docs/Security/CSP) restrictions (1, 1, 2) [93b1cb37]
178. support: Verify that support tests resolve as expected per browser (15) [e1b3f3c8]
179. data: expando (1) [59d58323]
180. data: jQuery.data & removeData, expected returns (4) [d974fccf]
181. data: jQuery._data & _removeData, expected returns (4) [c8c6a12d]
182. data: jQuery.hasData no side effects (1) [471c0b3e]
183. data: jQuery.data(div) (25) [f1b20eb8]
184. data: jQuery.data({}) (25) [419abc07]
185. data: jQuery.data(window) (25) [4c810139]
186. data: jQuery.data(document) (25) [7572f16e]
187. data: jQuery.data(<embed>) (25) [7d4b0988]
188. data: jQuery.data(object/flash) (25) [92bd1609]
189. data: jQuery().data() === undefined (#14101) (2) [bc9e4320]
190. data: .data() (5) [d972e5e7]
191. data: jQuery(Element).data(String, Object).data(String) (18) [45a0b398]
192. data: jQuery(plain Object).data(String, Object).data(String) (16) [eaf0a56f]
193. data: .data(object) does not retain references. #13815 (2) [72d78710]
194. data: data-* attributes (46) [e11170de]
195. data: .data(Object) (4) [b21f7be8]
196. data: jQuery.removeData (10) [842bb84c]
197. data: .removeData() (6) [dde09a8b]
198. data: JSON serialization (#8108) (1) [c57d2337]
199. data: .data should follow html5 specification regarding camel casing (12) [c4a6bca3]
200. data: .data should not miss preset data-* w/ hyphenated property names (2) [ff4fd96d]
201. data: jQuery.data should not miss data-* w/ hyphenated property names #14047 (1) [717197e5]
202. data: .data should not miss attr() set data-* with hyphenated property names (2) [6c4bf070]
203. data: .data always sets data with the camelCased key (gh-2257) (18) [dcf053cb]
204. data: .data should not strip more than one hyphen when camelCasing (gh-2070) (3) [ac8fcc43]
205. data: .data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values (24) [5b1a3e22]
206. data: .data supports interoperable removal of hyphenated/camelCase properties (27) [887816e1]
207. data: .data supports interoperable removal of properties SET TWICE #13850 (9) [142dcb9a]
208. data: .removeData supports removal of hyphenated properties via array (#12786, gh-2257) (4) [87e4396f]
209. data: .removeData should not throw exceptions. (#10080) (1) [658fbcef]
210. data: .data only checks element attributes once. #8909 (2) [34c8ba90]
211. data: data-* with JSON value can have newlines (1) [10b63653]
212. data: .data doesn't throw when calling selection is empty. #13551 (1) [26b4ed79]
213. data: acceptData (10) [ac476404]
214. data: Check proper data removal of non-element descendants nodes (#8335) (1) [a94b9c6f]
215. data: enumerate data attrs on body (#14894) (1) [b8c46997]
216. data: Check that the expando is removed when there's no more data (2) [8a4bac1f]
217. data: Check that the expando is removed when there's no more data on non-nodes (1) [9cc57911]
218. data: .data(prop) does not create expando (1) [ae22eba9]
219. queue: queue() with other types (14) [cfea7bc8]
220. queue: queue(name) passes in the next item in the queue as a parameter (2) [a0b7b5e8]
221. queue: queue() passes in the next item in the queue as a parameter to fx queues (3) [b635b198]
222. queue: callbacks keep their place in the queue (5) [b44ac744]
223. queue: jQuery.queue should return array while manipulating the queue (1) [62814786]
224. queue: delay() (2) [67daca39]
225. queue: clearQueue(name) clears the queue (2) [cbec94c3]
226. queue: clearQueue() clears the fx queue (1) [43a0847c]
227. queue: fn.promise() - called when fx queue is empty (3) [3d95283f]
228. queue: fn.promise( "queue" ) - called whenever last queue function is dequeued (5) [bd53cbc7]
229. queue: fn.promise( "queue" ) - waits for animation to complete before resolving (2) [8c35be6e]
230. queue: .promise(obj) (2) [5302fde2]
231. queue: delay() can be stopped (3) [6927c207]
232. queue: queue stop hooks (2) [a3692fac]
233. attributes: jQuery.propFix integrity test (1) [6ba2179e]
234. attributes: attr(String) (50) [e3b0c806]
235. attributes: attr(String) on cloned elements, #9646 (4) [d30b9b85]
236. attributes: attr(String) in XML Files (3) [cbf8a58d]
237. attributes: attr(String, Function) (2) [e7a05bda]
238. attributes: attr(Hash) (3) [ce0ca229]
239. attributes: attr(String, Object) (71) [dd42a793]
240. attributes: attr(non-ASCII) (2) [2454216a]
241. attributes: attr - extending the boolean attrHandle (1) [951743f5]
242. attributes: attr(String, Object) - Loaded via XML document (2) [39a11351]
243. attributes: attr(String, Object) - Loaded via XML fragment (2) [a3e72486]
244. attributes: attr('tabindex') (8) [4e40e254]
245. attributes: attr('tabindex', value) (9) [ac9022c1]
246. attributes: removeAttr(String) (12) [88bb7eea]
247. attributes: removeAttr(String) in XML (7) [5ce00072]
248. attributes: removeAttr(Multi String, variable space width) (8) [0c02eb67]
249. attributes: removeAttr(Multi String, non-HTML whitespace is valid in attribute names (gh-3003) (8) [e2788740]
250. attributes: prop(String, Object) (17) [5c3c4d05]
251. attributes: prop(String, Object) on null/undefined (14) [f72c08ce]
252. attributes: prop('tabindex') (11) [8bbb10c6]
253. attributes: image.prop( 'tabIndex' ) (1) [8ce93dbf]
254. attributes: prop('tabindex', value) (10) [ea2c300f]
255. attributes: option.prop('selected', true) affects select.selectedIndex (gh-2732) (2) [65dc3157]
256. attributes: removeProp(String) (6) [e462b65c]
257. attributes: val() after modification (1) [6376b503]
258. attributes: val() (26) [b03d455d]
259. attributes: val() with non-matching values on dropdown list (3) [e1a731fe]
260. attributes: val() respects numbers without exception (Bug #9319) (4) [114aac89]
261. attributes: val(String/Number) (9) [6de1bd4e]
262. attributes: val(Function) (9) [221ff865]
263. attributes: val(Array of Numbers) (Bug #7123) (4) [c6dd91b4]
264. attributes: val(Function) with incoming value (10) [41db3b56]
265. attributes: val(select) after form.reset() (Bug #2551) (3) [4e5c2644]
266. attributes: select.val(space characters) (gh-2978) (37) [d60711ee]
267. attributes: addClass(String) (9) [fe5d0aec]
268. attributes: addClass(Function) (9) [de2e1305]
269. attributes: addClass(Array) (9) [2b7189bc]
270. attributes: addClass(Function) with incoming value (52) [d371c5f6]
271. attributes: removeClass(String) - simple (8) [926c1586]
272. attributes: removeClass(Function) - simple (8) [b788da4d]
273. attributes: removeClass(Array) - simple (8) [67dddf7c]
274. attributes: removeClass(Function) with incoming value (52) [6f69a149]
275. attributes: removeClass() removes duplicates (1) [2f658969]
276. attributes: removeClass(undefined) is a no-op (1) [9a4915c6]
277. attributes: toggleClass(String|boolean|undefined[, boolean]) (19) [2b9e011f]
278. attributes: toggleClass(Function[, boolean]) (19) [0c5ee926]
279. attributes: toggleClass(Array[, boolean]) (19) [fafa92f5]
280. attributes: toggleClass(Function[, boolean]) with incoming value (14) [86934197]
281. attributes: addClass, removeClass, hasClass (17) [a56f0856]
282. attributes: addClass, removeClass, hasClass on many elements (19) [cb2313a1]
283. attributes: addClass, removeClass, hasClass on many elements - Array (16) [ce6c7f07]
284. attributes: addClass, removeClass, hasClass on elements with classes with non-HTML whitespace (gh-3072, gh-3003) (9) [71f47773]
285. attributes: contents().hasClass() returns correct values (2) [c32ecd68]
286. attributes: hasClass correctly interprets non-space separators (#13835) (4) [3dc381d0]
287. attributes: coords returns correct values in IE6/IE7, see #10828 (1) [7e4920d6]
288. attributes: should not throw at $(option).val() (#14686) (1) [822ce1ad]
289. attributes: option value not trimmed when setting via parent select (1) [2bbe56e2]
290. attributes: Insignificant white space returned for $(option).val() (#14858, gh-2978) (16) [8f794d6a]
291. attributes: SVG class manipulation (gh-2199) (12) [15a10f8c]
292. attributes: non-lowercase boolean attribute getters should not crash (3) [2ffb29b5]
293. event: null or undefined handler (4) [4f7c55f4]
294. event: on() with non-null,defined data (2) [a75c7c8a]
295. event: Handler changes and .trigger() order (1) [92be6c97]
296. event: on(), with data (4) [67870fae]
297. event: click(), with data (3) [1bb483e9]
298. event: on(), with data, trigger with data (4) [e110c4fa]
299. event: on(), multiple events at once (2) [73ce31c1]
300. event: on(), five events at once (1) [83218ddf]
301. event: on(), multiple events at once and namespaces (7) [a567b4a0]
302. event: on(), namespace with special add (27) [5357ecdb]
303. event: on(), no data (1) [f9acca13]
304. event: on/one/off(Object) (6) [97deefda]
305. event: on/off(Object), on/off(Object, String) (6) [25945833]
306. event: on immediate propagation (2) [03abeb1e]
307. event: on bubbling, isDefaultPrevented, stopImmediatePropagation (3) [cc6b914d]
308. event: triggered events stopPropagation() for natively-bound events (1) [8b26f3dc]
309. event: trigger() works with events that were previously stopped (0) [75619d2b]
310. event: on(), iframes (1) [e65459b9]
311. event: on(), trigger change on select (5) [1452ed2b]
312. event: on(), namespaced events, cloned events (18) [83c2eae4]
313. event: on(), multi-namespaced events (6) [dd022686]
314. event: namespace-only event binding is a no-op (2) [dddfcdb9]
315. event: Empty namespace is ignored (1) [dd96e316]
316. event: on(), with same function (2) [0b544ace]
317. event: on(), make sure order is maintained (1) [0f22ec1f]
318. event: on(), with different this object (4) [13398616]
319. event: on(name, false), off(name, false) (3) [d4d7a3fe]
320. event: on(name, selector, false), off(name, selector, false) (3) [b1e4caa4]
321. event: on()/trigger()/off() on plain object (7) [2be9b583]
322. event: off(type) (1) [3378a8b4]
323. event: off(eventObject) (4) [39bba8ab]
324. event: mouseover triggers mouseenter (1) [1ad46faf]
325. event: pointerover triggers pointerenter (1) [fc52722f]
326. event: withinElement implemented with jQuery.contains() (1) [976ee805]
327. event: mouseenter, mouseleave don't catch exceptions (2) [7700a8fe]
328. event: trigger() bubbling (18) [2b1e2612]
329. event: trigger(type, [data], [fn]) (16) [5bfbb1c3]
330. event: submit event bubbles on copied forms (#11649) (3) [8e85e03a]
331. event: change event bubbles on copied forms (#11796) (3) [ec9b3869]
332. event: trigger(eventObject, [data], [fn]) (28) [f8fcfbc8]
333. event: .trigger() bubbling on disconnected elements (#10489) (2) [57fcf00f]
334. event: .trigger() doesn't bubble load event (#10717) (1) [5b3fa683]
335. event: Delegated events in SVG (#10791; #13180) (2) [c841373e]
336. event: Delegated events with malformed selectors (gh-3071) (3) [c5a573c7]
337. event: Delegated events in forms (#10844; #11145; #8165; #11382, #11764) (5) [7304f0a8]
338. event: Submit event can be stopped (#11049) (1) [85069023]
339. event: on(beforeunload) (1) [c4ca9de4]
340. event: jQuery.Event( type, props ) (6) [9ee7af47]
341. event: jQuery.Event properties (12) [4862ed07]
342. event: .on()/.off() (65) [86f809e5]
343. event: jQuery.off using dispatched jQuery.Event (1) [a6cd39f6]
344. event: delegated event with delegateTarget-relative selector (3) [72cc648d]
345. event: delegated event with selector matching Object.prototype property (#13203) (1) [02402d82]
346. event: delegated event with intermediate DOM manipulation (#13208) (1) [99091f7b]
347. event: ignore comment nodes in event delegation (gh-2055) (1) [d59d93f4]
348. event: stopPropagation() stops directly-bound events on delegated target (1) [97a76f1f]
349. event: off all bound delegated events (2) [fbfed32e]
350. event: on with multiple delegated events (1) [e8bc1bef]
351. event: delegated on with change (8) [825bc50c]
352. event: delegated on with submit (2) [9e60f174]
353. event: delegated off() with only namespaces (2) [478bcc85]
354. event: Non DOM element events (1) [c54cd510]
355. event: inline handler returning false stops default (1) [f2abf84c]
356. event: window resize (2) [50fdc562]
357. event: focusin bubbles (2) [e1fefb42]
358. event: custom events with colons (#3533, #8272) (1) [8e42386e]
359. event: .on and .off (9) [fa721d1f]
360. event: special on name mapping (7) [3334c871]
361. event: .on and .off, selective mixed removal (#10705) (7) [7bd80ad7]
362. event: .on( event-map, null-selector, data ) #11130 (1) [1f7323b9]
363. event: clone() delegated events (#11076) (3) [3233ef57]
364. event: checkbox state (#3827) (9) [40ec06fa]
365. event: event object properties on natively-triggered event (3) [5448f455]
366. event: addProp extensions (2) [4d23f252]
367. event: drag/drop events copy mouse-related event properties (gh-1925, gh-2009) (4) [6578e967]
368. event: focusin using non-element targets (2) [5b20ac5d]
369. event: focusin from an iframe (1) [109716c6]
370. event: jQuery.ready promise (1) [8839a7f0]
371. event: jQuery.ready uses interactive (1) [14360559]
372. event: Focusing iframe element (1) [cdac1534]
373. event: triggerHandler(onbeforeunload) (1) [de3c3bb8]
374. event: jQuery.ready synchronous load with long loading subresources (1) [cffde38b]
375. event: change handler should be detached from element (2) [8f6e8420]
376. event: trigger click on checkbox, fires change event (1) [473c1b43]
377. event: Namespace preserved when passed an Event (#12739) (4) [e9f2ca08]
378. event: make sure events cloned correctly (18) [ba0e96ca]
379. event: String.prototype.namespace does not cause trigger() to throw (#13360) (1) [fee4a372]
380. event: Inline event result is returned (#13993) (1) [5b66d7c6]
381. event: .off() removes the expando when there's no more data (2) [b0e64fe5]
382. event: jQuery.Event( src ) does not require a target property (2) [2ecd082d]
383. event: preventDefault() on focusin does not throw exception (1) [f524efb1]
384. event: Donor event interference (8) [53dca324]
385. event: simulated events shouldn't forward stopPropagation/preventDefault methods (3) [3683edb8]
386. event: originalEvent type of simulated event (2) [bd17e43e]
387. event: trigger('click') on radio passes extra params (1) [71dda69c]
388. event: VML with special event handlers (trac-7071) (1) [079e1194]
389. event: Check order of focusin/focusout events (2) [33414734]
390. event: focus-blur order (#12868) (5) [36f5c33f]
391. selector: element (7) [8883ac3f]
392. selector: id (26) [0db701f8]
393. selector: class (4) [037eab7b]
394. selector: name (5) [7c00ac28]
395. selector: selectors with comma (4) [83b7e1c4]
396. selector: child and adjacent (27) [484374cc]
397. selector: attributes (54) [48c47134]
398. selector: disconnected nodes (1) [610f9769]
399. selector: disconnected nodes (3) [c0e355d7]
400. selector: attributes - jQuery.attr (38) [ebf56202]
401. selector: jQuery.contains (16) [c8b315d2]
402. selector: jQuery.uniqueSort (15) [7cee2402]
403. selector: Sizzle cache collides with multiple Sizzles on a page (4) [406ea9a4]
404. selector: Iframe dispatch should not affect jQuery (#13936) (1) [958e0234]
405. selector: Ensure escapeSelector exists (escape tests in Sizzle) (1) [e5da7c7e]
406. traversing: find(String) (1) [44dc4676]
407. traversing: find(String) under non-elements (2) [8a165e29]
408. traversing: find(leading combinator) (4) [6c067eb1]
409. traversing: find(node|jQuery object) (13) [165911c0]
410. traversing: is(String|undefined) (23) [53d824d3]
411. traversing: is() against non-elements (#10178) (14) [32648f33]
412. traversing: is(jQuery) (19) [09b3677a]
413. traversing: is() with :has() selectors (6) [6b8baba7]
414. traversing: is() with positional selectors (27) [435ba0da]
415. traversing: index() (2) [2a27d866]
416. traversing: index(Object|String|undefined) (16) [c3ba094a]
417. traversing: filter(Selector|undefined) (9) [47ce3153]
418. traversing: filter(Function) (2) [33bf57ce]
419. traversing: filter(Element) (1) [5405ec90]
420. traversing: filter(Array) (1) [5296a193]
421. traversing: filter(jQuery) (1) [40f92948]
422. traversing: filter() with positional selectors (19) [9a4c6fa8]
423. traversing: closest() (14) [53163f6d]
424. traversing: closest() with positional selectors (3) [818a3e8f]
425. traversing: closest(jQuery) (8) [588031af]
426. traversing: not(Selector) (7) [acb590c8]
427. traversing: not(undefined) (4) [579ef7db]
428. traversing: not(Element) (1) [ce912c4f]
429. traversing: not(Function) (1) [0a9c0fef]
430. traversing: not(Array) (2) [961cc512]
431. traversing: not(jQuery) (1) [6e3775a9]
432. traversing: not(Selector) excludes non-element nodes (gh-2808) (3) [1789ab15]
433. traversing: not(arraylike) passes non-element nodes (gh-3226) (5) [01c00773]
434. traversing: has(Element) (3) [879c1468]
435. traversing: has(Selector) (5) [1507abcf]
436. traversing: has(Arrayish) (4) [266a38e9]
437. traversing: addBack() (5) [51c2327c]
438. traversing: siblings([String]) (6) [9243394e]
439. traversing: siblings([String]) (2) [b623f092]
440. traversing: children([String]) (2) [7c54abdc]
441. traversing: children([String]) (1) [0e40cfc4]
442. traversing: parent([String]) (6) [a93e9c07]
443. traversing: parents([String]) (6) [29f562ac]
444. traversing: parentsUntil([String]) (10) [c1716bb2]
445. traversing: next([String]) (6) [2604c650]
446. traversing: prev([String]) (5) [9e01cd90]
447. traversing: nextAll([String]) (5) [29363911]
448. traversing: prevAll([String]) (5) [5764e9d1]
449. traversing: nextUntil([String]) (12) [fe62ae8e]
450. traversing: prevUntil([String]) (11) [5ba82f4e]
451. traversing: contents() (12) [993eada8]
452. traversing: contents() for <template /> (4) [67cb9308]
453. traversing: contents() for <template /> remains inert (2) [189ba531]
454. traversing: sort direction (12) [b377110a]
455. traversing: add(String selector) (2) [17cf5c6f]
456. traversing: add(String selector, String context) (1) [46df2fbb]
457. traversing: add(String html) (3) [f23daca3]
458. traversing: add(jQuery) (4) [1b2b9577]
459. traversing: add(Element) (2) [c0210641]
460. traversing: add(Array elements) (1) [a613a4f7]
461. traversing: add(Window) (1) [56a65a25]
462. traversing: add(NodeList|undefined|HTMLFormElement|HTMLSelectElement) (4) [b1b47397]
463. traversing: add(String, Context) (6) [5c1fe653]
464. traversing: eq('-1') #10616 (3) [abea487b]
465. traversing: index(no arg) #10977 (2) [88c07b48]
466. traversing: traversing non-elements with attribute filters (#12523) (5) [fd8d0eed]
467. manipulation: text() (5) [79abb7cd]
468. manipulation: text(undefined) (1) [b76b69b5]
469. manipulation: text(String) (6) [b853a6bc]
470. manipulation: text(Function) (6) [f4ecfad5]
471. manipulation: text(Function) with incoming value (2) [60fea5c6]
472. manipulation: append(String|Element|Array<Element>|jQuery) (78) [d1fdf7d0]
473. manipulation: append(Function) (78) [72a7c4c2]
474. manipulation: append(param) to object, see #11280 (5) [65c5f097]
475. manipulation: append(Function) returns String (4) [750e10cc]
476. manipulation: append(Function) returns Element (2) [39c085a1]
477. manipulation: append(Function) returns Array<Element> (2) [29c710a0]
478. manipulation: append(Function) returns jQuery (2) [9a619f19]
479. manipulation: append(Function) returns Number (2) [6c918c04]
480. manipulation: XML DOM manipulation (#9960) (5) [5daa93d7]
481. manipulation: append HTML5 sectioning elements (Bug #6485) (2) [2831131c]
482. manipulation: HTML5 Elements inherit styles from style rules (Bug #10501) (1) [6118970a]
483. manipulation: html(String) with HTML5 (Bug #6485) (2) [9dd21615]
484. manipulation: html(String) tag-hyphenated elements (Bug #1987) (27) [5a5a29ad]
485. manipulation: Tag name processing respects the HTML Standard (gh-2005) (240) [371f058f]
486. manipulation: IE8 serialization bug (2) [7eedaf01]
487. manipulation: html() object element #10324 (1) [4c0b7603]
488. manipulation: append(xml) (1) [15c79ec1]
489. manipulation: appendTo(String) (4) [78206d44]
490. manipulation: appendTo(Element|Array<Element>) (2) [498a1bd0]
491. manipulation: appendTo(jQuery) (10) [fd3ea897]
492. manipulation: prepend(String) (2) [fefaf07f]
493. manipulation: prepend(Element) (1) [74e63b46]
494. manipulation: prepend(Array<Element>) (1) [ced9292b]
495. manipulation: prepend(jQuery) (1) [84192bd2]
496. manipulation: prepend(Array<jQuery>) (1) [d2e2c485]
497. manipulation: prepend(Function) with incoming value -- String (4) [a2fa629a]
498. manipulation: prepend(Function) with incoming value -- Element (2) [c95e6d93]
499. manipulation: prepend(Function) with incoming value -- Array<Element> (2) [a1e3b46e]
500. manipulation: prepend(Function) with incoming value -- jQuery (2) [c84df0e7]
501. manipulation: prependTo(String) (2) [3461885a]
502. manipulation: prependTo(Element) (1) [ec529ecb]
503. manipulation: prependTo(Array<Element>) (1) [7243b606]
504. manipulation: prependTo(jQuery) (1) [b97fc3ad]
505. manipulation: prependTo(Array<jQuery>) (1) [8dd5b04a]
506. manipulation: before(String) (1) [7bc7434e]
507. manipulation: before(Element) (1) [91a44257]
508. manipulation: before(Array<Element>) (1) [8e893cfa]
509. manipulation: before(jQuery) (1) [00e57ea1]
510. manipulation: before(Array<jQuery>) (1) [b8097ad6]
511. manipulation: before(Function) -- Returns String (1) [7c1eb755]
512. manipulation: before(Function) -- Returns Element (1) [14c4b038]
513. manipulation: before(Function) -- Returns Array<Element> (1) [d9711e29]
514. manipulation: before(Function) -- Returns jQuery (1) [a17245a2]
515. manipulation: before(Function) -- Returns Array<jQuery> (1) [a85fb759]
516. manipulation: before(no-op) (2) [be0e6066]
517. manipulation: before and after w/ empty object (#10812) (1) [e9f42ddf]
518. manipulation: .before() and .after() disconnected node (2) [bff98b50]
519. manipulation: insert with .before() on disconnected node last (1) [3197d82c]
520. manipulation: insert with .before() on disconnected node first (1) [01123fda]
521. manipulation: insert with .before() on disconnected node last (1) [01632d74]
522. manipulation: insert with .before() on disconnected node last (1) [2b02812c]
523. manipulation: insertBefore(String) (1) [2884f727]
524. manipulation: insertBefore(Element) (1) [7c9d099e]
525. manipulation: insertBefore(Array<Element>) (1) [b5e607d3]
526. manipulation: insertBefore(jQuery) (1) [ada3327a]
527. manipulation: .after(String) (1) [e8e4973d]
528. manipulation: .after(Element) (1) [c8316c48]
529. manipulation: .after(Array<Element>) (1) [2a8731e9]
530. manipulation: .after(jQuery) (1) [6e02d290]
531. manipulation: .after(Function) returns String (1) [d5b993f8]
532. manipulation: .after(Function) returns Element (1) [ee8567f5]
533. manipulation: .after(Function) returns Array<Element> (1) [3002a7cc]
534. manipulation: .after(Function) returns jQuery (1) [fb0d2245]
535. manipulation: .after(disconnected node) (2) [1de765fd]
536. manipulation: insertAfter(String) (1) [58a72614]
537. manipulation: insertAfter(Element) (1) [50c0b851]
538. manipulation: insertAfter(Array<Element>) (1) [3354f9c0]
539. manipulation: insertAfter(jQuery) (1) [ddc56167]
540. manipulation: replaceWith(String|Element|Array<Element>|jQuery) (29) [819c8672]
541. manipulation: replaceWith(Function) (30) [85c93a64]
542. manipulation: replaceWith(string) for more than one element (3) [691afae2]
543. manipulation: Empty replaceWith (trac-13401; trac-13596; gh-2204) (25) [b34e46dc]
544. manipulation: replaceAll(String) (2) [8a81309c]
545. manipulation: replaceAll(Element) (2) [5a27fec9]
546. manipulation: replaceAll(Array<Element>) (3) [5bdffc48]
547. manipulation: replaceAll(jQuery) (3) [0f9f6bef]
548. manipulation: jQuery.clone() (#8017) (2) [420b951d]
549. manipulation: append to multiple elements (#8070) (2) [1423a5a6]
550. manipulation: table manipulation (2) [cb6ffd0e]
551. manipulation: clone() (45) [43f2961f]
552. manipulation: clone(script type=non-javascript) (#11359) (3) [ba6bf709]
553. manipulation: clone(form element) (Bug #3879, #6655) (5) [5b5d57f1]
554. manipulation: clone(multiple selected options) (Bug #8129) (1) [b4779b24]
555. manipulation: clone() on XML nodes (2) [549e70a8]
556. manipulation: clone() on local XML nodes with html5 nodename (2) [14569a30]
557. manipulation: html(undefined) (1) [3ff2cc77]
558. manipulation: html() on empty set (1) [efc42543]
559. manipulation: html(String|Number) (40) [177371b3]
560. manipulation: html(Function) (40) [5c6d37d3]
561. manipulation: html(script type module) (4) [409487ae]
562. manipulation: html(Function) with incoming value -- direct selection (4) [3bbe8a39]
563. manipulation: html(Function) with incoming value -- jQuery.contents() (14) [bf0a0767]
564. manipulation: clone()/html() don't expose jQuery/Sizzle expandos (#12858) (2) [9c138b84]
565. manipulation: remove() no filters (2) [3b3ef098]
566. manipulation: remove() with filters (8) [90ccaf9d]
567. manipulation: remove() event cleaning (1) [4ba995c5]
568. manipulation: remove() in document order #13779 (1) [9233c3ec]
569. manipulation: detach() no filters (3) [d4e901e9]
570. manipulation: detach() with filters (8) [6837b0ae]
571. manipulation: detach() event cleaning (1) [b8daaf14]
572. manipulation: empty() (3) [af85020f]
573. manipulation: jQuery.cleanData (14) [3cbc3042]
574. manipulation: jQuery.cleanData eliminates all private data (gh-2127) (3) [60994e58]
575. manipulation: jQuery.cleanData eliminates all public data (3) [c18e2e11]
576. manipulation: domManip plain-text caching (trac-6779) (1) [aa495812]
577. manipulation: domManip executes scripts containing html comments or CDATA (trac-9221) (3) [7bbe762d]
578. manipulation: domManip tolerates window-valued document[0] in IE9/10 (trac-12266) (1) [416079f7]
579. manipulation: domManip executes scripts in iframes in the iframes' context (2) [3096991d]
580. manipulation: jQuery.clone - no exceptions for object elements #9587 (1) [0202079b]
581. manipulation: Cloned, detached HTML5 elems (#10667,10670) (7) [bc2d65ae]
582. manipulation: Guard against exceptions when clearing safeChildNodes (1) [a093336a]
583. manipulation: Ensure oldIE creates a new set on appendTo (#8894) (5) [bab3ba63]
584. manipulation: html() - script exceptions bubble (#11743) (2) [af5cc233]
585. manipulation: checked state is cloned with clone() (2) [0c51698e]
586. manipulation: manipulate mixed jQuery and text (#12384, #12346) (2) [4cb95a05]
587. manipulation: script evaluation (#11795) (13) [f3ac54bf]
588. manipulation: jQuery._evalUrl (#12838) (5) [6789cde3]
589. manipulation: jQuery.htmlPrefilter (gh-1747) (5) [8657f31b]
590. manipulation: insertAfter, insertBefore, etc do not work when destination is original element. Element is removed (#4087) (10) [b9e8f29b]
591. manipulation: Index for function argument should be received (#13094) (2) [5719b78b]
592. manipulation: Make sure jQuery.fn.remove can work on elements in documentFragment (1) [8c121d4d]
593. manipulation: Make sure specific elements with content created correctly (#13232) (20) [2f6e1104]
594. manipulation: Validate creation of multiple quantities of certain elements (#13818) (44) [da9adc23]
595. manipulation: Make sure tr element will be appended to tbody element of table when present (1) [0eeb7ea7]
596. manipulation: Make sure tr elements will be appended to tbody element of table when present (1) [f86836b6]
597. manipulation: Make sure tfoot element will not be appended to tbody element of table when present (1) [a120bd88]
598. manipulation: Make sure document fragment will be appended to tbody element of table when present (1) [abf62c12]
599. manipulation: Make sure col element is appended correctly (1) [960a5aca]
600. manipulation: Make sure tr is not appended to the wrong tbody (gh-3439) (1) [84a4f35b]
601. manipulation: Insert script with data-URI (gh-1887) (1) [d6c835b5]
602. wrap: wrap(String|Element) (19) [3ad4676c]
603. wrap: wrap(Function) (19) [14b24165]
604. wrap: wrap(Function) with index (#10177) (6) [e82d35bf]
605. wrap: wrap(String) consecutive elements (#10177) (12) [199d8111]
606. wrap: wrapAll(String) (5) [62f06b95]
607. wrap: wrapAll(Function) (5) [6b6bed6e]
608. wrap: wrapAll(Function) check execution characteristics (3) [2b4b8966]
609. wrap: wrapAll(Element) (3) [8fa022f0]
610. wrap: wrapInner(String) (6) [13d74a4a]
611. wrap: wrapInner(Element) (5) [fb951adb]
612. wrap: wrapInner(Function) returns String (6) [a98bbc8b]
613. wrap: wrapInner(Function) returns Element (5) [94f851c2]
614. wrap: unwrap() (9) [d4a4e9b6]
615. wrap: unwrap( selector ) (5) [ba3af195]
616. wrap: jQuery(<tag>) & wrap[Inner/All]() handle unknown elems (#10667) (2) [df27d084]
617. wrap: wrapping scripts (#10470) (2) [52f4a540]
618. css: css(String|Hash) (42) [bd70ccae]
619. css: css() explicit and relative values (29) [55e67956]
620. css: css() non-px relative values (gh-1711) (17) [43c9c8b2]
621. css: css() mismatched relative values with bounded styles (gh-2144) (1) [b5b5e83d]
622. css: css(String, Object) (19) [040f8367]
623. css: css(String, Object) with negative values (4) [9fd1072c]
624. css: css(Array) (2) [b21d870e]
625. css: css(String, Function) (3) [8ea592ae]
626. css: css(String, Function) with incoming value (3) [d52dd71f]
627. css: css(Object) where values are Functions (3) [90ac0dfe]
628. css: css(Object) where values are Functions with incoming values (3) [b8bbc3e4]
629. css: show() (18) [50a55477]
630. css: show/hide detached nodes (19) [f482cc88]
631. css: hide hidden elements (bug #7141) (3) [03e6c6eb]
632. css: show() after hide() should always set display to initial value (#14750) (1) [57252375]
633. css: show/hide 3.0, default display (36) [a7c2699f]
634. css: show/hide 3.0, default body display (2) [24d1dd87]
635. css: show/hide 3.0, cascade display (36) [fe4e7712]
636. css: show/hide 3.0, inline display (96) [a91016ff]
637. css: show/hide 3.0, cascade hidden (72) [edf8355a]
638. css: show/hide 3.0, inline hidden (84) [fbbc63cd]
639. css: toggle() (9) [886670ce]
640. css: detached toggle() (6) [658232ea]
641. css: jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) (4) [b2ecf73b]
642. css: internal ref to elem.runtimeStyle (bug #7608) (1) [088cf83d]
643. css: computed margins (trac-3333; gh-2237) (2) [0d71fe58]
644. css: box model properties incorrectly returning % instead of px, see #10639 and #12088 (2) [9d1b7146]
645. css: jQuery.cssProps behavior, (bug #8402) (2) [bf0079da]
646. css: widows & orphans #8936 (2) [2d0ffbea]
647. css: can't get css for disconnected in IE<9, see #10254 and #8388 (2) [ce12502e]
648. css: Ensure styles are retrieving from parsed html on document fragments (1) [40d316e9]
649. css: can't get background-position in IE<9, see #10796 (8) [a21fbb69]
650. css: percentage properties for left and top should be transformed to pixels, see #9505 (2) [9c39f1cc]
651. css: Do not append px (#9548, #12990, #2792) (3) [ef1ec892]
652. css: css('width') and css('height') should respect box-sizing, see #11004 (4) [e203a9fa]
653. css: css('width') should work correctly before document ready (#14084) (1) [50fba7e8]
654. css: css('width') should work correctly with browser zooming (1) [1502b009]
655. css: css('width') and css('height') should return fractional values for nodes in the document (2) [ae02f112]
656. css: css('width') and css('height') should return fractional values for disconnected nodes (2) [60a69090]
657. css: certain css values of 'normal' should be convertable to a number, see #8627 (3) [f92cd943]
658. css: cssHooks - expand (15) [0effefe7]
659. css: css opacity consistency across browsers (#12685) (3) [408cc779]
660. css: :visible/:hidden selectors (17) [9259039a]
661. css: Keep the last style if the new one isn't recognized by the browser (#14836) (1) [b7923ac5]
662. css: Keep the last style if the new one is a non-empty whitespace (gh-3204) (1) [57883443]
663. css: Reset the style if set to an empty string (1) [963a3c6b]
664. css: Clearing a Cloned Element's Style Shouldn't Clear the Original Element's Style (#8908) (24) [1170a758]
665. css: Don't append px to CSS "order" value (#14049) (1) [bd7562d2]
666. css: Do not throw on frame elements from css method (#15098) (1) [152c6b1d]
667. css: Don't default to a cached previously used wrong prefixed name (gh-2015) (3) [b862bce1]
668. css: Don't detect fake set properties on a node when caching the prefixed version (1) [8dd18c09]
669. css: css(--customProperty) (2, 6, 8) [b4597a25]
670. serialize: jQuery.param() (23) [9004571a]
671. serialize: jQuery.param() not affected by ajaxSettings (1) [503481d3]
672. serialize: jQuery.param() Constructed prop values (4) [2ed25aef]
673. serialize: serialize() (6) [1a0f6125]
674. ajax: Unit Testing Environment (2) [7c492543]
675. ajax: XMLHttpRequest - Attempt to block tests because of dangling XHR requests (IE) (1) [e0d0b3c1]
676. ajax: jQuery.ajax() - success callbacks (8) [11a69f33]
677. ajax: jQuery.ajax() - success callbacks - (url, options) syntax (8) [473f095d]
678. ajax: jQuery.ajax() - execute js for crossOrigin when dataType option is provided (3) [49492c83]
679. ajax: jQuery.ajax() - do not execute js (crossOrigin) (2) [81be4b23]
680. ajax: jQuery.ajax() - success callbacks (late binding) (8) [df5387e3]
681. ajax: jQuery.ajax() - success callbacks (oncomplete binding) (8) [2a91caf1]
682. ajax: jQuery.ajax() - error callbacks (8) [ed8cd778]
683. ajax: jQuery.ajax() - textStatus and errorThrown values (4) [4af235be]
684. ajax: jQuery.ajax() - responseText on error (1) [7d19049b]
685. ajax: jQuery.ajax() - retry with jQuery.ajax( this ) (2) [fbd996cb]
686. ajax: jQuery.ajax() - headers (5) [809a3448]
687. ajax: jQuery.ajax() - Accept header (1) [41e037c7]
688. ajax: jQuery.ajax() - contentType (2) [25ace715]
689. ajax: jQuery.ajax() - protocol-less urls (1) [f9877014]
690. ajax: jQuery.ajax() - hash (4) [57d8038c]
691. ajax: jQuery.ajax() - traditional param encoding (4) [00f6ab1d]
692. ajax: jQuery.ajax() - cross-domain detection (8) [4d4f7314]
693. ajax: jQuery.ajax() - abort (9) [a2c63072]
694. ajax: jQuery.ajax() - native abort (2) [9609be65]
695. ajax: jQuery.ajax() - native timeout (2) [3379ef56]
696. ajax: jQuery.ajax() - events with context (12) [6b614dbe]
697. ajax: jQuery.ajax() - events without context (3) [dc08b44e]
698. ajax: #15118 - jQuery.ajax() - function without jQuery.event (1) [eb310de2]
699. ajax: #15160 - jQuery.ajax() - request manually aborted in ajaxSend (3) [327be7ab]
700. ajax: jQuery.ajax() - context modification (1) [8a14e6eb]
701. ajax: jQuery.ajax() - context modification through ajaxSetup (3) [70060ead]
702. ajax: jQuery.ajax() - disabled globals (3) [2120810a]
703. ajax: jQuery.ajax() - xml: non-namespace elements inside namespaced elements (3) [294e634f]
704. ajax: jQuery.ajax() - xml: non-namespace elements inside namespaced elements (over JSONP) (3) [6c0c8596]
705. ajax: jQuery.ajax() - HEAD requests (2) [c9f4c146]
706. ajax: jQuery.ajax() - beforeSend (1) [41e697a5]
707. ajax: jQuery.ajax() - beforeSend, cancel request manually (2) [be018331]
708. ajax: jQuery.ajax() - dataType html (5) [2f65b789]
709. ajax: jQuery.ajax() - synchronous request (1) [3354227a]
710. ajax: jQuery.ajax() - synchronous request with callbacks (2) [6ac8a05a]
711. ajax: jQuery.ajax(), jQuery.get[Script|JSON](), jQuery.post(), pass-through request object (8) [e0e98fe7]
712. ajax: jQuery.ajax() - cache (28) [a2e1bcc4]
713. ajax: jQuery.ajax() - JSONP - Query String (?n) - Same Domain (5, 2, 7) [0af1ad6b]
714. ajax: jQuery.ajax() - JSONP - Explicit callback param - Same Domain (10) [89307bc0]
715. ajax: jQuery.ajax() - JSONP - Callback in data - Same Domain (2) [21ec63be]
716. ajax: jQuery.ajax() - JSONP - POST - Same Domain (3) [4563ce54]
717. ajax: jQuery.ajax() - JSONP - Same Domain (3) [317c8a55]
718. ajax: jQuery.ajax() - JSONP - Query String (?n) - Cross Domain (2, 2, 4) [b40cd6d7]
719. ajax: jQuery.ajax() - JSONP - Explicit callback param - Cross Domain (10) [fda7d322]
720. ajax: jQuery.ajax() - JSONP - Callback in data - Cross Domain (2) [7c68eae4]
721. ajax: jQuery.ajax() - JSONP - POST - Cross Domain (3) [c7ded30e]
722. ajax: jQuery.ajax() - JSONP - Cross Domain (3) [5edd972d]
723. ajax: jQuery.ajax() - script, Remote (2) [bc1195a3]
724. ajax: jQuery.ajax() - script, Remote with POST (3) [4085a57d]
725. ajax: jQuery.ajax() - script, Remote with scheme-less URL (2) [40650873]
726. ajax: jQuery.ajax() - malformed JSON (2) [4743732b]
727. ajax: jQuery.ajax() - script by content-type (2) [37339ee0]
728. ajax: jQuery.ajax() - JSON by content-type (5) [e18e807d]
729. ajax: jQuery.ajax() - JSON by content-type disabled with options (6) [93d5d505]
730. ajax: jQuery.ajax() - simple get (1) [cd930fe6]
731. ajax: jQuery.ajax() - simple post (1) [e4d32a10]
732. ajax: jQuery.ajax() - data option - empty bodies for non-GET requests (1) [beecf48c]
733. ajax: jQuery.ajax() - data - x-www-form-urlencoded (gh-2658) (1) [0c695970]
734. ajax: jQuery.ajax() - data - text/plain (gh-2658) (1) [010ed4b1]
735. ajax: jQuery.ajax() - data - no processing POST (1) [36e1baf9]
736. ajax: jQuery.ajax() - data - no processing GET (1) [5459b9bd]
737. ajax: jQuery.ajax() - data - process string with GET (2) [4a0eb56f]
738. ajax: jQuery.ajax() - If-Modified-Since support (cache) (4) [a14493a6]
739. ajax: jQuery.ajax() - Etag support (cache) (4) [2e99b551]
740. ajax: jQuery.ajax() - If-Modified-Since support (no cache) (4) [17b51107]
741. ajax: jQuery.ajax() - Etag support (no cache) (4) [1d8e0b7c]
742. ajax: jQuery.ajax() - failing cross-domain (non-existing) (1) [8fe7268b]
743. ajax: jQuery.ajax() - failing cross-domain (1) [cf74d80b]
744. ajax: jQuery.ajax() - atom+xml (1) [ed49f85b]
745. ajax: jQuery.ajax() - statusText (3) [31c72c3d]
746. ajax: jQuery.ajax() - statusCode (20) [31bf94fd]
747. ajax: jQuery.ajax() - transitive conversions (8) [970147a0]
748. ajax: jQuery.ajax() - overrideMimeType (2) [e90656f8]
749. ajax: jQuery.ajax() - empty json gets to error callback instead of success callback. (1) [b1aea05b]
750. ajax: #2688 - jQuery.ajax() - beforeSend, cancel request (2) [d97cf56e]
751. ajax: #2806 - jQuery.ajax() - data option - evaluate function values (1) [048476ed]
752. ajax: #7531 - jQuery.ajax() - Location object as url (1) [ba63b869]
753. ajax: #7578 - jQuery.ajax() - JSONP - default for cache option - Same Domain (1) [ee78960e]
754. ajax: #7578 - jQuery.ajax() - JSONP - default for cache option - Cross Domain (1) [41630294]
755. ajax: #8107 - jQuery.ajax() - multiple method signatures introduced in 1.5 (4) [93452e30]
756. ajax: #8205 - jQuery.ajax() - JSONP - re-use callbacks name - Same Domain (4) [c61fc201]
757. ajax: #8205 - jQuery.ajax() - JSONP - re-use callbacks name - Cross Domain (4) [5ea15501]
758. ajax: #9887 - jQuery.ajax() - Context with circular references (#9887) (2) [f66111a0]
759. ajax: #10093 - jQuery.ajax() - falsy url as argument (4) [2ed44440]
760. ajax: #10093 - jQuery.ajax() - falsy url in settings object (4) [af4a1dec]
761. ajax: #11151 - jQuery.ajax() - parse error body (2) [d8837896]
762. ajax: #11426 - jQuery.ajax() - loading binary data shouldn't throw an exception in IE (1) [dc9cbb04]
763. ajax: gh-2498 - jQuery.ajax() - binary data shouldn't throw an exception (2) [0fe4f9c9]
764. ajax: #11743 - jQuery.ajax() - script, throws exception (1) [fb3d7f01]
765. ajax: #12004 - jQuery.ajax() - method is an alias of type - method set globally (3) [11112fda]
766. ajax: #12004 - jQuery.ajax() - method is an alias of type - type set globally (3) [b6160961]
767. ajax: #13276 - jQuery.ajax() - compatibility between XML documents from ajax requests and parsed string (1) [4a5ae56b]
768. ajax: #13292 - jQuery.ajax() - converter is bypassed for 204 requests (3) [ae3814fb]
769. ajax: #13388 - jQuery.ajax() - responseXML (3) [5fc9540b]
770. ajax: #13922 - jQuery.ajax() - converter is bypassed for HEAD requests (3) [5a6e2185]
771. ajax: #14379 - jQuery.ajax() on unload (1, 0, 1) [d38a90c9]
772. ajax: #14683 - jQuery.ajax() - Exceptions thrown synchronously by xhr.send should be caught (4) [3ef5bd03]
773. ajax: gh-2587 - when content-type not xml, but looks like one (1) [3e172a39]
774. ajax: gh-2587 - when content-type not xml, but looks like one (1) [84ce1d07]
775. ajax: gh-2587 - when content-type not json, but looks like one (1) [105d807e]
776. ajax: gh-2587 - when content-type not html, but looks like one (1) [3c4e9bc1]
777. ajax: gh-2587 - when content-type not javascript, but looks like one (1) [ff08cd03]
778. ajax: gh-2587 - when content-type not ecmascript, but looks like one (1) [d6eff993]
779. ajax: jQuery.ajaxPrefilter() - abort (1) [5ba592c5]
780. ajax: jQuery.ajaxSetup() (1) [1ac2258a]
781. ajax: jQuery.ajaxSetup({ timeout: Number }) - with global timeout (2) [51cfebab]
782. ajax: jQuery.ajaxSetup({ timeout: Number }) with localtimeout (1) [7ad95c50]
783. ajax: #11264 - jQuery.domManip() - no side effect because of ajaxSetup or global events (1) [cd193b73]
784. ajax: jQuery#load() - always use GET method even if it overrided through ajaxSetup (#11264) (1) [089a0d04]
785. ajax: jQuery#load() - should resolve with correct context (2) [61acec9d]
786. ajax: #11402 - jQuery.domManip() - script in comments are properly evaluated (2) [0a4be813]
787. ajax: jQuery.get( String, Hash, Function ) - parse xml and use text() on nodes (2) [c67463d9]
788. ajax: #8277 - jQuery.get( String, Function ) - data in ajaxSettings (1) [4bab4865]
789. ajax: jQuery.getJSON( String, Hash, Function ) - JSON array (5) [fde69a0a]
790. ajax: jQuery.getJSON( String, Function ) - JSON object (2) [613829cc]
791. ajax: jQuery.getJSON( String, Function ) - JSON object with absolute url to local content (2) [94ce2e73]
792. ajax: jQuery.getScript( String, Function ) - with callback (2) [1c0a8777]
793. ajax: jQuery.getScript( String, Function ) - no callback (1) [4976fadc]
794. ajax: #8082 - jQuery.getScript( String, Function ) - source as responseText (2) [5fce23e1]
795. ajax: jQuery.getScript( Object ) - with callback (2) [3b423039]
796. ajax: jQuery.getScript( Object ) - no callback (1) [78a5ec1e]
797. ajax: jQuery.fn.load( String ) (2) [7cfe4aca]
798. ajax: jQuery.fn.load() - 404 error callbacks (6) [e319cb54]
799. ajax: jQuery.fn.load( String, null ) (2) [56181445]
800. ajax: jQuery.fn.load( String, undefined ) (2) [24edc204]
801. ajax: jQuery.fn.load( URL_SELECTOR ) (1) [5876c7e8]
802. ajax: jQuery.fn.load( URL_SELECTOR with spaces ) (1) [e419ac4f]
803. ajax: jQuery.fn.load( URL_SELECTOR with non-HTML whitespace(#3003) ) (1) [ba22617e]
804. ajax: jQuery.fn.load( String, Function ) - simple: inject text into DOM (2) [70fae57b]
805. ajax: jQuery.fn.load( String, Function ) - check scripts (7) [8f543f13]
806. ajax: jQuery.fn.load( String, Function ) - check file with only a script tag (3) [fa8720ad]
807. ajax: jQuery.fn.load( String, Function ) - dataFilter in ajaxSettings (2) [408924dd]
808. ajax: jQuery.fn.load( String, Object, Function ) (2) [d5228449]
809. ajax: jQuery.fn.load( String, String, Function ) (2) [9f38961b]
810. ajax: jQuery.fn.load() - callbacks get the correct parameters (8) [c9ec9545]
811. ajax: #2046 - jQuery.fn.load( String, Function ) with ajaxSetup on dataType json (1) [6fc0ece6]
812. ajax: #10524 - jQuery.fn.load() - data specified in ajaxSettings is merged in (1) [d7f311d7]
813. ajax: jQuery.post() - data (3) [1eea9ba8]
814. ajax: jQuery.post( String, Hash, Function ) - simple with xml (4) [9f5e75ec]
815. ajax: jQuery[get|post]( options ) - simple with xml (2) [4293a0f1]
816. ajax: jQuery.active (1) [1868a7fa]
817. effects: sanity check (1) [efdae790]
818. effects: show() basic (1) [b34666a6]
819. effects: show() (27) [d8a15098]
820. effects: show(Number) - inline hidden (30) [00a2bb4d]
821. effects: show(Number) - cascade hidden (30) [85dccdda]
822. effects: Persist correct display value - inline hidden (3) [e5413915]
823. effects: Persist correct display value - cascade hidden (3) [350e0912]
824. effects: animate(Hash, Object, Function) (1) [cf19d4bb]
825. effects: animate relative values (12) [bc0d4d1d]
826. effects: animate negative height (1) [94637799]
827. effects: animate negative margin (1) [9cb76c20]
828. effects: animate negative margin with px (1) [aa03bfa2]
829. effects: animate negative padding (1) [982223df]
830. effects: animate block as inline width/height (3) [fa0a9ef5]
831. effects: animate native inline width/height (3) [563ce3a7]
832. effects: animate block width/height (3) [5c02ecbc]
833. effects: animate table width/height (1) [2014071b]
834. effects: animate table-row width/height (3) [b9cdf82e]
835. effects: animate table-cell width/height (3) [7ac0fc76]
836. effects: animate percentage(%) on width/height (2) [3ca3cfea]
837. effects: animate resets overflow-x and overflow-y when finished (2) [2ea5bb3f]
838. effects: animate option { queue: false } (2) [228dc8a0]
839. effects: animate option { queue: true } (2) [012e6a8b]
840. effects: animate option { queue: 'name' } (5) [3b587672]
841. effects: animate with no properties (2) [0c707191]
842. effects: animate duration 0 (11) [de89c01d]
843. effects: animate hyphenated properties (1) [e0741176]
844. effects: animate non-element (1) [8a2a7ba3]
845. effects: stop() (4) [d94a505d]
846. effects: stop() - several in queue (5) [900f6230]
847. effects: stop(clearQueue) (4) [99389d19]
848. effects: stop(clearQueue, gotoEnd) (1) [185a6135]
849. effects: stop( queue, ..., ... ) - Stop single queues (3) [91a9f589]
850. effects: toggle() (6) [0153e8af]
851. effects: jQuery.fx.prototype.cur() - <1.8 Back Compat (1, 6, 7) [1185dbde]
852. effects: Overflow and Display (4) [fbe416b5]
853. effects: CSS Auto to 0 (6) [cd18cc65]
854. effects: CSS Auto to 50 (6) [d600c106]
855. effects: CSS Auto to 100 (6) [ea1750e6]
856. effects: CSS Auto to show (5) [58f1a6a8]
857. effects: CSS Auto to hide (4) [58eca8ed]
858. effects: JS Auto to 0 (6) [d95a1dbf]
859. effects: JS Auto to 50 (6) [51e99aec]
860. effects: JS Auto to 100 (6) [eb49b3c0]
861. effects: JS Auto to show (5) [7e0b9f0e]
862. effects: JS Auto to hide (4) [7e06a153]
863. effects: CSS 100 to 0 (6) [20d4da91]
864. effects: CSS 100 to 50 (6) [f9c6785a]
865. effects: CSS 100 to 100 (6) [3f088412]
866. effects: CSS 100 to show (5) [a226d8fc]
867. effects: CSS 100 to hide (4) [a221db41]
868. effects: JS 100 to 0 (6) [94d6f5f7]
869. effects: JS 100 to 50 (6) [0607c9b4]
870. effects: JS 100 to 100 (6) [baf15df8]
871. effects: JS 100 to show (5) [a3593bd6]
872. effects: JS 100 to hide (4) [a3543e1b]
873. effects: CSS 50 to 0 (6) [2ec35d59]
874. effects: CSS 50 to 50 (6) [a9a84e92]
875. effects: CSS 50 to 100 (6) [8b6174da]
876. effects: CSS 50 to show (5) [e0ec0134]
877. effects: CSS 50 to hide (4) [e0e70379]
878. effects: JS 50 to 0 (6) [21fd3d33]
879. effects: JS 50 to 50 (6) [1daa69f8]
880. effects: JS 50 to 100 (6) [97a2c634]
881. effects: JS 50 to show (5) [5cd4db1a]
882. effects: JS 50 to hide (4) [5ccfdd5f]
883. effects: CSS 0 to 0 (6) [cef43972]
884. effects: CSS 0 to 50 (6) [0f92f599]
885. effects: CSS 0 to 100 (6) [e2cbaeb3]
886. effects: CSS 0 to show (5) [76c9027b]
887. effects: CSS 0 to hide (4) [76c404c0]
888. effects: JS 0 to 0 (6) [6b71f658]
889. effects: JS 0 to 50 (6) [02ccd573]
890. effects: JS 0 to 100 (6) [56cdca19]
891. effects: JS 0 to show (5) [830a53d5]
892. effects: JS 0 to hide (4) [8305561a]
893. effects: Effects chaining (16) [30b31e59]
894. effects: jQuery.show('fast') doesn't clear radio buttons (bug #1095) (4) [64f5d5da]
895. effects: interrupt toggle (24) [bfb8430b]
896. effects: animate with per-property easing (5) [31782e85]
897. effects: animate with CSS shorthand properties (11) [6cdfbda6]
898. effects: hide hidden elements, with animation (bug #7141) (4) [f7e757ea]
899. effects: animate unit-less properties (#4966) (2) [8ba15e93]
900. effects: animate properties missing px w/ opacity as last (#9074) (6) [4de2c7cb]
901. effects: callbacks should fire in correct order (#9100) (1) [ee12de1c]
902. effects: callbacks that throw exceptions will be removed (#5684) (2) [b234370d]
903. effects: animate will scale margin properties individually (2) [eb5df1cc]
904. effects: Do not append px to 'fill-opacity' #9548 (1) [de39926d]
905. effects: line-height animates correctly (#13855) (12) [2692e84b]
906. effects: jQuery.Animation( object, props, opts ) (4) [06a080f4]
907. effects: Animate Option: step: function( percent, tween ) (1) [d9eb74b1]
908. effects: Animate callbacks have correct context (2) [48f58a6c]
909. effects: User supplied callback called after show when fx off (#8892) (2) [fab3ee0c]
910. effects: animate should set display for disconnected nodes (20) [1cea88d3]
911. effects: Animation callback should not show animated element as :animated (#7157) (1) [4b540974]
912. effects: Initial step callback should show element as :animated (#14623) (1) [775bf4aa]
913. effects: hide called on element within hidden parent should set display to none (#10045) (3) [89eb04cf]
914. effects: hide, fadeOut and slideUp called on element width height and width = 0 should set display to none (5) [eda025cc]
915. effects: hide should not leave hidden inline elements visible (#14848) (2) [7da02112]
916. effects: Handle queue:false promises (10) [4a1e01dc]
917. effects: multiple unqueued and promise (4) [7b25a5f4]
918. effects: animate does not change start value for non-px animation (#7109) (1) [aad22350]
919. effects: non-px animation handles non-numeric start (#11971) (2) [42f0f191]
920. effects: Animation callbacks (#11797) (15) [5f8a45b7]
921. effects: Animation callbacks in order (#2292) (9) [75750cf0]
922. effects: Animate properly sets overflow hidden when animating width/height (#12117) (8) [843718d3]
923. effects: Each tick of the timer loop uses a fresh time (#12837) (3) [c33eae3e]
924. effects: Animations with 0 duration don't ease (#12273) (1) [015c4700]
925. effects: toggle state tests: toggle (#8685) (4) [053bfcad]
926. effects: toggle state tests: slideToggle (#8685) (4) [10217f72]
927. effects: toggle state tests: fadeToggle (#8685) (4) [a103e349]
928. effects: jQuery.fx.start & jQuery.fx.stop hook points (3) [c6e72c4c]
929. effects: .finish() completes all queued animations (11) [792af4ff]
930. effects: .finish( false ) - unqueued animations (10) [ee304b1d]
931. effects: .finish( "custom" ) - custom queue animations (11) [cc2d89b1]
932. effects: .finish() calls finish of custom queue functions (6) [a098b6dc]
933. effects: .finish() is applied correctly when multiple elements were animated (#13937) (3) [7edca75c]
934. effects: slideDown() after stop() (#13483) (2) [a874816a]
935. effects: Respect display value on inline elements (#14824) (2) [647e4e8f]
936. effects: jQuery.easing._default (gh-2218) (2) [9b31e0cd]
937. effects: jQuery.easing._default in Animation (gh-2218 (3) [f3848a31]
938. effects: jQuery.easing._default in Tween (gh-2218) (3) [34e48d3f]
939. effects: Display value is correct for disconnected nodes (trac-13310) (3) [6cda80d6]
940. effects: Show/hide/toggle and display: inline (40) [fab77d41]
941. effects: jQuery.speed( speed, easing, complete ) (4) [548e7593]
942. effects: jQuery.speed( speed, easing, complete ) - with easing function (4) [da2d7313]
943. effects: jQuery.speed( options ) (4) [719b935e]
944. effects: jQuery.speed( options ) - with easing function (4) [60ec00e8]
945. effects: jQuery.speed( options ) - queue values (5) [1879d526]
946. effects: jQuery.speed() - durations (5) [cde8a3fe]
947. offset: empty set (2) [a2eac746]
948. offset: disconnected element (4) [4e7e1d80]
949. offset: hidden (display: none) element (4) [30c50140]
950. offset: 0 sized element (4) [08beeb66]
951. offset: hidden (visibility: hidden) element (4) [906bc1e8]
952. offset: normal element (4) [dda9c2ec]
953. offset: absolute (4) [7f824260]
954. offset: absolute (178) [70c609c0]
955. offset: relative (64) [f7752fb5]
956. offset: static (80) [b0b92997]
957. offset: fixed (38) [c2e7032b]
958. offset: table (4) [c3a85785]
959. offset: scroll (6, 20, 26) [afd141f6]
960. offset: body (4) [48584b0b]
961. offset: chaining (3) [6d9ef26a]
962. offset: nonzero box properties - html.static body.static (14, 19, 33) [483d26f4]
963. offset: nonzero box properties - html.static body.relative (10, 23, 33) [bdef49d2]
964. offset: nonzero box properties - html.static body.absolute (10, 23, 33) [45fc5c7d]
965. offset: nonzero box properties - html.static body.fixed (2, 31, 33) [5c6f662e]
966. offset: nonzero box properties - html.relative body.static (10, 23, 33) [700b0b52]
967. offset: nonzero box properties - html.relative body.relative (10, 23, 33) [29d58eb0]
968. offset: nonzero box properties - html.relative body.absolute (10, 23, 33) [b1e2a15b]
969. offset: nonzero box properties - html.relative body.fixed (2, 31, 33) [8f447e10]
970. offset: nonzero box properties - html.absolute body.static (10, 23, 33) [d492757d]
971. offset: nonzero box properties - html.absolute body.relative (10, 23, 33) [8a2b1a1b]
972. offset: nonzero box properties - html.absolute body.absolute (10, 23, 33) [12382cc6]
973. offset: nonzero box properties - html.absolute body.fixed (2, 31, 33) [0e61a285]
974. offset: nonzero box properties - html.fixed body.static (33) [a57a46a2]
975. offset: nonzero box properties - html.fixed body.relative (33) [c0633600]
976. offset: nonzero box properties - html.fixed body.absolute (33) [487048ab]
977. offset: nonzero box properties - html.fixed body.fixed (33) [fc5898c0]
978. offset: offsetParent (13) [f4faf786]
979. offset: fractions (see #7730 and #7885) (2) [373463ce]
980. offset: iframe scrollTop/Left (see gh-1945) (2) [8deeff6a]
981. dimensions: width() (9) [855ae478]
982. dimensions: width(Function) (9) [ae664c80]
983. dimensions: width(Function(args)) (2) [0db1c3fc]
984. dimensions: height() (9) [44094357]
985. dimensions: height(Function) (9) [27735c5f]
986. dimensions: height(Function(args)) (2) [5b05309b]
987. dimensions: innerWidth() (7) [3033c180]
988. dimensions: innerHeight() (7) [f44c074f]
989. dimensions: outerWidth() (12) [2a572bbb]
990. dimensions: outerHeight() (12) [3e95e474]
991. dimensions: child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #9441 #9300 (16) [f05103b6]
992. dimensions: getting dimensions shouldn't modify runtimeStyle see #9233 (1) [fd1a1aee]
993. dimensions: table dimensions (2) [5a628b4e]
994. dimensions: box-sizing:border-box child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #10413 (16) [16694f32]
995. dimensions: passing undefined is a setter #5571 (4) [bdb02bc3]
996. dimensions: setters with and without box-sizing:border-box (120) [6d13f464]
997. dimensions: window vs. large document (2) [95e8fa70]
998. dimensions: allow modification of coordinates argument (gh-1848) (1) [70d69f87]
999. dimensions: outside view position (gh-2836) (1) [6719e036]
1000. dimensions: width/height on element with transform (gh-3193) (2) [3eab4f83]
1001. dimensions: width/height on an inline element with no explicitly-set dimensions (gh-3571) (8) [db2e1c03]
1002. dimensions: width/height on an inline element with percentage dimensions (gh-3611) (4) [2744a6b3]
1003. dimensions: width/height on a table row with phantom borders (gh-3698) (4) [0932dc94]
1004. dimensions: interaction with scrollbars (gh-3589) (36, 12, 48) [1c06b88c]
1005. animation: Animation( subject, props, opts ) - shape (20) [b1e3617f]
1006. animation: Animation.prefilter( fn ) - calls prefilter after defaultPrefilter (1) [2a50ba1f]
1007. animation: Animation.prefilter( fn, true ) - calls prefilter before defaultPrefilter (1) [c55d16bc]
1008. animation: Animation.prefilter - prefilter return hooks (34) [2b51eabf]
1009. animation: Animation.tweener( fn ) - unshifts a * tweener (2) [803364a1]
1010. animation: Animation.tweener( 'prop', fn ) - unshifts a 'prop' tweener (4) [12355747]
1011. animation: Animation.tweener( 'list of props', fn ) - unshifts a tweener to each prop (2) [590e4dc3]
1012. tween: jQuery.Tween - Default propHooks on plain objects (8) [09121f56]
1013. tween: jQuery.Tween - Default propHooks on elements (19) [03fab35f]
1014. tween: jQuery.Tween - Plain Object (13) [064e21dc]
1015. tween: jQuery.Tween - Element (15) [1a509f35]
1016. tween: jQuery.Tween - No duration (3) [05bfc4cc]
1017. tween: jQuery.Tween - step function option (4) [5caad4b0]
1018. tween: jQuery.Tween - custom propHooks (3) [8af203e5]
1019. tween: jQuery.Tween - custom propHooks - advanced values (5) [701d4d72]
