jQuery Test Suite
Hide passed testsCheck for GlobalsNo try-catchminnoqsaModule:
< All Modules >
Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Tests completed in 64690 milliseconds.
6910 tests of 6920 passed, 10 failed.

core: Unit Testing Environment (0, 2, 2)Rerun
core: Basic requirements (0, 7, 7)Rerun
core: jQuery() (0, 31, 31)Rerun
core: selector state (0, 31, 31)Rerun
core: globalEval (0, 3, 3)Rerun
core: noConflict (0, 7, 7)Rerun
core: trim (0, 13, 13)Rerun
core: type (0, 23, 23)Rerun
core: isPlainObject (0, 15, 15)Rerun
core: isFunction (0, 19, 19)Rerun
core: isNumeric (0, 36, 36)Rerun
core: isXMLDoc - HTML (0, 4, 4)Rerun
core: XSS via location.hash (0, 1, 1)Rerun
core: isXMLDoc - XML (0, 3, 3)Rerun
core: isWindow (0, 14, 14)Rerun
core: jQuery('html') (0, 18, 18)Rerun
core: jQuery('html', context) (0, 1, 1)Rerun
core: jQuery(selector, xml).text(str) - Loaded via XML document (0, 2, 2)Rerun
core: end() (0, 3, 3)Rerun
core: length (0, 1, 1)Rerun
core: size() (0, 1, 1)Rerun
core: get() (0, 1, 1)Rerun
core: toArray() (0, 1, 1)Rerun
core: inArray() (0, 19, 19)Rerun
core: get(Number) (0, 2, 2)Rerun
core: get(-Number) (0, 2, 2)Rerun
core: each(Function) (0, 1, 1)Rerun
core: slice() (0, 7, 7)Rerun
core: first()/last() (0, 4, 4)Rerun
core: map() (0, 8, 8)Rerun
core: jQuery.merge() (0, 8, 8)Rerun
core: jQuery.extend(Object, Object) (0, 28, 28)Rerun
core: jQuery.each(Object,Function) (0, 14, 14)Rerun
core: jQuery.makeArray (0, 17, 17)Rerun
core: jQuery.inArray (0, 3, 3)Rerun
core: jQuery.isEmptyObject (0, 2, 2)Rerun
core: jQuery.proxy (0, 7, 7)Rerun
core: jQuery.parseHTML (0, 11, 11)Rerun
core: jQuery.parseJSON (0, 8, 8)Rerun
core: jQuery.parseXML (0, 8, 8)Rerun
core: jQuery.sub() - Static Methods (0, 18, 18)Rerun
core: jQuery.sub() - .fn Methods (0, 378, 378)Rerun
core: jQuery.camelCase() (0, 7, 7)Rerun
callbacks: jQuery.Callbacks( "" ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { } ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "" ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { } ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "once" ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "once": true } ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "once" ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "once": true } ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "memory" ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "memory": true } ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "memory" ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "memory": true } ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "unique" ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "unique": true } ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "unique" ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "unique": true } ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "stopOnFalse" ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "stopOnFalse": true } ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "stopOnFalse" ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "stopOnFalse": true } ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "once memory" ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "once": true, "memory": true } ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "once memory" ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "once": true, "memory": true } ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "once unique" ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "once": true, "unique": true } ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "once unique" ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "once": true, "unique": true } ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "once stopOnFalse" ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "once": true, "stopOnFalse": true } ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "once stopOnFalse" ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "once": true, "stopOnFalse": true } ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "memory unique" ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "memory": true, "unique": true } ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "memory unique" ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "memory": true, "unique": true } ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "memory stopOnFalse" ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "memory": true, "stopOnFalse": true } ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "memory stopOnFalse" ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "memory": true, "stopOnFalse": true } ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "unique stopOnFalse" ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "unique": true, "stopOnFalse": true } ) - no filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( "unique stopOnFalse" ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( { "unique": true, "stopOnFalse": true } ) - filter (0, 20, 20)Rerun
callbacks: jQuery.Callbacks( options ) - options are copied (0, 1, 1)Rerun
callbacks: jQuery.Callbacks.fireWith - arguments are copied (0, 1, 1)Rerun
callbacks: jQuery.Callbacks.remove - should remove all instances (0, 1, 1)Rerun
callbacks: jQuery.Callbacks() - adding a string doesn't cause a stack overflow (0, 1, 1)Rerun
deferred: jQuery.Deferred (0, 23, 23)Rerun
deferred: jQuery.Deferred - new operator (0, 23, 23)Rerun
deferred: jQuery.Deferred - chainability (0, 10, 10)Rerun
deferred: jQuery.Deferred.then - filtering (done) (0, 4, 4)Rerun
deferred: jQuery.Deferred.then - filtering (fail) (0, 4, 4)Rerun
deferred: jQuery.Deferred.then - filtering (progress) (0, 3, 3)Rerun
deferred: jQuery.Deferred.then - deferred (done) (0, 3, 3)Rerun
deferred: jQuery.Deferred.then - deferred (fail) (0, 3, 3)Rerun
deferred: jQuery.Deferred.then - deferred (progress) (0, 3, 3)Rerun
deferred: jQuery.Deferred.then - context (0, 4, 4)Rerun
deferred: jQuery.when (0, 34, 34)Rerun
deferred: jQuery.when - joined (0, 119, 119)Rerun
support: boxModel (0, 1, 1)Rerun
support: body background is not lost if set prior to loading jQuery (#9238) (0, 2, 2)Rerun
support: A background on the testElement does not cause IE8 to crash (#9823) (0, 1, 1)Rerun
data: expando (0, 1, 1)Rerun
data: jQuery.data (0, 124, 124)Rerun
data: jQuery.acceptData (0, 7, 7)Rerun
data: .data() (0, 5, 5)Rerun
data: .data(String) and .data(String, Object) (0, 29, 29)Rerun
data: data-* attributes (0, 40, 40)Rerun
data: .data(Object) (0, 4, 4)Rerun
data: jQuery.removeData (0, 10, 10)Rerun
data: .removeData() (0, 6, 6)Rerun
data: JSON serialization (#8108) (0, 1, 1)Rerun
data: jQuery.data should follow html5 specification regarding camel casing (0, 10, 10)Rerun
data: jQuery.data should not miss data with preset hyphenated property names (0, 2, 2)Rerun
data: jQuery.data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values (0, 24, 24)Rerun
data: jQuery.data supports interoperable removal of hyphenated/camelCase properties (0, 27, 27)Rerun
data: Triggering the removeData should not throw exceptions. (#10080) (0, 1, 1)Rerun
data: Only check element attributes once when calling .data() - #8909 (0, 2, 2)Rerun
data: JSON data- attributes can have newlines (0, 1, 1)Rerun
queue: queue() with other types (0, 14, 14)Rerun
queue: queue(name) passes in the next item in the queue as a parameter (0, 2, 2)Rerun
queue: queue() passes in the next item in the queue as a parameter to fx queues (0, 3, 3)Rerun
queue: callbacks keep their place in the queue (0, 5, 5)Rerun
queue: delay() (0, 2, 2)Rerun
queue: clearQueue(name) clears the queue (0, 2, 2)Rerun
queue: clearQueue() clears the fx queue (0, 1, 1)Rerun
queue: fn.promise() - called when fx queue is empty (0, 3, 3)Rerun
queue: fn.promise( "queue" ) - called whenever last queue function is dequeued (0, 5, 5)Rerun
queue: fn.promise( "queue" ) - waits for animation to complete before resolving (0, 2, 2)Rerun
queue: .promise(obj) (0, 2, 2)Rerun
queue: delay() can be stopped (0, 3, 3)Rerun
queue: queue stop hooks (0, 2, 2)Rerun
attributes: jQuery.propFix integrity test (0, 1, 1)Rerun
attributes: attr(String) (0, 46, 46)Rerun
attributes: attr(String) in XML Files (0, 3, 3)Rerun
attributes: attr(String, Function) (0, 2, 2)Rerun
attributes: attr(Hash) (0, 3, 3)Rerun
attributes: attr(String, Object) (0, 81, 81)Rerun
attributes: attr(jquery_method) (0, 9, 9)Rerun
attributes: attr(String, Object) - Loaded via XML document (0, 2, 2)Rerun
attributes: attr('tabindex') (0, 8, 8)Rerun
attributes: attr('tabindex', value) (0, 9, 9)Rerun
attributes: removeAttr(String) (0, 12, 12)Rerun
attributes: removeAttr(String) in XML (0, 7, 7)Rerun
attributes: removeAttr(Multi String, variable space width) (0, 8, 8)Rerun
attributes: prop(String, Object) (0, 31, 31)Rerun
attributes: prop('tabindex') (0, 8, 8)Rerun
attributes: prop('tabindex', value) (0, 9, 9)Rerun
attributes: removeProp(String) (0, 6, 6)Rerun
attributes: val() (0, 26, 26)Rerun
attributes: val() respects numbers without exception (Bug #9319) (0, 4, 4)Rerun
attributes: val(String/Number) (0, 8, 8)Rerun
attributes: val(Function) (0, 8, 8)Rerun
attributes: val(Array of Numbers) (Bug #7123) (0, 4, 4)Rerun
attributes: val(Function) with incoming value (0, 10, 10)Rerun
attributes: val(select) after form.reset() (Bug #2551) (0, 3, 3)Rerun
attributes: addClass(String) (0, 9, 9)Rerun
attributes: addClass(Function) (0, 9, 9)Rerun
attributes: addClass(Function) with incoming value (0, 48, 48)Rerun
attributes: removeClass(String) - simple (0, 7, 7)Rerun
attributes: removeClass(Function) - simple (0, 7, 7)Rerun
attributes: removeClass(Function) with incoming value (0, 48, 48)Rerun
attributes: removeClass() removes duplicates (0, 1, 1)Rerun
attributes: toggleClass(String|boolean|undefined[, boolean]) (0, 17, 17)Rerun
attributes: toggleClass(Function[, boolean]) (0, 17, 17)Rerun
attributes: toggleClass(Fucntion[, boolean]) with incoming value (0, 14, 14)Rerun
attributes: addClass, removeClass, hasClass (0, 17, 17)Rerun
attributes: contents().hasClass() returns correct values (0, 2, 2)Rerun
attributes: coords returns correct values in IE6/IE7, see #10828 (0, 2, 2)Rerun
event: null or undefined handler (0, 2, 2)Rerun
event: bind(),live(),delegate() with non-null,defined data (0, 3, 3)Rerun
event: Handler changes and .trigger() order (0, 1, 1)Rerun
event: bind(), with data (0, 4, 4)Rerun
event: click(), with data (0, 3, 3)Rerun
event: bind(), with data, trigger with data (0, 4, 4)Rerun
event: bind(), multiple events at once (0, 2, 2)Rerun
event: bind(), five events at once (0, 1, 1)Rerun
event: bind(), multiple events at once and namespaces (0, 7, 7)Rerun
event: bind(), namespace with special add (0, 27, 27)Rerun
event: bind(), no data (0, 1, 1)Rerun
event: bind/one/unbind(Object) (0, 6, 6)Rerun
event: live/die(Object), delegate/undelegate(String, Object) (0, 6, 6)Rerun
event: live/delegate immediate propagation (0, 2, 2)Rerun
event: bind/delegate bubbling, isDefaultPrevented (0, 2, 2)Rerun
event: bind(), iframes (0, 1, 1)Rerun
event: bind(), trigger change on select (0, 5, 5)Rerun
event: bind(), namespaced events, cloned events (0, 18, 18)Rerun
event: bind(), multi-namespaced events (0, 6, 6)Rerun
event: bind(), with same function (0, 2, 2)Rerun
event: bind(), make sure order is maintained (0, 1, 1)Rerun
event: bind(), with different this object (0, 4, 4)Rerun
event: bind(name, false), unbind(name, false) (0, 3, 3)Rerun
event: live(name, false), die(name, false) (0, 3, 3)Rerun
event: delegate(selector, name, false), undelegate(selector, name, false) (0, 3, 3)Rerun
event: bind()/trigger()/unbind() on plain object (0, 7, 7)Rerun
event: unbind(type) (0, 1, 1)Rerun
event: unbind(eventObject) (0, 4, 4)Rerun
event: hover() and hover pseudo-event (0, 3, 3)Rerun
event: mouseover triggers mouseenter (0, 1, 1)Rerun
event: withinElement implemented with jQuery.contains() (0, 1, 1)Rerun
event: mouseenter, mouseleave don't catch exceptions (0, 2, 2)Rerun
event: trigger() shortcuts (0, 6, 6)Rerun
event: trigger() bubbling (0, 18, 18)Rerun
event: trigger(type, [data], [fn]) (0, 16, 16)Rerun
event: submit event bubbles on copied forms (#11649) (0, 3, 3)Rerun
event: change event bubbles on copied forms (#11796) (0, 3, 3)Rerun
event: trigger(eventObject, [data], [fn]) (0, 28, 28)Rerun
event: .trigger() bubbling on disconnected elements (#10489) (0, 2, 2)Rerun
event: .trigger() doesn't bubble load event (#10717) (0, 1, 1)Rerun
event: Delegated events in SVG (#10791) (0, 2, 2)Rerun
event: Delegated events in forms (#10844; #11145; #8165; #11382, #11764) (0, 5, 5)Rerun
event: Submit event can be stopped (#11049) (0, 1, 1)Rerun
event: on(beforeunload) creates/deletes window property instead of adding/removing event listener (0, 3, 3)Rerun
event: jQuery.Event( type, props ) (0, 5, 5)Rerun
event: jQuery.Event.currentTarget (0, 2, 2)Rerun
event: toggle(Function, Function, ...) (0, 16, 16)Rerun
event: .live()/.die() (0, 66, 66)Rerun
event: die all bound events (0, 1, 1)Rerun
event: live with multiple events (0, 1, 1)Rerun
event: live with namespaces (0, 15, 15)Rerun
event: live with change (0, 8, 8)Rerun
event: live with submit (0, 7, 7)Rerun
event: live with special events (0, 13, 13)Rerun
event: .delegate()/.undelegate() (0, 65, 65)Rerun
event: jQuery.off using dispatched jQuery.Event (0, 1, 1)Rerun
event: delegated event with delegateTarget-relative selector (0, 3, 3)Rerun
event: stopPropagation() stops directly-bound events on delegated target (0, 1, 1)Rerun
event: undelegate all bound events (0, 2, 2)Rerun
event: delegate with multiple events (0, 1, 1)Rerun
event: delegate with change (0, 8, 8)Rerun
event: delegate with submit (0, 2, 2)Rerun
event: undelegate() with only namespaces (0, 2, 2)Rerun
event: Non DOM element events (0, 1, 1)Rerun
event: inline handler returning false stops default (0, 1, 1)Rerun
event: window resize (0, 2, 2)Rerun
event: focusin bubbles (0, 2, 2)Rerun
event: custom events with colons (#3533, #8272) (0, 1, 1)Rerun
event: .on and .off (0, 9, 9)Rerun
event: special bind/delegate name mapping (0, 7, 7)Rerun
event: .on and .off, selective mixed removal (#10705) (0, 7, 7)Rerun
event: .on( event-map, null-selector, data ) #11130 (0, 1, 1)Rerun
event: clone() delegated events (#11076) (0, 3, 3)Rerun
event: fixHooks extensions (0, 2, 2)Rerun
event: jQuery.ready promise (0, 1, 1)Rerun
event: jQuery.ready synchronous load with long loading subresources (0, 1, 1)Rerun
event: jQuery.isReady (0, 2, 2)Rerun
event: jQuery ready (0, 10, 10)Rerun
event: change handler should be detached from element (0, 2, 2)Rerun
event: trigger click on checkbox, fires change event (0, 1, 1)Rerun
selector - jQuery only: element - jQuery only (0, 7, 7)Rerun
selector - jQuery only: class - jQuery only (0, 4, 4)Rerun
selector - jQuery only: attributes - jQuery only (0, 2, 2)Rerun
selector - jQuery only: pseudo - visibility (0, 9, 9)Rerun
selector - jQuery only: disconnected nodes (0, 4, 4)Rerun
selector - jQuery only: attributes - jQuery.attr (0, 35, 35)Rerun
selector - jQuery only: Sizzle cache collides with multiple Sizzles on a page (0, 3, 3)Rerun
traversing: find(String) (0, 5, 5)Rerun
traversing: find(node|jQuery object) (0, 11, 11)Rerun
traversing: is(String|undefined) (0, 30, 30)Rerun
traversing: is(jQuery) (0, 21, 21)Rerun
traversing: is() with positional selectors (0, 23, 23)Rerun
traversing: index() (0, 2, 2)Rerun
traversing: index(Object|String|undefined) (0, 16, 16)Rerun
traversing: filter(Selector|undefined) (0, 9, 9)Rerun
traversing: filter(Function) (0, 2, 2)Rerun
traversing: filter(Element) (0, 1, 1)Rerun
traversing: filter(Array) (0, 1, 1)Rerun
traversing: filter(jQuery) (0, 1, 1)Rerun
traversing: filter() with positional selectors (0, 19, 19)Rerun
traversing: closest() (0, 14, 14)Rerun
traversing: closest(jQuery) (0, 8, 8)Rerun
traversing: not(Selector|undefined) (0, 11, 11)Rerun
traversing: not(Element) (0, 1, 1)Rerun
traversing: not(Function) (0, 1, 1)Rerun
traversing: not(Array) (0, 2, 2)Rerun
traversing: not(jQuery) (0, 1, 1)Rerun
traversing: has(Element) (0, 3, 3)Rerun
traversing: has(Selector) (0, 5, 5)Rerun
traversing: has(Arrayish) (0, 4, 4)Rerun
traversing: addBack() (0, 5, 5)Rerun
traversing: siblings([String]) (0, 7, 7)Rerun
traversing: children([String]) (0, 3, 3)Rerun
traversing: parent([String]) (0, 5, 5)Rerun
traversing: parents([String]) (0, 5, 5)Rerun
traversing: parentsUntil([String]) (0, 9, 9)Rerun
traversing: next([String]) (0, 5, 5)Rerun
traversing: prev([String]) (0, 4, 4)Rerun
traversing: nextAll([String]) (0, 4, 4)Rerun
traversing: prevAll([String]) (0, 4, 4)Rerun
traversing: nextUntil([String]) (0, 11, 11)Rerun
traversing: prevUntil([String]) (0, 10, 10)Rerun
traversing: contents() (0, 12, 12)Rerun
traversing: add(String|Element|Array|undefined) (0, 16, 16)Rerun
traversing: add(String, Context) (0, 6, 6)Rerun
traversing: eq('-1') #10616 (0, 3, 3)Rerun
manipulation: text() (0, 5, 5)Rerun
manipulation: text(undefined) (0, 1, 1)Rerun
manipulation: text(String) (0, 4, 4)Rerun
manipulation: text(Function) (0, 4, 4)Rerun
manipulation: text(Function) with incoming value (0, 2, 2)Rerun
manipulation: wrap(String|Element) (0, 19, 19)Rerun
manipulation: wrap(Function) (0, 19, 19)Rerun
manipulation: wrap(Function) with index (#10177) (0, 6, 6)Rerun
manipulation: wrap(String) consecutive elements (#10177) (0, 12, 12)Rerun
manipulation: wrapAll(String|Element) (0, 8, 8)Rerun
manipulation: wrapInner(String|Element) (0, 11, 11)Rerun
manipulation: wrapInner(Function) (0, 11, 11)Rerun
manipulation: unwrap() (0, 9, 9)Rerun
manipulation: append(String|Element|Array&lt;Element&gt;|jQuery) (0, 58, 58)Rerun
manipulation: append(Function) (0, 58, 58)Rerun
manipulation: append(Function) with incoming value (0, 12, 12)Rerun
manipulation: append the same fragment with events (Bug #6997, 5566) (0, 2, 2)Rerun
manipulation: append HTML5 sectioning elements (Bug #6485) (0, 2, 2)Rerun
manipulation: HTML5 Elements inherit styles from style rules (Bug #10501) (0, 1, 1)Rerun
manipulation: html5 clone() cannot use the fragment cache in IE (#6485) (0, 1, 1)Rerun
manipulation: html(String) with HTML5 (Bug #6485) (0, 2, 2)Rerun
manipulation: IE8 serialization bug (0, 2, 2)Rerun
manipulation: html() object element #10324 (0, 1, 1)Rerun
manipulation: append(xml) (0, 1, 1)Rerun
manipulation: appendTo(String|Element|Array&lt;Element&gt;|jQuery) (0, 17, 17)Rerun
manipulation: prepend(String|Element|Array&lt;Element&gt;|jQuery) (0, 6, 6)Rerun
manipulation: prepend(Function) (0, 6, 6)Rerun
manipulation: prepend(Function) with incoming value (0, 10, 10)Rerun
manipulation: prependTo(String|Element|Array&lt;Element&gt;|jQuery) (0, 6, 6)Rerun
manipulation: before(String|Element|Array&lt;Element&gt;|jQuery) (0, 7, 7)Rerun
manipulation: before(Function) (0, 7, 7)Rerun
manipulation: before and after w/ empty object (#10812) (0, 2, 2)Rerun
manipulation: before and after on disconnected node (#10517) (0, 2, 2)Rerun
manipulation: insertBefore(String|Element|Array&lt;Element&gt;|jQuery) (0, 4, 4)Rerun
manipulation: after(String|Element|Array&lt;Element&gt;|jQuery) (0, 7, 7)Rerun
manipulation: after(Function) (0, 7, 7)Rerun
manipulation: insertAfter(String|Element|Array&lt;Element&gt;|jQuery) (0, 4, 4)Rerun
manipulation: replaceWith(String|Element|Array&lt;Element&gt;|jQuery) (0, 22, 22)Rerun
manipulation: replaceWith(Function) (0, 23, 23)Rerun
manipulation: replaceWith(string) for more than one element (0, 3, 3)Rerun
manipulation: replaceAll(String|Element|Array&lt;Element&gt;|jQuery) (0, 10, 10)Rerun
manipulation: jQuery.clone() (#8017) (0, 2, 2)Rerun
manipulation: clone() (#8070) (0, 2, 2)Rerun
manipulation: clone() (0, 44, 44)Rerun
manipulation: clone(script type=non-javascript) (#11359) (0, 3, 3)Rerun
manipulation: clone(form element) (Bug #3879, #6655) (0, 5, 5)Rerun
manipulation: clone(multiple selected options) (Bug #8129) (0, 1, 1)Rerun
manipulation: clone() on XML nodes (0, 2, 2)Rerun
manipulation: clone() on local XML nodes with html5 nodename (0, 2, 2)Rerun
manipulation: html(undefined) (0, 1, 1)Rerun
manipulation: html() on empty set (0, 1, 1)Rerun
manipulation: html(String) (0, 35, 35)Rerun
manipulation: html(Function) (0, 37, 37)Rerun
manipulation: html(Function) with incoming value (0, 20, 20)Rerun
manipulation: remove() (0, 9, 9)Rerun
manipulation: detach() (0, 9, 9)Rerun
manipulation: empty() (0, 3, 3)Rerun
manipulation: jQuery.cleanData (0, 14, 14)Rerun
manipulation: jQuery.buildFragment - no plain-text caching (Bug #6779) (0, 1, 1)Rerun
manipulation: jQuery.html - execute scripts escaped with html comment or CDATA (#9221) (0, 3, 3)Rerun
manipulation: jQuery.buildFragment - plain objects are not a document #8950 (0, 1, 1)Rerun
manipulation: jQuery.clone - no exceptions for object elements #9587 (0, 1, 1)Rerun
manipulation: jQuery(<tag>) & wrap[Inner/All]() handle unknown elems (#10667) (0, 2, 2)Rerun
manipulation: Cloned, detached HTML5 elems (#10667,10670) (0, 7, 7)Rerun
manipulation: jQuery.fragments cache expectations (0, 10, 10)Rerun
manipulation: Guard against exceptions when clearing safeChildNodes (0, 1, 1)Rerun
manipulation: Ensure oldIE creates a new set on appendTo (#8894) (0, 5, 5)Rerun
manipulation: html() - script exceptions bubble (#11743) (0, 2, 2)Rerun
manipulation: checked state is cloned with clone() (0, 2, 2)Rerun
manipulation: manipulate mixed jQuery and text (#12384, #12346) (0, 2, 2)Rerun
manipulation: buildFragment works even if document[0] is iframe's window object in IE9/10 (#12266) (0, 1, 1)Rerun
css: css(String|Hash) (0, 46, 46)Rerun
css: css() explicit and relative values (0, 29, 29)Rerun
css: css(String, Object) (0, 22, 22)Rerun
css: css(String, Function) (0, 3, 3)Rerun
css: css(String, Function) with incoming value (0, 3, 3)Rerun
css: css(Object) where values are Functions (0, 3, 3)Rerun
css: css(Object) where values are Functions with incoming values (0, 3, 3)Rerun
css: show(); hide() (0, 22, 22)Rerun
css: show() resolves correct default display #8099 (0, 7, 7)Rerun
css: show() resolves correct default display, detached nodes (#10006) (0, 11, 11)Rerun
css: toggle() (0, 9, 9)Rerun
css: hide hidden elements (bug #7141) (0, 3, 3)Rerun
css: jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) (0, 4, 4)Rerun
css: :visible selector works properly on table elements (bug #4512) (0, 1, 1)Rerun
css: :visible selector works properly on children with a hidden parent (bug #4512) (0, 1, 1)Rerun
css: internal ref to elem.runtimeStyle (bug #7608) (0, 1, 1)Rerun
css: marginRight computed style (bug #3333) (0, 1, 1)Rerun
css: box model properties incorrectly returning % instead of px, see #10639 and #12088 (0, 2, 2)Rerun
css: jQuery.cssProps behavior, (bug #8402) (0, 2, 2)Rerun
css: widows & orphans #8936 (2, 2, 4)Rerun
widows correctly start with value 0
Expected:   
0
Result:   
"2"
Diff:   
0 "2" 
Source:   
    at Object.<anonymous> (http://localhost:22222/jquery/test/unit/css.js:694:3)
    at Test.run (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:136:18)
    at http://localhost:22222/jquery/test/qunit/qunit/qunit.js:279:10
    at process (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:1277:24)
    at http://localhost:22222/jquery/test/qunit/qunit/qunit.js:383:5
orphans correctly start with value 0
Expected:   
0
Result:   
"2"
Diff:   
0 "2" 
Source:   
    at Object.<anonymous> (http://localhost:22222/jquery/test/unit/css.js:695:3)
    at Test.run (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:136:18)
    at http://localhost:22222/jquery/test/qunit/qunit/qunit.js:279:10
    at process (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:1277:24)
    at http://localhost:22222/jquery/test/qunit/qunit/qunit.js:383:5
widows correctly set to 3
orphans correctly set to 3
css: can't get css for disconnected in IE<9, see #10254 and #8388 (0, 2, 2)Rerun
css: can't get background-position in IE<9, see #10796 (0, 8, 8)Rerun
css: percentage properties for bottom and right in IE<9 should not be incorrectly transformed to pixels, see #11311 (0, 1, 1)Rerun
css: percentage properties for left and top should be transformed to pixels, see #9505 (0, 2, 2)Rerun
css: Do not append px to 'fill-opacity' #9548 (0, 1, 1)Rerun
css: css('width') and css('height') should respect box-sizing, see #11004 (0, 4, 4)Rerun
css: certain css values of 'normal' should be convertable to a number, see #8627 (0, 2, 2)Rerun
css: cssHooks - expand (0, 15, 15)Rerun
serialize: jQuery.param() (0, 22, 22)Rerun
serialize: jQuery.param() Constructed prop values (0, 4, 4)Rerun
serialize: serialize() (0, 5, 5)Rerun
ajax: jQuery.ajax() - success callbacks (0, 8, 8)Rerun
ajax: jQuery.ajax() - success callbacks - (url, options) syntax (0, 8, 8)Rerun
ajax: jQuery.ajax() - success callbacks (late binding) (0, 8, 8)Rerun
ajax: jQuery.ajax() - success callbacks (oncomplete binding) (0, 8, 8)Rerun
ajax: jQuery.ajax() - success callbacks (very late binding) (0, 8, 8)Rerun
ajax: jQuery.ajax() - success callbacks (order) (0, 1, 1)Rerun
ajax: jQuery.ajax() - error callbacks (0, 8, 8)Rerun
ajax: jQuery.ajax - multiple method signatures introduced in 1.5 ( #8107) (0, 4, 4)Rerun
ajax: jQuery.ajax() - textStatus and errorThrown values (0, 4, 4)Rerun
ajax: jQuery.ajax() - responseText on error (0, 1, 1)Rerun
ajax: .ajax() - retry with jQuery.ajax( this ) (0, 2, 2)Rerun
ajax: .ajax() - headers (0, 4, 4)Rerun
ajax: .ajax() - Accept header (0, 1, 1)Rerun
ajax: .ajax() - contentType (0, 2, 2)Rerun
ajax: .ajax() - protocol-less urls (0, 1, 1)Rerun
ajax: .ajax() - hash (0, 3, 3)Rerun
ajax: jQuery ajax - cross-domain detection (0, 6, 6)Rerun
ajax: .load() - 404 error callbacks (0, 6, 6)Rerun
ajax: jQuery.ajax() - abort (0, 8, 8)Rerun
ajax: Ajax events with context (0, 14, 14)Rerun
ajax: jQuery.ajax context modification (0, 1, 1)Rerun
ajax: jQuery.ajax context modification through ajaxSetup (0, 4, 4)Rerun
ajax: jQuery.ajax() - disabled globals (0, 3, 3)Rerun
ajax: jQuery.ajax - xml: non-namespace elements inside namespaced elements (0, 3, 3)Rerun
ajax: jQuery.ajax - xml: non-namespace elements inside namespaced elements (over JSONP) (0, 3, 3)Rerun
ajax: jQuery.ajax - HEAD requests (0, 2, 2)Rerun
ajax: jQuery.ajax - beforeSend (0, 1, 1)Rerun
ajax: jQuery.ajax - beforeSend, cancel request (#2688) (0, 2, 2)Rerun
ajax: jQuery.ajax - beforeSend, cancel request manually (0, 2, 2)Rerun
ajax: jQuery.ajax - dataType html (0, 5, 5)Rerun
ajax: synchronous request (0, 1, 1)Rerun
ajax: synchronous request with callbacks (0, 2, 2)Rerun
ajax: pass-through request object (0, 8, 8)Rerun
ajax: ajax cache (0, 18, 18)Rerun
ajax: load(String) (0, 2, 2)Rerun
ajax: load(String,null) (0, 2, 2)Rerun
ajax: load(String,undefined) (0, 2, 2)Rerun
ajax: load('url selector') (0, 1, 1)Rerun
ajax: load(String, Function) with ajaxSetup on dataType json, see #2046 (0, 1, 1)Rerun
ajax: load(String, Function) - simple: inject text into DOM (0, 2, 2)Rerun
ajax: load(String, Function) - check scripts (0, 7, 7)Rerun
ajax: load(String, Function) - check file with only a script tag (0, 3, 3)Rerun
ajax: load(String, Function) - dataFilter in ajaxSettings (0, 2, 2)Rerun
ajax: load(String, Object, Function) (0, 2, 2)Rerun
ajax: load(String, String, Function) (0, 2, 2)Rerun
ajax: load() - data specified in ajaxSettings is merged in (#10524) (0, 1, 1)Rerun
ajax: load() - callbacks get the correct parameters (0, 8, 8)Rerun
ajax: jQuery.get(String, Function) - data in ajaxSettings (#8277) (0, 1, 1)Rerun
ajax: jQuery.get(String, Hash, Function) - parse xml and use text() on nodes (0, 2, 2)Rerun
ajax: jQuery.getScript(String, Function) - with callback (0, 3, 3)Rerun
ajax: jQuery.getScript(String, Function) - no callback (0, 1, 1)Rerun
ajax: jQuery.ajax() - JSONP, Same Domain (0, 24, 24)Rerun
ajax: jQuery.ajax() - JSONP, Cross Domain (0, 24, 24)Rerun
ajax: jQuery.ajax() - script, Remote (0, 2, 2)Rerun
ajax: jQuery.ajax() - script, Remote with POST (0, 3, 3)Rerun
ajax: jQuery.ajax() - script, Remote with scheme-less URL (0, 2, 2)Rerun
ajax: jQuery.ajax() - malformed JSON (0, 2, 2)Rerun
ajax: jQuery.ajax() - script, throws exception (#11743) (0, 1, 1)Rerun
ajax: jQuery.ajax() - script by content-type (0, 2, 2)Rerun
ajax: jQuery.ajax() - json by content-type (0, 5, 5)Rerun
ajax: jQuery.ajax() - json by content-type disabled with options (0, 6, 6)Rerun
ajax: jQuery.getJSON(String, Hash, Function) - JSON array (0, 5, 5)Rerun
ajax: jQuery.getJSON(String, Function) - JSON object (0, 2, 2)Rerun
ajax: jQuery.getJSON - Using Native JSON (0, 2, 2)Rerun
ajax: jQuery.getJSON(String, Function) - JSON object with absolute url to local content (0, 2, 2)Rerun
ajax: jQuery.post - data (0, 3, 3)Rerun
ajax: jQuery.post(String, Hash, Function) - simple with xml (0, 4, 4)Rerun
ajax: jQuery.ajaxSetup({timeout: Number}) - with global timeout (0, 1, 1)Rerun
ajax: jQuery.ajaxSetup({timeout: Number}) with localtimeout (0, 1, 1)Rerun
ajax: jQuery.ajax - simple get (0, 1, 1)Rerun
ajax: jQuery.ajax - simple post (0, 1, 1)Rerun
ajax: ajaxSetup() (0, 1, 1)Rerun
ajax: data option: evaluate function values (#2806) (0, 1, 1)Rerun
ajax: data option: empty bodies for non-GET requests (0, 1, 1)Rerun
ajax: jQuery.ajax - If-Modified-Since support (cache) (0, 3, 3)Rerun
ajax: jQuery.ajax - Etag support (cache) (0, 3, 3)Rerun
ajax: jQuery.ajax - If-Modified-Since support (no cache) (0, 3, 3)Rerun
ajax: jQuery.ajax - Etag support (no cache) (0, 3, 3)Rerun
ajax: jQuery ajax - failing cross-domain (0, 2, 2)Rerun
ajax: jQuery ajax - atom+xml (0, 1, 1)Rerun
ajax: jQuery.ajax - Location object as url (#7531) (0, 1, 1)Rerun
ajax: jQuery.ajax - Context with circular references (#9887) (0, 2, 2)Rerun
ajax: jQuery.ajax - statusText (0, 3, 3)Rerun
ajax: jQuery.ajax - statusCode (0, 20, 20)Rerun
ajax: jQuery.ajax - transitive conversions (0, 8, 8)Rerun
ajax: jQuery.ajax - overrideMimeType (0, 2, 2)Rerun
ajax: jQuery.ajax - abort in prefilter (0, 1, 1)Rerun
ajax: jQuery.ajax - loading binary data shouldn't throw an exception in IE (#11426) (0, 1, 1)Rerun
ajax: jQuery.domManip - no side effect because of ajaxSetup or global events (#11264) (0, 1, 1)Rerun
ajax: jQuery.domManip - script in comments are properly evaluated (#11402) (0, 2, 2)Rerun
ajax: jQuery.ajax - active counter (0, 1, 1)Rerun
effects: sanity check (0, 1, 1)Rerun
effects: show() (0, 26, 26)Rerun
effects: show(Number) - other displays (0, 15, 15)Rerun
effects: Persist correct display value (0, 3, 3)Rerun
effects: animate(Hash, Object, Function) (0, 1, 1)Rerun
effects: animate negative height (0, 1, 1)Rerun
effects: animate negative margin (0, 1, 1)Rerun
effects: animate negative margin with px (0, 1, 1)Rerun
effects: animate negative padding (0, 1, 1)Rerun
effects: animate block as inline width/height (0, 3, 3)Rerun
effects: animate native inline width/height (0, 3, 3)Rerun
effects: animate block width/height (0, 3, 3)Rerun
effects: animate table width/height (0, 1, 1)Rerun
effects: animate table-row width/height (0, 3, 3)Rerun
effects: animate table-cell width/height (0, 3, 3)Rerun
effects: animate percentage(%) on width/height (0, 2, 2)Rerun
effects: animate resets overflow-x and overflow-y when finished (0, 2, 2)Rerun
effects: animate option { queue: false } (0, 2, 2)Rerun
effects: animate option { queue: true } (0, 2, 2)Rerun
effects: animate option { queue: 'name' } (0, 5, 5)Rerun
effects: animate with no properties (0, 2, 2)Rerun
effects: animate duration 0 (0, 11, 11)Rerun
effects: animate hyphenated properties (0, 1, 1)Rerun
effects: animate non-element (0, 1, 1)Rerun
effects: stop() (0, 4, 4)Rerun
effects: stop() - several in queue (0, 3, 3)Rerun
effects: stop(clearQueue) (0, 4, 4)Rerun
effects: stop(clearQueue, gotoEnd) (0, 1, 1)Rerun
effects: stop( queue, ..., ... ) - Stop single queues (0, 3, 3)Rerun
effects: toggle() (0, 6, 6)Rerun
effects: jQuery.fx.prototype.cur() - <1.8 Back Compat (1, 6, 7)Rerun
Return the same value as jQuery.css for complex properties (bug #7912)
Return simple values parsed as Float
Expected:   
5
Result:   
4.66667
Diff:   
5 4.66667 
Source:   
    at Object.<anonymous> (http://localhost:22222/jquery/test/unit/effects.js:757:2)
    at Test.run (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:136:18)
    at http://localhost:22222/jquery/test/qunit/qunit/qunit.js:279:10
    at process (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:1277:24)
    at http://localhost:22222/jquery/test/qunit/qunit/qunit.js:383:5
hook used
hook used
Return 0 when jQuery.css returns an empty string
Return 0 when jQuery.css returns 'auto'
support negative values < -10000 (bug #7193)
effects: JS Overflow and Display (0, 2, 2)Rerun
effects: CSS Overflow and Display (0, 2, 2)Rerun
effects: CSS Auto to 0 (0, 6, 6)Rerun
effects: CSS Auto to 50 (0, 6, 6)Rerun
effects: CSS Auto to 100 (0, 6, 6)Rerun
effects: CSS Auto to show (0, 5, 5)Rerun
effects: CSS Auto to hide (0, 4, 4)Rerun
effects: JS Auto to 0 (0, 6, 6)Rerun
effects: JS Auto to 50 (0, 6, 6)Rerun
effects: JS Auto to 100 (0, 6, 6)Rerun
effects: JS Auto to show (0, 5, 5)Rerun
effects: JS Auto to hide (0, 4, 4)Rerun
effects: CSS 100 to 0 (0, 6, 6)Rerun
effects: CSS 100 to 50 (0, 6, 6)Rerun
effects: CSS 100 to 100 (0, 6, 6)Rerun
effects: CSS 100 to show (0, 5, 5)Rerun
effects: CSS 100 to hide (0, 4, 4)Rerun
effects: JS 100 to 0 (0, 6, 6)Rerun
effects: JS 100 to 50 (0, 6, 6)Rerun
effects: JS 100 to 100 (0, 6, 6)Rerun
effects: JS 100 to show (0, 5, 5)Rerun
effects: JS 100 to hide (0, 4, 4)Rerun
effects: CSS 50 to 0 (0, 6, 6)Rerun
effects: CSS 50 to 50 (0, 6, 6)Rerun
effects: CSS 50 to 100 (0, 6, 6)Rerun
effects: CSS 50 to show (0, 5, 5)Rerun
effects: CSS 50 to hide (0, 4, 4)Rerun
effects: JS 50 to 0 (0, 6, 6)Rerun
effects: JS 50 to 50 (0, 6, 6)Rerun
effects: JS 50 to 100 (0, 6, 6)Rerun
effects: JS 50 to show (0, 5, 5)Rerun
effects: JS 50 to hide (0, 4, 4)Rerun
effects: CSS 0 to 0 (0, 6, 6)Rerun
effects: CSS 0 to 50 (0, 6, 6)Rerun
effects: CSS 0 to 100 (0, 6, 6)Rerun
effects: CSS 0 to show (0, 5, 5)Rerun
effects: CSS 0 to hide (0, 4, 4)Rerun
effects: JS 0 to 0 (0, 6, 6)Rerun
effects: JS 0 to 50 (0, 6, 6)Rerun
effects: JS 0 to 100 (0, 6, 6)Rerun
effects: JS 0 to show (0, 5, 5)Rerun
effects: JS 0 to hide (0, 4, 4)Rerun
effects: Chain fadeOut fadeIn (0, 5, 5)Rerun
effects: Chain fadeIn fadeOut (0, 5, 5)Rerun
effects: Chain hide show (0, 5, 5)Rerun
effects: Chain show hide (0, 5, 5)Rerun
effects: Chain show hide with easing and callback (0, 5, 5)Rerun
effects: Chain toggle in (0, 5, 5)Rerun
effects: Chain toggle out (0, 5, 5)Rerun
effects: Chain toggle out with easing and callback (0, 5, 5)Rerun
effects: Chain slideDown slideUp (0, 5, 5)Rerun
effects: Chain slideUp slideDown (0, 5, 5)Rerun
effects: Chain slideUp slideDown with easing and callback (0, 5, 5)Rerun
effects: Chain slideToggle in (0, 5, 5)Rerun
effects: Chain slideToggle out (0, 5, 5)Rerun
effects: Chain fadeToggle in (0, 5, 5)Rerun
effects: Chain fadeToggle out (0, 5, 5)Rerun
effects: Chain fadeTo 0.5 1.0 with easing and callback) (0, 5, 5)Rerun
effects: jQuery.show('fast') doesn't clear radio buttons (bug #1095) (0, 4, 4)Rerun
effects: slideToggle().stop().slideToggle() (0, 8, 8)Rerun
effects: fadeToggle().stop().fadeToggle() (0, 8, 8)Rerun
effects: toggle().stop().toggle() (0, 8, 8)Rerun
effects: animate with per-property easing (0, 5, 5)Rerun
effects: animate with CSS shorthand properties (0, 11, 11)Rerun
effects: hide hidden elements, with animation (bug #7141) (0, 3, 3)Rerun
effects: animate unit-less properties (#4966) (0, 2, 2)Rerun
effects: animate properties missing px w/ opacity as last (#9074) (0, 6, 6)Rerun
effects: callbacks should fire in correct order (#9100) (0, 1, 1)Rerun
effects: callbacks that throw exceptions will be removed (#5684) (0, 2, 2)Rerun
effects: animate will scale margin properties individually (0, 2, 2)Rerun
effects: Do not append px to 'fill-opacity' #9548 (0, 1, 1)Rerun
effects: jQuery.Animation( object, props, opts ) (0, 4, 4)Rerun
effects: Animate Option: step: function( percent, tween ) (0, 1, 1)Rerun
effects: Animate callbacks have correct context (0, 2, 2)Rerun
effects: User supplied callback called after show when fx off (#8892) (0, 2, 2)Rerun
effects: animate should set display for disconnected nodes (0, 18, 18)Rerun
effects: Animation callback should not show animated element as animated (#7157) (0, 1, 1)Rerun
effects: hide called on element within hidden parent should set display to none (#10045) (0, 3, 3)Rerun
effects: hide, fadeOut and slideUp called on element width height and width = 0 should set display to none (0, 5, 5)Rerun
effects: Handle queue:false promises (0, 10, 10)Rerun
effects: multiple unqueued and promise (0, 4, 4)Rerun
effects: animate does not change start value for non-px animation (#7109) (0, 1, 1)Rerun
effects: non-px animation handles non-numeric start (#11971) (0, 2, 2)Rerun
effects: Animation callbacks (#11797) (0, 15, 15)Rerun
effects: Animate properly sets overflow hidden when animating width/height (#12117) (0, 4, 4)Rerun
effects: Animations with 0 duration don't ease (#12273) (0, 1, 1)Rerun
offset: empty set (0, 2, 2)Rerun
offset: object without getBoundingClientRect (0, 2, 2)Rerun
offset: disconnected node (0, 2, 2)Rerun
offset: absolute (0, 4, 4)Rerun
offset: absolute (0, 178, 178)Rerun
offset: relative (0, 60, 60)Rerun
offset: static (0, 80, 80)Rerun
offset: fixed (0, 30, 30)Rerun
offset: table (0, 4, 4)Rerun
offset: scroll (6, 18, 24)Rerun
jQuery('#scroll-1').offset().top
jQuery('#scroll-1').offset().left
jQuery('#scroll-1-1').offset().top
Expected:   
11
Result:   
10.6666259765625
Diff:   
11 10.6666259765625 
Source:   
    at http://localhost:22222/jquery/test/unit/offset.js:383:2
    at http://localhost:22222/jquery/test/data/testinit.js:192:10
jQuery('#scroll-1-1').offset().left
Expected:   
11
Result:   
10.6666259765625
Diff:   
11 10.6666259765625 
Source:   
    at http://localhost:22222/jquery/test/unit/offset.js:384:2
    at http://localhost:22222/jquery/test/data/testinit.js:192:10
jQuery('#scroll-1').scrollTop()
Expected:   
5
Result:   
5.333333492279053
Diff:   
5 5.333333492279053 
Source:   
    at http://localhost:22222/jquery/test/unit/offset.js:388:2
    at http://localhost:22222/jquery/test/data/testinit.js:192:10
jQuery('#scroll-1').scrollLeft()
Expected:   
5
Result:   
5.333333492279053
Diff:   
5 5.333333492279053 
Source:   
    at http://localhost:22222/jquery/test/unit/offset.js:389:2
    at http://localhost:22222/jquery/test/data/testinit.js:192:10
jQuery('#scroll-1-1').scrollTop()
jQuery('#scroll-1-1').scrollLeft()
.scrollTop(undefined) is chainable (#5571)
Expected:   
5
Result:   
5.333333492279053
Diff:   
5 5.333333492279053 
Source:   
    at http://localhost:22222/jquery/test/unit/offset.js:395:2
    at http://localhost:22222/jquery/test/data/testinit.js:192:10
.scrollLeft(undefined) is chainable (#5571)
Expected:   
5
Result:   
5.333333492279053
Diff:   
5 5.333333492279053 
Source:   
    at http://localhost:22222/jquery/test/unit/offset.js:396:2
    at http://localhost:22222/jquery/test/data/testinit.js:192:10
jQuery(window).scrollTop()
jQuery(window).scrollLeft()
jQuery(document).scrollTop()
jQuery(document).scrollLeft()
jQuery(window).scrollTop() other window
jQuery(window).scrollLeft() other window
jQuery(window).scrollTop() other document
jQuery(window).scrollLeft() other document
jQuery().scrollTop(100) testing setter on empty jquery object
jQuery().scrollLeft(100) testing setter on empty jquery object
jQuery().scrollTop(null) testing setter on empty jquery object
jQuery().scrollLeft(null) testing setter on empty jquery object
jQuery().scrollTop(100) testing setter on empty jquery object
jQuery().scrollLeft(100) testing setter on empty jquery object
offset: body (0, 2, 2)Rerun
offset: chaining (0, 3, 3)Rerun
offset: offsetParent (0, 12, 12)Rerun
offset: fractions (see #7730 and #7885) (1, 1, 2)Rerun
Check top
Expected:   
1000
Result:   
999.9896240234375
Diff:   
1000 999.9896240234375 
Source:   
    at Object.<anonymous> (http://localhost:22222/jquery/test/unit/offset.js:496:2)
    at Test.run (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:136:18)
    at http://localhost:22222/jquery/test/qunit/qunit/qunit.js:279:10
    at process (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:1277:24)
    at http://localhost:22222/jquery/test/qunit/qunit/qunit.js:383:5
Check left
dimensions: width() (0, 9, 9)Rerun
dimensions: width(Function) (0, 9, 9)Rerun
dimensions: width(Function(args)) (0, 2, 2)Rerun
dimensions: height() (0, 9, 9)Rerun
dimensions: height(Function) (0, 9, 9)Rerun
dimensions: height(Function(args)) (0, 2, 2)Rerun
dimensions: innerWidth() (0, 6, 6)Rerun
dimensions: innerHeight() (0, 6, 6)Rerun
dimensions: outerWidth() (0, 11, 11)Rerun
dimensions: child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #9441 #9300 (0, 16, 16)Rerun
dimensions: getting dimensions shouldnt modify runtimeStyle see #9233 (0, 1, 1)Rerun
dimensions: table dimensions (0, 2, 2)Rerun
dimensions: box-sizing:border-box child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #10413 (0, 16, 16)Rerun
dimensions: outerHeight() (0, 11, 11)Rerun
dimensions: passing undefined is a setter #5571 (0, 4, 4)Rerun
dimensions: getters on non elements should return null (0, 8, 8)Rerun
dimensions: setters with and without box-sizing:border-box (0, 20, 20)Rerun
dimensions: window vs. small document (0, 1, 1)Rerun
dimensions: window vs. large document (0, 2, 2)Rerun
deprecated: browser (0, 544, 544)Rerun
exports: amdModule (0, 1, 1)Rerun
Sizzle: selector: element (0, 36, 36)Rerun
Sizzle: selector: XML Document Selectors (0, 10, 10)Rerun
Sizzle: selector: broken (0, 21, 21)Rerun
Sizzle: selector: id (0, 31, 31)Rerun
Sizzle: selector: class (0, 24, 24)Rerun
Sizzle: selector: name (0, 15, 15)Rerun
Sizzle: selector: multiple (0, 6, 6)Rerun
Sizzle: selector: child and adjacent (0, 42, 42)Rerun
Sizzle: selector: attributes (0, 62, 62)Rerun
Sizzle: selector: pseudo - child (0, 42, 42)Rerun
Sizzle: selector: pseudo - misc (0, 42, 42)Rerun
Sizzle: selector: pseudo - :not (0, 43, 43)Rerun
Sizzle: selector: pseudo - position (0, 33, 33)Rerun
Sizzle: selector: pseudo - form (0, 10, 10)Rerun
Sizzle: selector: caching (0, 1, 1)Rerun
Sizzle: selector: Sizzle.contains (0, 16, 16)Rerun
See this blog entry for more information.

Here are some [links] in a normal paragraph: Google, Google Groups (Link). This link has class="blog": diveintomark

Everything inside the red border is inside a div with id="foo".

This is a normal link: Yahoo

This link has class="blog": Simon Willison's Weblog

Try them out:

Action: 
Test
 
Test
     
name
 
search
 Button 
foobar
 
Nothing
 
3
 Nothing123no value 
Nothing123no value 
1
  test element
Float test. 
 
  
?
Z
 
 
 
YES
     
me
  
ABC
 ABCABCABC 
YES
 
NO
   NONO NO 
NO
   
NO
 
hi there
Rice
Beans
Blinis
Tofu
I'm hungry. I should...
...Eat lots of food... | ...Eat a little food... | ...Eat no food... ...Eat a burger... ...Eat some funyuns... ...Eat some funyuns...
1 2
​
fadeInfadeInfadeOutshowshowhidetoggleintoggleintoggleoutslideUpslideUpslideDownslideToggleInslideToggleInslideToggleOutfadeToggleInfadeToggleInfadeToggleOutfadeTofadeTo