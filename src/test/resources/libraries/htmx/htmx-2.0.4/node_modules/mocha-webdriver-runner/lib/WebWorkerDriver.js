"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addWorkerSource = void 0;
var RemoteCommon_1 = require("./RemoteCommon");
var treesync_1 = require("@zbigg/treesync");
var BrowserDriver_1 = require("./BrowserDriver");
var MochaRemoteRunner_1 = require("./MochaRemoteRunner");
/**
 * Adds Web Worker instance which will send test events, when ran.
 *
 * Worker instance, must run tests using mocha instrumented by [[addMochaSource]].
 *
 * All test events from mocha running in worker will be forwarded to [[runRemoteMochaTest]]
 * through [[BrowserMessagePort]]
 * Example:
 *
 * const testsWorker = new Worker('./tests-worker.js);
 * MochaWebdriverClient.addWorkerSource(testsWorker);
 */
function addWorkerSource(worker) {
    RemoteCommon_1.runnerBackChannel.addEventListener("message", function (event) {
        var message = event.data;
        if (message && message.type === "mocha-run") {
            worker.postMessage(message);
        }
    });
    var firstMessage = true;
    worker.addEventListener("message", function (event) {
        if (firstMessage && BrowserDriver_1.queryStringRunnerOptions !== undefined) {
            worker.postMessage({
                type: "mocha-run",
                mochaOptions: BrowserDriver_1.queryStringRunnerOptions
            });
            firstMessage = false;
        }
        var message = event.data;
        RemoteCommon_1.runnerBackChannel.postMessage(message);
    });
    worker.addEventListener("error", function (event) {
        RemoteCommon_1.runnerBackChannel.postMessage({
            type: "err-unhandled-exception",
            message: "Unhandled error in Worker context.",
            error: treesync_1.buildMessage(event.error || event.message)
        });
    });
    if (BrowserDriver_1.queryStringRunnerOptions === undefined) {
        MochaRemoteRunner_1.runRemoteMochaTest(worker, {
            reporter: "html",
            captureConsoleLog: false,
            clientWaitsForOptions: true
        });
    }
}
exports.addWorkerSource = addWorkerSource;
