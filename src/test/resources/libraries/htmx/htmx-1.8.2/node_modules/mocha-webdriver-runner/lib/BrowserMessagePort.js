"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.BrowserMessagePort = void 0;
var page_event_queue_1 = require("./page-event-queue");
var MessagePortBase_1 = require("./MessagePortBase");
/**
 * Browser side of Worker-like channel between browser context.
 *
 * Sends messages serialized using [[createMochaStateSynchronizer]] using [[emitPageEvent]].
 */
var BrowserMessagePort = /** @class */ (function (_super) {
    __extends(BrowserMessagePort, _super);
    function BrowserMessagePort() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BrowserMessagePort.prototype.postMessage = function (message) {
        page_event_queue_1.emitPageEvent({
            type: "message",
            data: message
        });
    };
    BrowserMessagePort.prototype.doReceiveRemoteEvents = function () {
        var _this = this;
        return page_event_queue_1.fetchPageCommand().then(function (packet) {
            _this.dispatchEvent(packet);
        });
    };
    return BrowserMessagePort;
}(MessagePortBase_1.MessagePortBase));
exports.BrowserMessagePort = BrowserMessagePort;
